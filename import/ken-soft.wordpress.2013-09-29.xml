<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-09-29 15:17" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Ken-Soft</title>
	<link>http://ken-soft.com</link>
	<description>Just another WordPress site</description>
	<pubDate>Sun, 29 Sep 2013 15:17:02 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://ken-soft.com</wp:base_site_url>
	<wp:base_blog_url>http://ken-soft.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>kenny</wp:author_login><wp:author_email>kenneth.cason@gmail.com</wp:author_email><wp:author_display_name><![CDATA[kenny]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>Send SMS Messages to Every Cell Phone in America</title>
		<link>http://ken-soft.com/2008/12/24/send-sms-messages-to-every-cell-phone-in-america/</link>
		<pubDate>Wed, 24 Dec 2008 11:33:48 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[While sending SMS or MMS messages from your computer is not by any means a new technology, this is the first time that I have devoted the time to developing anything with it. It was definitely a fun experience. Again, I want to emphasize that I know this is not a new technology, but I feel that the structure of American cell phone E-mails is very prone to spam.

The idea came to me when I was in Japan last year. Phones in Japan have two primary methods for sending messages. C-mail (Cメール) and phone E-mail (携帯メール). Japanese phones can send messages that basically function like E-mail. It wasn't until then that it actually dawned on me that American phones must also have some sort of unique address, i.e. an E-mail address. Then a few Google searches away I found a nice site that lists a method for obtaining each phones unique email address. 

I expanded on the list by adding Japanese cell phone information as well. The List can be found at the bottom of this post. I will probably continually update this list in the future.

So what is so special about this? The fact that you can text message to virtually any phone in the world, may be very interesting to most people.  There are many exceptions of course, i.e. a that user can't receive text messages, or is blocking external mail. But there is an interesting difference between Japanese and American phone email addresses. For example, in Japan, a user of AU by KDDI　(<a href="http://www.au.kddi.com/" target="_blank">株式会社エーユー</a>), may have an email address like: <code>sushigadaisuki@ezweb.ne.jp</code> 
This is because the phone's emails are changeable by the user. This is much harder for Spammers to guess. In many cases information collecting companies are required to build up large data bases of peoples information in order to spam the masses. However, in America, where the prefix of the email is always comprised of a 10 digit phone number, A spammer could easily use this information to "Target" an area to spam or  if he really wanted to cause mischief, potentially send an Email to EVERY cell phone capable of receiving messages in the U.S., and other countries complying to similar E-mail formating standards. 

To compare the two methods numerically first lest look at an email comprised of 10 numbers. There are 10^10 = 10000000000 different combinations. A sample 10 digit email comprised of characters(a-z), numbers(0-9), and special characters(._-), thats (26+10+3)^10 = 39^10 = 8140406085191601. That is significantly larger, thus harder to systematically guess every unique email address. 
(Note: the list of special characters may not be complete, also, a Japanese email could be longer or shorter than 10 digits)

for example we know that all phones beginning with 479 fall into Northwest Arkansas. That leaves only 7 digits of possible combinations. 10^7 (10000000, which is much less than 10^10). However this is still a relatively large number. You could call a send mail function like mail() in php 10^7 times. To remove some wasteful calls of the mail(), you can look at the next 3 digits and find commonly used numbers in the area like 422 or others depending on where you are located. Then you only have 4 digits to iterate over (10^4 possibilities). This is much more feasible, and depending on what the intentions of the sender are, maybe even more useful as the messages are now target a region.

So know we know that we can send emails to specific phone emails, but how do you do it? It's also very simple. Again, another quick search on Google will yield many results for how to do it using PHP or various other methods. I prefer PHP. Just stick the below code in a file called something.php and run it over the server. With a few small modifications this can be implemented to send messages one at a time, bulk, or even iteratively send messages to a large number of cell phones. I would not encourage anyone to abuse this. Just some food for thought. 
<pre lang="php" line="1"><?php
  $to = "479XXXXXXX@txt.att.net";
  $subject = "Spam";
  $body = "This is Spam!!";
  mail($to, $subject, $body);
?></pre>

Here is a simple implementation that created. you can send messages to standarde emails like gmail, etc, and phones provided you know the phone number and carrier.
<a href="http://www.ken-soft.com/sms/sendsms.php">Send SMS using PHP</a>

I'm fairly certain a phone company and users alike would not appreciate this very much. Perhaps before this begins to be more and more exploited maybe phone companies should do more to allow users to have a more secure and unique phone E-mail address. Much like the phones of Japan. Then if you start getting more spam than you'd like, you can easily change your phone's E-mail, without having to change your phone number. ;)
Example usage: Your friend uses <b>AT&T</b> and his phone number is <b>1234567890</b>. 
The resulting email to send a SMS: <b>1234567890@txt.att.net</b>
and to send a MMS: <b>1234567890@mms.att.net</b>
Before anyone decides to go on a spamming spree I recommend consulting laws governing the usage of messaging and SPAM.<a href="http://www.fcc.gov/cgb/consumerfacts/canspam.html" target="_blank">FCC.GOV</a>
<a href='http://networking.ringofsaturn.com/Telecommunications/mobile-phone-emails.php' target="_blank">Expanded List of Phone and Pager Email Formats</a><table border="0" bgcolor="#222" color="#000000" align="left"><tr bgcolor="#111"><td>American Provider</td><td>Email Extension</td></tr><tr><td>AT&amp;T (Cingular)</td><td>@txt.att.net</td></tr><tr><td>Boost Mobile</td><td>@myboostmobile.com </td></tr><tr><td>Virgin Mobile USA</td><td>@vmobl.com</td></tr>
<tr><td>Verizon</td><td>@vtext.com</td></tr><tr><td>Alltel</td><td>@message.alltel.com</td></tr>
<tr><td>Sprint PCS</td><td>@messaging.sprintpcs.com</td></tr><tr><td>T-Mobile</td><td>@tmomail.net</td></tr><tr><td>Nextel</td><td>@messaging.nextel.com</td></tr><tr bgcolor="#111"><td>Japanese Provider</td><td>Email Extension</td></tr><tr><td>AU KDDI</td><td>@ezweb.ne.jp</td></tr><tr><td>NTT Docomo</td><td>@docomo.ne.jp</td></tr>
<tr><td>Softbank</td><td>@softbank.ne.jp</td></tr></table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date>2008-12-24 04:33:48</wp:post_date>
		<wp:post_date_gmt>2008-12-24 11:33:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>send-sms-messages-to-every-cell-phone-in-america</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cell-phone"><![CDATA[Cell Phone]]></category>
		<category domain="post_tag" nicename="computer"><![CDATA[Computer]]></category>
		<category domain="post_tag" nicename="japan"><![CDATA[Japan]]></category>
		<category domain="post_tag" nicename="message"><![CDATA[Message]]></category>
		<category domain="post_tag" nicename="mms"><![CDATA[MMS]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<category domain="post_tag" nicename="sms"><![CDATA[SMS]]></category>
		<category domain="post_tag" nicename="spam"><![CDATA[Spam]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1436</wp:comment_id>
			<wp:comment_author><![CDATA[buy melanotan 2]]></wp:comment_author>
			<wp:comment_author_email>GehrigPapazian450@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Www.yoUtube.com/watch?v=kIw4IXUnvnU</wp:comment_author_url>
			<wp:comment_author_IP>50.118.198.151</wp:comment_author_IP>
			<wp:comment_date>2013-07-29 18:57:14</wp:comment_date>
			<wp:comment_date_gmt>2013-07-29 18:57:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Woah this website is great everyone loves learning the articles you write. Stay within the beneficial works of art! You realize, nearly everyone is researching this information, you can help them greatly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375124234.974544048309326171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Creating Multi-lingual Webpages using PHP (part 1)</title>
		<link>http://ken-soft.com/2008/12/24/creating-multi-lingual-webpages-using-php-part-1/</link>
		<pubDate>Wed, 24 Dec 2008 11:35:31 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[For those who have ever tried to design a multilingual web page only to end up with 5 different index pages to represent your 5 different languages, this article may be of interest. I would like to point out that this solution is only one of many. While this solution is probably not best fit for large sites, I consider it a decent solution for smaller sites.
Here is the demo that we are going to create:
<a href="http://www.ken-soft.com/code/php/langsupport/index.php" target="_blank">Multilingual Page in PHP Example</a>
First create your main page: i.e. index.php
<pre lang="c" line="1"><?php
  $language = $_REQUEST['lang']; 
  if($language == 'en') {
    require 'languages/language.en.php';  
  } else if($language == 'jp') {
    require 'languages/language.jp.php';
  } else if($language == 'ko') {
    require 'languages/language.ko.php';
  } else if($language == 'zh') {
    require 'languages/language.zh.php';
  } else {
    require 'languages/language.en.php';  
  }
?>	  

<html>
<head>
  <title><?php print $txt['txt_lang']; ?></title>
</head>
<meta http-equiv='Content-Type' content='text/html; charset=<?php print $txt['txt_charset']; ?>'>
<style type='text/css'>
body{
padding:0;
background-color: #EEEEEE;
}
</style>

<body style='color:gray'>
<div class='nav0'>
<a  href='index.php?lang=en' title='English'><img  src='http://www.Ken-Soft.com/code/php/langsupport/languages/flag_english.gif' alt='English'\></a>
<a href='index.php?lang=jp' title='Japanese'><img src='http://www.Ken-Soft.com/code/php/langsupport/languages/flag_japan.gif' alt='Japanese'\></a></li>
<a  href='index.php?lang=ko' title='Korean'><img  src='http://www.Ken-Soft.com/code/php/langsupport/languages/flag_korean.gif' alt='Korean'\></a>
<a href='index.php?lang=zh' title='Chinese'><img src='http://www.Ken-Soft.com/code/php/langsupport/languages/flag_chinese.gif' alt='Chinese'\></a></li>
</div>	
<?php print $txt['txt_first_name']; ?> <br />
<?php print $txt['txt_last_name']; ?> <br />
<?php print $txt['txt_phone_number']; ?><br />
</body></pre>

Notice the lines at the top.
<pre lang="php" line="1">$language = $_REQUEST['lang'];</pre>If you have ever looked at the address bar when a php is loading you may have noticed something like www.something.com/index.php?lang=en
The $_REQUEST['lang']; call would return 'en'. This can be used for use inside your PHP script.
In the case of our index.php file, the 'lang' variable is used to determine what language file to include, and in the case that 'lang' is not defined, the English language file is included by default.
Next, notice how when the pages html is 'echoed' to the page every instance where text is displayed, it refers to the hash array<pre lang="php" line="1">$txt</pre>for example:<pre lang="php" line="1"><?php print $txt['txt_first_name']; ?></pre>This looks up the hash called 'txt_first_name' and writes the value.  Note: As well as using a hash array using Defines also works well.
Here are the sample language files used in the example.
language.en.php<pre lang="php" line="1"><?php
$txt = array (
  'txt_charset'                 => 'iso-8859-1',
  'txt_lang'               => 'Language',
  'txt_first_name'              => 'First Name',
  'txt_last_name'               => 'Last Name',
  'txt_phone_number'            => 'Phone Number'
);
?></pre>language.jp.php<pre lang="php" line="1"><?php
$txt = array (
  'txt_charset'                 => 'utf-8',
  'txt_lang'               => '言語',
  'txt_first_name'              => '名',
  'txt_last_name'               => '姓',
  'txt_phone_number'            => '電話番号'
);
?></pre>language.zh.php<pre lang="php" line="1"><?php
$txt = array (
  'txt_charset'                 => 'utf-8',
  'txt_lang'               => '语言',
  'txt_first_name'              => '名字',
  'txt_last_name'               => '姓',
  'txt_phone_number'            => '电话号码'
);
?></pre>language.ko.php
<pre lang="php" line="1"><?php
$txt = array (
  'txt_charset'                 => 'utf-8',
  'txt_lang'               => '언어 ',
  'txt_first_name'              => '이름',
  'txt_last_name'               => '성',
  'txt_phone_number'            => '전화 번호'
);
?></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2008-12-24 04:35:31</wp:post_date>
		<wp:post_date_gmt>2008-12-24 11:35:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-multi-lingual-webpages-using-php-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="category" nicename="language-software"><![CDATA[Language Software]]></category>
		<category domain="post_tag" nicename="linguistics"><![CDATA[Linguistics]]></category>
		<category domain="post_tag" nicename="multilingual"><![CDATA[multilingual]]></category>
		<category domain="post_tag" nicename="page"><![CDATA[page]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[Calítoe.:.]]></wp:comment_author>
			<wp:comment_author_email>calitoe@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.diletante.net</wp:comment_author_url>
			<wp:comment_author_IP>91.117.244.102</wp:comment_author_IP>
			<wp:comment_date>2009-11-16 03:28:32</wp:comment_date>
			<wp:comment_date_gmt>2009-11-16 10:28:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot! This is the best explanation of this feature I've found on the Net. I had to include a PHP script that I wanted to have localised in a WordPress installation that uses qtranslate and this works perfectly fine. :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>130.184.24.219</wp:comment_author_IP>
			<wp:comment_date>2009-11-17 20:27:39</wp:comment_date>
			<wp:comment_date_gmt>2009-11-18 03:27:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad it's useful! Btw, I cleaned it up a bit today. so please check it for any changes]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160</wp:comment_id>
			<wp:comment_author><![CDATA[.:.Callitoes Collectanea.:. &raquo; 16 November 2009 Lifestream digest / Vida virtual de esta semana]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.collectanea.org/2009/11/16-november-2009-lifestream-digest-vida-virtual-de-esta-semana/</wp:comment_author_url>
			<wp:comment_author_IP>72.29.70.67</wp:comment_author_IP>
			<wp:comment_date>2009-11-16 08:02:34</wp:comment_date>
			<wp:comment_date_gmt>2009-11-16 15:02:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Shared Ken-Soft » Creating Multi-lingual Webpages using PHP (part 1). [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>713</wp:comment_id>
			<wp:comment_author><![CDATA[Sammy]]></wp:comment_author>
			<wp:comment_author_email>wasamtech@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.139.120.158</wp:comment_author_IP>
			<wp:comment_date>2011-12-17 13:26:44</wp:comment_date>
			<wp:comment_date_gmt>2011-12-17 13:26:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks for this script. l found it very useful for my cms website. Please l have a problem when calling the language text in my SEO url. My url is  already mod-rewritten to &lt;?php echo &quot;<a>&raquo; ".$row['menu']."</a>" ?&gt; .

Without mod-write it is &lt;?php echo &quot;<a>&raquo; ".$row['menu']."</a>" ?&gt;

So how how call the current language to display current selected language from the visitor. Please note that when the site is at index.php it works fine with selected language. please help me with the code.

Thanks in Advance.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324144494.0246";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324128404.5903";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ルービックキューブの論理的なやり方（３x３x３）</title>
		<link>http://ken-soft.com/2008/12/24/%e3%83%ab%e3%83%bc%e3%83%93%e3%83%83%e3%82%af%e3%82%ad%e3%83%a5%e3%83%bc%e3%83%96%e3%81%ae%e8%ab%96%e7%90%86%e7%9a%84%e3%81%aa%e3%82%84%e3%82%8a%e6%96%b9%ef%bc%88%ef%bc%93x%ef%bc%93x%ef%bc%93%ef%bc%89/</link>
		<pubDate>Wed, 24 Dec 2008 18:17:19 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[<center>ルービックキューブの論理的なやり方</center>
<center>Kenny Cason(ケン・ケーソン)</center>
　まず、ルービックキューブの目的は同じ色を集めていくことである。それで、普通のルービックキューブの構成を教えてみよう。ルービックキューブは立方体で、各面は9個(3x3)の色の付いたシールがある。コーナキューブが8個で、エッジキューブが12個で各面の中心にあるセンターキューブが6個で構成されている。奇数のルービックキューブの中心のピースは回転するが移動しない。それゆえ、各面の正解の色が簡単に判る。次は解き方を考えてみよう。一番目、二面目、三面目をそれぞれ揃ていくという方法が一番よく使われている方法だろうが、意外にそうやって揃おうとすと、問題が出る。例えば、一面目を完全に揃えたら、二面目を揃う為に既に揃えた場所を崩さずに他の場所を揃えると、動作が非常に多くなるから、解くのももっと難しくなって、揃える前に諦める可能性がある。これは殆どの人の間違えの一つだと思う。インターネットでルービックキューブのやり方を検索すると、沢山のウェブサイトが出てくるが、殆どのウェブサイトは動作の暗記だけで、解き方はとても回りくどいだから、あまり役に立たないと思う。あと、自分で考えた方が価値があると思う。では、もっと分かりやすいやり方を教えてみよう。ルービックキューブのやり方は比較的に簡単だから、頑張って!

説明:
1。まず、ルービックキューブを回して色をバラバラに崩す。
2。一つのコーナキューブ以外、一面目を揃えていく。これを自力で出来なければ、もっと練習しなければならない。
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc2.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>こんなふうに一面目の間のピースを揃えていく。</td></table>
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc3.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>それで、一面目のコーナキューブを三つ揃えていく。どれでもいい。
</td></table>

3。二段目のエッジキューブを三つ揃えていく。
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc4.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>まずは、一面目のまだ揃ってないコナーキューブを二面目のまだ揃ってないエッジキューブの上に回す。</td></table>

4。一番下の段のエッジキューブを揃えていく。これらのキューブをそれぞれ三つの動作
で揃えていく。
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc5.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>まだ揃えてないエッジキューブを簡単に正しい場所に入れる為、一、二面目の二つの揃えてないキューブのスペースを使うコツがある。</td></table>
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc6.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>ステップ4が終わったら、すべてのエッジキューブが揃えている。</td></table>

5。次は、コナーキューブを揃えていく。残っているまだ揃っていないコナーキューブを正しい場所に入れていく。八回の動作で三個のコナーキューブが右・左回りに回転することができる。確率によると、一個から三個のキューブを同時に揃えることが出来る。
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc7.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>コナーキューブが揃うまで、回す。</td></table>

6。最後は一番難しそうかもしれないが、意外にコナーキューブの回転のやり方は分かりやすい。一個のコナーキューブを回したら、ルービックキューブを直す為に、他のスタートポイントを前のコナーキューブと同じ場所から逆に回さなければならない。
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc8.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>十四回の動作で二個のコナーキューブを逆に回す</td></table>

ルービックキューブをするにはコツは練習です。
頑張ってください！

PDFは下のリンクからダウンロードできます。
日本語：<a href="http://www.ken-soft.com/doc/rubikscube-jp.pdf">ダウンロード</a> 
英語<a href="http://www.ken-soft.com/doc/rubikscube-en.pdf">ダウンロード</a> ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2008-12-24 18:17:19</wp:post_date>
		<wp:post_date_gmt>2008-12-24 18:17:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%83%ab%e3%83%bc%e3%83%93%e3%83%83%e3%82%af%e3%82%ad%e3%83%a5%e3%83%bc%e3%83%96%e3%81%ae%e8%ab%96%e7%90%86%e7%9a%84%e3%81%aa%e3%82%84%e3%82%8a%e6%96%b9%ef%bc%88%ef%bc%93x%ef%bc%93x%ef%bc%93%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="japanese"><![CDATA[Japanese]]></category>
		<category domain="category" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="category" nicename="logic-problems"><![CDATA[Logic Problems]]></category>
		<category domain="category" nicename="rubiks-cube"><![CDATA[Rubik's Cube]]></category>
		<category domain="post_tag" nicename="%e3%82%84%e3%82%8a%e6%96%b9"><![CDATA[やり方]]></category>
		<category domain="post_tag" nicename="%e3%83%91%e3%82%ba%e3%83%ab"><![CDATA[パズル]]></category>
		<category domain="post_tag" nicename="%e3%83%ab%e3%83%bc%e3%83%93%e3%83%83%e3%82%af%e3%82%ad%e3%83%a5%e3%83%bc%e3%83%96"><![CDATA[ルービックキューブ]]></category>
		<category domain="post_tag" nicename="%e4%bb%95%e6%96%b9"><![CDATA[仕方]]></category>
		<category domain="post_tag" nicename="%e6%8f%83%e3%81%88%e6%96%b9"><![CDATA[揃え方]]></category>
		<category domain="post_tag" nicename="%e6%96%b9%e6%b3%95"><![CDATA[方法]]></category>
		<category domain="post_tag" nicename="%e8%80%83%e3%81%88%e6%96%b9"><![CDATA[考え方]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Emile]]></wp:comment_author>
			<wp:comment_author_email>emileaphaneuf@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.travelersunite.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>72.204.33.188</wp:comment_author_IP>
			<wp:comment_date>2009-05-31 00:47:38</wp:comment_date>
			<wp:comment_date_gmt>2009-05-31 07:47:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good job, man! That's deep!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>333</wp:comment_id>
			<wp:comment_author><![CDATA[Daiki]]></wp:comment_author>
			<wp:comment_author_email>kanto200@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.197.249.230</wp:comment_author_IP>
			<wp:comment_date>2011-08-05 12:55:58</wp:comment_date>
			<wp:comment_date_gmt>2011-08-05 12:55:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow Awesome !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312548958.4393";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312551739.5449";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Logical Method for Solving the 3x3x3 Rubik&#039;s Cube</title>
		<link>http://ken-soft.com/2008/12/24/a-simple-method-for-solving-the-rubiks-cube/</link>
		<pubDate>Thu, 25 Dec 2008 02:29:18 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[<center>How to Logically Solve a Rubik’s Cube</center>
<center>Kenneth Cason</center>
	First, as with any problem, it is important to understand what your objective is. In the case of the Rubik’s Cube, the main goal is to arrange the pieces in such a way that each side is the same color. Next lets luck at the structure of a standard 3x3 Rubik’s Cube. It is a cube composed of 6 sides, each side composed of 9 stickers (3x3). There are 8 corner pieces, 12 edge pieces and 6 center pieces (one on each side). It is also important to note that on all “odd” Rubik’s Cube’s the center pieces can rotate clockwise or counter clockwise, but the positions are fixed. “odd” meaning that the cube is a 3x3, 5x5, NxN, where N is an odd number. Also, because the center pieces are fixed it becomes immediately obvious which side is which color.
	Now that we know the basic structure of a Rubik’s Cube next lets think about strategies to solve it. First, lets examine what is probably the most common way to solve a Rubik’s Cube, the “Layer by Layer” method. For those not familiar with the Layer by Layer method, it involves solving the top, middle, and bottom layer in that order. However, despite this seeming to be the most logical way to approach the Rubik’s Cube, it is actually farm more difficult to solve in this manner. The problem is very simple. If you solve the first layer completely, in order to solve the second layer without messing up the solved first layer the moves grow in length and complexity. Then to solve the bottom layer without messing up the top and middle ayers, the moves again grow even more complex. To add a quantitative example, lets look at the case of trying to place a piece in the second row without messing up the first row it takes 7 permutations, and to switch the bottom layer edge pieces positions without messing up the top and middle layers, permutations can be as much as 15, in which you are more likely to give up before you ever derive on your own techniques. Not to say that it is impossible, but without any experience cubing can prove to be very difficult. However using the method In this paper, you can place all edge pieces in their correct positions in as  f approximately 3 permutations each. In a nutshell, this is where most people are mistaken, is thinking that the Layer by Layer method is the easiest way to solve a Rubik’s Cube when in fact mathematically it’s more complex to do so. 
	Also, until you are comfortable with the feel of a Rubik’s Cube, I highly recommend to avoid checking many websites for solutions as they primarily rely on rote memorization of techniques, though definitely useful after you’ve got a feel for the cube on your own. Plus it’s more rewarding when you do it on your own. Now, the next time you see someone solving a Rubik’s Cube using the Layer by Layer method, you can assume that about 99% of the time they learned how to solve it from either A) a friend or B) the internet. Also, contrary to popular belief, you cannot re-stick the stickers after peeling them off. As encouragement, you may also be happy to know that you need not know or understand any mathematics to solve the Rubik’s Cube. Good Luck!
	Note, as I believe it spoils the reward of solving the Rubik’s Cube, I will NOT write any algorithms that will directly tell you how to move pieces as shown in the following diagrams. This guide is merely designed to guide and kindle your thoughts and let you know that there is a simpler method than the layer-by-layer method.

Explanation:
1. First, scramble up the Rubik’s Cube, if it isn’t already. 

2. All except on corner piece, solve the top layer. This may seem difficult at first, but will become simple as you practice.
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc2.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>Just like in the diagram, solve the for edge pieces in the top layer, creating a cross. Ensure that the color orientation is correct all the way around by examining the center pieces color in the middle layer.
</td></table>
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc3.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>Next, solve any three of the corner pieces in the top layer, leaving one unsolved corner piece. You may choose to the corner to not solve at your own discretion.</td></table>

3. Except for one edge piece, place corresponding 3 edge pieces  into the middle layer.
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc4.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>In order to do this, we are going to make use of the unsolved corner piece in the top layer. In general you first place the unsolved corner of the top layer directly over the place in the second layer where you want to place the correct piece (which must be in the bottom layer). Then in only 3 moves each you can solve 3 of the 4 edge pieces in the middle layer. The resulting pattern should be similar to whats in the diagram to the left.</td></table>

4. Next, turn the cube upside down exposing the bottom layer.
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc5.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>The unsolved 2 pieces from the top and middle layer in previous steps can now be used to place the edge pieces correctly in the bottom row.</td></table>
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc6.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>If done correctly the resulting pattern will be as described in the diagram to the left.</td></table>

5. Next, place the remaining corner pieces into their correct place, without regarding orientation. Typical algorithms involve the rotation of 3 corner pieces either clockwise or counterclockwise. To do so takes and algorithm of only 8 moves. Depending on probability you may even be lucky enough to solve the cube at this point by simple rotating the corners.
<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc7.jpg" alt="Rubik's Cube Tutorial" /></center></td><td>An example of a sample 3 corner rotation clockwise.</td></table>

6. Finally, what may seem to be the most difficult part of the cube, rotating two corner pieces orientation. However, this is deceptively easy. As you can see in the diagram if one corners orientation is rotated clockwise, one other corner piece is rotated oppositely. This is because during the process of rotating one corner piece, the cube gets messed up. Then by performing the operations in reverse to another corner piece, it causes the cube to fix itself and rotate one other piece in the opposite direction. It can be viewed in a simpler case such as if you rotate the top face clockwise, naturally by doing the opposite and rotating the top face counterclockwise, you will fix the cube. This principle is in my opinion a key concept in understanding the Rubik’s Cube. 

<table width="100%"><tr><td><center><img padding="0" width="150" src="http://www.ken-soft.com/images/rc/rc8.jpg" alt="Rubik's Cube Tutorial"/></center></td><td>To perform the rotations shown in the diagram requires and algorithm of 12 moves. However, Don’t be alarmed, half of it is simply undoing what you did in the first half. So it’s really more like 6 moves to rotate a single corner piece in one direction, 1 move to put the next corner to rotate into position, 6 moves to undo the first 6 moves you did which causes the corner piece to rotate in the opposite direction. 1 move to readjust the top layer</td></table>

The secret to the Rubik’s Cube is practice. The more you work at it the more you will understand it.
Good Luck!

PDF Download available <a href="http://www.ken-soft.com/doc/rubikscube-en.pdf">here</a> 
Japanese Version available here <a href="http://www.ken-soft.com/doc/rubikscube-jp.pdf">here</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2008-12-24 19:29:18</wp:post_date>
		<wp:post_date_gmt>2008-12-25 02:29:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-simple-method-for-solving-the-rubiks-cube</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="how-to"><![CDATA[How to]]></category>
		<category domain="post_tag" nicename="layer-by-layer"><![CDATA[Layer-by-Layer]]></category>
		<category domain="category" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="post_tag" nicename="method"><![CDATA[Method]]></category>
		<category domain="post_tag" nicename="puzzle"><![CDATA[Puzzle]]></category>
		<category domain="category" nicename="rubiks-cube"><![CDATA[Rubik's Cube]]></category>
		<category domain="post_tag" nicename="rubiks-cube"><![CDATA[Rubik's Cube]]></category>
		<category domain="post_tag" nicename="solve"><![CDATA[Solve]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>829</wp:comment_id>
			<wp:comment_author><![CDATA[Chuong]]></wp:comment_author>
			<wp:comment_author_email>bangcuuchuong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.235.6.28</wp:comment_author_IP>
			<wp:comment_date>2012-07-15 21:39:49</wp:comment_date>
			<wp:comment_date_gmt>2012-07-15 21:39:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome guide. However, i'm stuck on step 5. can you give me some more hint on how to achieve it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342500448.3419";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342388389.0468";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1054</wp:comment_id>
			<wp:comment_author><![CDATA[ezra]]></wp:comment_author>
			<wp:comment_author_email>ezrablinkz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gmail.comorfacebook.com(ezra_darunday@yahoo.com</wp:comment_author_url>
			<wp:comment_author_IP>112.207.146.38</wp:comment_author_IP>
			<wp:comment_date>2013-01-29 13:00:39</wp:comment_date>
			<wp:comment_date_gmt>2013-01-29 13:00:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Its easy just do the fish move...where is the nearest food of the fish,make the move.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>829</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359464439.7007949352264404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363460316.831223011016845703125;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1438</wp:comment_id>
			<wp:comment_author><![CDATA[gautham]]></wp:comment_author>
			<wp:comment_author_email>gauthamworld@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.187.244.222</wp:comment_author_IP>
			<wp:comment_date>2013-07-31 17:45:56</wp:comment_date>
			<wp:comment_date_gmt>2013-07-31 17:45:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm also stuck on step 5. The clockwise rotation step, can you elaborate a bit more? And what do mean by the orientation not mattering?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375308539.221170902252197265625;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375292756.552939891815185546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ニューラルネット（神経回路網・誤差逆伝播法）PDF</title>
		<link>http://ken-soft.com/2008/12/24/%e3%83%8b%e3%83%a5%e3%83%bc%e3%83%a9%e3%83%ab%e3%83%8d%e3%83%83%e3%83%88%ef%bc%88%e7%a5%9e%e7%b5%8c%e5%9b%9e%e8%b7%af%e7%b6%b2%e3%83%bb%e8%aa%a4%e5%b7%ae%e9%80%86%e4%bc%9d%e6%92%ad%e6%96%b9%ef%bc%89/</link>
		<pubDate>Wed, 24 Dec 2008 19:52:41 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[<embed wmode="transparent" src="http://www.ken-soft.com/doc/neuralnetwork-jp.pdf" width="100%" height="600">  ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2008-12-24 19:52:41</wp:post_date>
		<wp:post_date_gmt>2008-12-24 19:52:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%83%8b%e3%83%a5%e3%83%bc%e3%83%a9%e3%83%ab%e3%83%8d%e3%83%83%e3%83%88%ef%bc%88%e7%a5%9e%e7%b5%8c%e5%9b%9e%e8%b7%af%e7%b6%b2%e3%83%bb%e8%aa%a4%e5%b7%ae%e9%80%86%e4%bc%9d%e6%92%ad%e6%96%b9%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="category" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="category" nicename="japanese"><![CDATA[Japanese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="neural-networks"><![CDATA[Neural Networks]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="%e3%83%8b%e3%83%a5%e3%83%bc%e3%83%a9%e3%83%ab%e3%83%8d%e3%83%83%e3%83%88"><![CDATA[ニューラルネット]]></category>
		<category domain="post_tag" nicename="%e4%ba%ba%e5%b7%a5%e7%9f%a5%e8%83%bd"><![CDATA[人工知能]]></category>
		<category domain="post_tag" nicename="%e5%ad%a6%e7%bf%92%e6%96%b9"><![CDATA[学習方]]></category>
		<category domain="post_tag" nicename="%e7%a5%9e%e7%b5%8c%e5%9b%9e%e8%b7%af"><![CDATA[神経回路]]></category>
		<category domain="post_tag" nicename="%e8%aa%a4%e5%b7%ae%e9%80%86%e4%bc%9d%e6%92%ad%e6%b3%95"><![CDATA[誤差逆伝播法]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Neural Network - Back-Error Propagation - Java]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=162</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2008-12-25 21:39:21</wp:comment_date>
			<wp:comment_date_gmt>2008-12-26 04:39:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Below are some links to A couple articles that give a good brief overview about neural networks, including some concepts about developing learning algorithms. Hope they are useful. About Neural Networks (English) About Neural Networks (Japanese/日本語) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>178</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Neural Network (Back-Error Propagation) C++]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=475</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-12-20 04:44:26</wp:comment_date>
			<wp:comment_date_gmt>2009-12-20 11:44:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] ニューラルネット（神経回路網・誤差逆伝播法）PDF [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Neural Networks - Simple Models (PDF)</title>
		<link>http://ken-soft.com/2008/12/24/neural-networks-simple-models/</link>
		<pubDate>Thu, 25 Dec 2008 03:02:07 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[<embed wmode="transparent" src="http://www.ken-soft.com/doc/neuralnetwork-en.pdf" width="100%" height="600">  ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2008-12-24 20:02:07</wp:post_date>
		<wp:post_date_gmt>2008-12-25 03:02:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>neural-networks-simple-models</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="category" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="back-error-propagation"><![CDATA[Back-Error Propagation]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="post_tag" nicename="neural-network"><![CDATA[Neural Network]]></category>
		<category domain="category" nicename="neural-networks"><![CDATA[Neural Networks]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Neural Network - Back-Error Propagation - Java]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=162</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2008-12-25 21:37:58</wp:comment_date>
			<wp:comment_date_gmt>2008-12-26 04:37:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] networks, including some concepts about developing learning algorithms. Hope they are useful. About Neural Networks (English) About Neural Networks [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Neural Network (Back-Error Propagation) C++]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=475</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-12-20 04:42:50</wp:comment_date>
			<wp:comment_date_gmt>2009-12-20 11:42:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Neural Networks - Simple Models (PDF) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Vulcan I - (Written in Purebasic) </title>
		<link>http://ken-soft.com/2008/12/24/vulcan-i-writtenin-purebasic/</link>
		<pubDate>Thu, 25 Dec 2008 06:14:26 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[Vulcan I is a sidescrolling space shooter written in <a target="_blank" href="http://www.purebasic.com">Purebasic</a>. This was my first major attempt at programming a game and is far from perfect. Vulcan I features 7 full length levels, each ending with a boss battle, many of which are redundant. Each level is unique and has its own array of enemies and terrains. Equip various powerups to prepare for the final showdown to save the universe.

<a href="http://www.ken-soft.com/dl/vulcan.zip"><b>Download Here</b></a>

<table width="100%"><tr><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot01.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot01.JPG" alt="Vulcan Side Scrolling Space Shooter"/></a></td><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot02.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot02.JPG" alt="Vulcan Side Scrolling Space Shooter"/></a></td><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot03.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot03.JPG" alt="Vulcan Side Scrolling Space Shooter"/></a></td></tr><tr><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot04.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot04.JPG" /></a></td><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot05.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot05.JPG" alt="Vulcan Side Scrolling Space Shooter"/></a></td><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot06.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot06.JPG" alt="Vulcan Side Scrolling Space Shooter"/></a></td></tr><tr><td><a href="http://www.ken-soft.com/code/pb/vulcan/screenshot07.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/vulcan/screenshot07.JPG" alt="Vulcan Side Scrolling Space Shooter" /></a></td></tr></table>

<b>About Vulcan</b>
      <ul><b>Keyboard:
</b>
	  <li>Direction Keys - moves the ship in the designated direction
</li>
	  <li>Space - shoots the selected weapon
</li>
	  <li>Left Alt - Cycles through the weapon arsenal
</li>
	  <li>C - Pause/Unpause
</li>
	  <li>V - Speed down *as of now it speeds down very rapidly
</li>
	  <li>R - Resets the game
</li>
      </ul>
      <ul><b>Controller:</b>

	<li>Dpad or analog - moves the ship in the designated direction
</li>
        <li>button 3 - shoots the selected weapon
</li>
        <li>button 1 - speed down
</li>
        <li>button 7 & 8 - Cycle through weapon arsenal
</li>
        <li>start - pause *** push any other button to unpause
</li>
        <li>select - reset game
</li>
     </ul>

   <ul><b>Beam Weapons
</b>
      <li>Phazor - The basic weapon at your disposal. however this weapon
 </li>
      <li>can become quite devastating.
</li>
      <li>Homing - A ball of energy launches at all the enemies on the screen</li>

      <li>Plasma - A powerful bolt of plasma
</li>
      <li>Charge - slow to charge but the power is worth it
</li>
      <li>Vulcan - The most lethal weapon and has the most deadly upgrades. enemies will think twice about attacking you. :) </li>

    </ul>
    <ul><b>Upgrades
</b>
	<li>Speedup - The ships speed increases
</li>
	<li>Beams - Upon aquiring these powerups a new weapon will be available
</li>
	<li>Armorup - Not only does the ships armor increase but so does its appearance

	<li>Special - Each weapon has its own unique upgrade.
</li>

    </ul>
    <ul><b>Misc</b>  	

	<li>Points	- scores an extra 500 points
</li>
        <li>Difficulty - easy, medium
</li>
        <li>Unlockable Difficulty - hard, super ultra mega hard
</li>
	<li>Unlockable mode - bonus mode - beat the game in super ultra mega hard
</li>
	<li>saves hiScore and 6 character name</li>
     </ul>

The music for Vulcan is a tune made by Anthony Lofton, and it alone should make you want to keep playing the game.

<b>Credits</b>
<b>Programmer</b>
- Kenny Cason
<b>Graphics Design</b>
- Kenny Cason
- David Johnson
- Josh Daughtery
- Nintendo
<b>Music</b>
 - Anthony Lofton
<b>Beta Testers</b>
- John Deforest
- Kenny Cason
- David Johnson
- Connie Jiang
- Gladson-Ripley Dorm]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2008-12-24 23:14:26</wp:post_date>
		<wp:post_date_gmt>2008-12-25 06:14:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vulcan-i-writtenin-purebasic</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="purebasic"><![CDATA[Purebasic]]></category>
		<category domain="post_tag" nicename="purebasic"><![CDATA[Purebasic]]></category>
		<category domain="post_tag" nicename="shooter"><![CDATA[Shooter]]></category>
		<category domain="post_tag" nicename="side-scroller"><![CDATA[Side Scroller]]></category>
		<category domain="post_tag" nicename="space"><![CDATA[Space]]></category>
		<category domain="post_tag" nicename="uagdc"><![CDATA[UAGDC]]></category>
		<category domain="post_tag" nicename="vulcan"><![CDATA[Vulcan]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>319</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan Frazier]]></wp:comment_author>
			<wp:comment_author_email>ryan@fvryan.com</wp:comment_author_email>
			<wp:comment_author_url>http://fvryan.com</wp:comment_author_url>
			<wp:comment_author_IP>174.79.111.11</wp:comment_author_IP>
			<wp:comment_date>2011-07-20 14:30:42</wp:comment_date>
			<wp:comment_date_gmt>2011-07-20 14:30:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just finished beating the game on easy and medium! i feel such a sense of accomplishment!  It's like beating Shigeru Miyamoto at Mario Kart^^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311172242.4828";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311172304.6058";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>320</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.109.151.104</wp:comment_author_IP>
			<wp:comment_date>2011-07-20 14:33:06</wp:comment_date>
			<wp:comment_date_gmt>2011-07-20 14:33:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Haha thanks man, beat it in hard, and Super Ultra Mega Hard to unlock something special :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>319</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311172386.0187";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Blocks - Advanced Tetris Clone (Written in Purebasic)</title>
		<link>http://ken-soft.com/2008/12/24/blocks-advanced-tetris-clone-written-in-purebasic/</link>
		<pubDate>Thu, 25 Dec 2008 06:37:58 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Blocks is a tetris like game written in <a href="http://www.purebasic.com">Purebasic</a>. Blocks features 3 modes:		
<b>Baby Mode</b> - simple pieces constructed from 3 bricks.
<b>Normal Mode</b> - standard tetris pieces.
<b>Blocks Mode</b> - pieces constructed from 1 - 6 bricks. 27 different pieces, including a randomly generated piece that can take on bizzare shapes. In this mode it is possible to clear 6 lines at once, earning yourself a "Block." I recommend playing it in block mode and large size for the most fun. :) Enjoy!
High Scores are saved for each of the modes.

<a href="http://www.ken-soft.com/dl/blocks.zip"><b>Download Here</b></a>
<a href="http://www.ken-soft.com/code/pb/blocks/blocks.pb"><b>Download Source Here</b></a>It has been a few years since I compiled it. I believe it was compiled using Purebasic v3.94, However, It should be fairly easy to make changes to get it to recompile in the most recent version, or just to convert it into another language.

<table width="100%"><tr><td><a href="http://www.ken-soft.com/code/pb/blocks/screenshot.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/blocks/screenshot.JPG" alt="Blocks 2D Tetris clone"/></a></td><td><a href="http://www.ken-soft.com/code/pb/blocks/screenshot2.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/blocks/screenshot2.JPG" alt="Blocks 2D Tetris clone"/></a></td><td><a href="http://www.ken-soft.com/code/pb/blocks/screenshot3.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/blocks/screenshot3.JPG" alt="Blocks 2D Tetris clone"/></a></td  ></tr><tr><td><a href="http://www.ken-soft.com/code/pb/blocks/screenshot4.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/blocks/screenshot4.JPG" alt="Blocks 2D Tetris clone"/></a></td><td><a href="http://www.ken-soft.com/code/pb/blocks/screenshot5.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/blocks/screenshot5.JPG" alt="Blocks 2D Tetris clone"/></a></td><td width="195"></td></tr></table>

<b>About Blocks</b>


<b>Credits</b>
<b>Programmer</b>
- Kenny Cason
<b>Graphics Design</b>
- Kenny Cason
<b>Music</b>
 - Nintendo
<b>Beta Testers</b>
- Kenny Cason
- David Johnson]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2008-12-24 23:37:58</wp:post_date>
		<wp:post_date_gmt>2008-12-25 06:37:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blocks-advanced-tetris-clone-written-in-purebasic</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blocks"><![CDATA[Blocks]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="purebasic"><![CDATA[Purebasic]]></category>
		<category domain="post_tag" nicename="purebasic"><![CDATA[Purebasic]]></category>
		<category domain="post_tag" nicename="tetris"><![CDATA[Tetris]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[skycleclowl]]></wp:comment_author>
			<wp:comment_author_email>bacyirretty@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://kriatoroff.narod.ru</wp:comment_author_url>
			<wp:comment_author_IP>210.52.15.210</wp:comment_author_IP>
			<wp:comment_date>2009-02-21 09:12:38</wp:comment_date>
			<wp:comment_date_gmt>2009-02-21 16:12:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi. serve me suit! Where can I understand and download programm? All coerce ready  = (. Is it not reasonable to happen for manumit!?  <a href="http://www.kriatoroff.narod.ru" rel="nofollow">http://www.kriatoroff.narod.ru/smile.gif</a> yavmyase]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Magus Map Maker - 2D Multilayer Map</title>
		<link>http://ken-soft.com/2008/12/25/magus-map-maker-2d-multilayer-map/</link>
		<pubDate>Thu, 25 Dec 2008 07:12:31 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[<b>Note:</b> for a more fully featured map maker, I would reccomend using <b>Mappy</b> or <b>Tiled</b> 

This is just something I made a few years back to ease personal game development. 
Magus Map Maker is a 2D multilayer game map maker written in <a href="http://www.purebasic.com">Purebasic</a>. Magus Map Maker Features:
<b>Multiple Layers</b> - make maps up to 3 layers plus an additional "attribute" layer used to store other information about the map tiles.
<b>Load tilesets</b> - Supports BMP,JPEG,PNG,TIFF,and TGA.formats.
<b>Save/Load</b> - After working hard on maps, easily save/load them. Also features a save to image feature, so that you can view your whole map in one image file.
<b>Tilenator</b> - This feature can turn a tilesheet into a directory of invidual tiles, and vice versa
<b>Help Files</b> - Online help documentation to ease use  

<a href="http://www.ken-soft.com/dl/mmm.zip"><b>Download Here</b></a>
For more extensive documentation concerning Magus Map Maker refer to the online help files: <a href="http://www.ken-soft.com/doc/mmm/help/"><b>Online Help</b></a>

<table width="100%"><tr><td><a href="http://www.ken-soft.com/code/pb/mmm/2nd_layer.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/mmm/2nd_layer.JPG" /></a></td><td><a href="http://www.ken-soft.com/images/mmm/all_layers.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/mmm/all_layers.JPG" alt="2D Tile Map Maker"/></a></td><td><a href="http://www.ken-soft.com/code/pb/mmm/up_to_3rd_layer.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/mmm/up_to_3rd_layer.JPG"alt="2D Tile Map Maker" /></a></td  ></tr><tr><td><a href="http://www.ken-soft.com/code/pb/mmm/show_image.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/mmm/show_image.JPG" alt="2D Tile Map Maker"/></a></td><td><a href="http://www.ken-soft.com/code/pb/mmm/map16x16.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/mmm/map16x16.JPG" alt="2D Tile Map Maker"/></a></td><td width="195"><a href="http://www.ken-soft.com/code/pb/mmm/sprite_sheet.JPG"><img width="195" src="http://www.ken-soft.com/code/pb/mmm/sprite_sheet.JPG" alt="2D Tile Map Maker"/></a></td></tr></table>
<table width="100%"><tr><td><a href="http://www.ken-soft.com/code/pb/mmm/cave.JPG"><img width="500" src="http://www.ken-soft.com/code/pb/mmm/cave.JPG" alt="2D Tile Map Maker"/></a></td></tr></table>


<b>Credits</b>
<b>Programmer</b>
- Kenny Cason
<b>Beta Testers</b>
- University of Arkansas Game Development Club]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2008-12-25 00:12:31</wp:post_date>
		<wp:post_date_gmt>2008-12-25 07:12:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>magus-map-maker-2d-multilayer-map</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="editor"><![CDATA[Editor]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="magus"><![CDATA[Magus]]></category>
		<category domain="post_tag" nicename="maker"><![CDATA[Maker]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[Map]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="purebasic"><![CDATA[Purebasic]]></category>
		<category domain="post_tag" nicename="rpg"><![CDATA[RPG]]></category>
		<category domain="post_tag" nicename="tile"><![CDATA[Tile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3D Rotation Matrix - Graph 3D</title>
		<link>http://ken-soft.com/2008/12/25/graph3d-java-project-3d-points-to-2d/</link>
		<pubDate>Fri, 26 Dec 2008 02:31:48 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[This was a simple program I wrote that Displays 3D points. It does so by simply projecting a 3D (vector) into 2D. 
The Jar file can be downloaded here: <a href="http://www.ken-soft.com/code/java/graph3D/Graph3D.jar">Graph3D.jar</a>
The C/C++ version can be found <a href="http://ken-soft.com/2009/12/19/graph-3d-vector-rotation-source-included-c/" target="_blank">here</a>

<a href="http://www.ken-soft.com/code/java/graph3D/graph3D.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/graph3D/graph3D.png" width="150" alt="3D rotation matrix" /></a>
Before looking at the source, let's take a look at some of the fundamental mathematics behind the software.
<b>rotations</b> - Rotations in this software simple geometric transformations based around an unmoving center axis. Below are the three rotation matrices for each axis, X, Y, and Z, respectively. Every operation can be found in Transform.java below.

<br/><b>Rotate Around X,Y, or Z Axis</b>
<table width="100%"><tr><td>[m]rotX = delim{[}{matrix{3}{3}{1 0 0 0 {cos(theta)} {-sin(theta)} 0 {sin(theta)} {cos(theta)}}}{]}[/m]</td><td>[m]rotY = delim{[}{matrix{3}{3}{{cos(theta)} 0 {sin(theta)} 0 1 0 {-sin(theta)} 0 {cos(theta)}}}{]}[/m]</td></tr><tr><td>[m]rotZ = delim{[}{matrix{3}{3}{{cos(theta)} {-sin(theta)} 0 {sin(theta)} {cos(theta)} 0 0 1 0}}{]}[/m]</td><td></td></tr></table>
 It is also important to know that every point in our world is defined by:
[m]vec{p } = delim{[}{matrix{3}{1}{x y z}}{ ]}[/m]
This can be seen in Point3D.java below. (Which is synonymous to a Vector in this application.) 

<br/><b>Rotate Around Arbitrary Axis</b>
The above rotations are all rotations about either the X,Y, or Z axises. But another common and more complicated rotation is to rotate Vector/Point A around Vector/Point B.
Here are the Steps:
1. the Vector that is being rotated around must be NORMALIZED.
this can be done very easily
 <table width="100%"><td>1a. [m]d = sqrt(x^2 + y^2 + z^2)[/m]</td><td>
 1b. [m]hat{p} = delim{[}{matrix{3}{1}{x/d y/d z/d}}{]}[/m]</td></table>
2. next, using quaternions, perform the rotation.
Where:
2a. [m]hat{p} = ai + bj + ck[/m]
[m]q0 = cos(theta/2),  q1 = sin(theta/2) a,  q2 = sin(theta/2) b,  q3 = sin(theta/2) c[/m]  ([m]theta[/m] is in radians)
The rotation matrix evaluates to the following:
2b. [m]rotAB = delim{[}{matrix{3}{3}{ (q0^2 + q1^2 - q2^2 - q3^2) {2(q1q2 - q0q3)} {2(q1q3 + q0q2)} {2(q2q1 + q0q3)} (q0^2 - q1^2 + q2^2 - q3^2)  {2(q2q3 - q0q1)}  {2(q3q1 - q0q2)} {2(q3q2 + q0q1)} {(q0^2 - q1^2 - q2^2 + q3^2)} }}{]}[/m]
<br/><b>Example:</b> Suppose we have point [m]vec{p} = delim{[}{matrix{3}{1}{1 2 3}}{]}[/m]
and we would like to rotate [m]vec{p}[/m] by 30° around the X axis.
[m] vec{p}_{new} = (rotX)vec{p} = delim{[}{matrix{3}{3}{1 0 0 0 {cos(theta)} {-sin(theta)} 0 {sin(theta)} {cos(theta)}}}{]}.delim{[}{matrix{3}{1}{x y z}}{]} = delim{[}{matrix{3}{3}{1 0 0 0 {cos(30)} {-sin(30)} 0 {sin(30)} {cos(30)}}}{]}.delim{[}{matrix{3}{1}{1 2 3}}{]}[/m]

And finally, to project the 3D points onto a 2D canvas after performing a rotation, a simple way is to simply ignore the Z coordinate and draw the point based on it's X and Y coordinates. However this is assuming that you're projecting it on to the screen as if you are looking straight at it.

The source code can be found below as well as being bundled into the Jar file.

<a href="http://ken-soft.com/?p=368" >Cube 3D</a> - A simple 3D Cube engine that demonstrates the usage of ALL the above mentioned equations.

Transform3D.java - This is a simple version using a 3x3 matrix. Using a 4x4 matrix you can also store the translation information. This is useful when trying to program a skeleton represented by vectors.
(Also, check out Graph/Rotate4D <a href="http://ken-soft.com/?p=296">here</a>
<p><a href="http://ken-soft.com/code/java/graph3D/Transform3D.java" class="code">Transform.java</a></p>
<p><a href="http://ken-soft.com/code/java/graph3D/Point3D.java" class="code">Point3D.java</a></p>
Other included source:
<p><a href="http://ken-soft.com/code/java/graph3D/Graph3D.java">Graph3D.java</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2008-12-25 19:31:48</wp:post_date>
		<wp:post_date_gmt>2008-12-26 02:31:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>graph3d-java-project-3d-points-to-2d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="2d"><![CDATA[2D]]></category>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="graph3d"><![CDATA[Graph3D]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="linear"><![CDATA[Linear]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="matrices"><![CDATA[Matrices]]></category>
		<category domain="post_tag" nicename="matrix"><![CDATA[Matrix]]></category>
		<category domain="post_tag" nicename="point"><![CDATA[Point]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="projectiion"><![CDATA[Projectiion]]></category>
		<category domain="post_tag" nicename="rotation"><![CDATA[Rotation]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Juromenha]]></wp:comment_author>
			<wp:comment_author_email>Anastasia@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.greenpoison.cn/</wp:comment_author_url>
			<wp:comment_author_IP>95.72.134.173</wp:comment_author_IP>
			<wp:comment_date>2009-02-07 20:55:00</wp:comment_date>
			<wp:comment_date_gmt>2009-02-08 03:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for sharing. I came to this site to read how things really are]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; 3D Cube Engine - Java]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=368</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-08-05 12:49:50</wp:comment_date>
			<wp:comment_date_gmt>2009-08-05 19:49:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 3D Rotation Matrix - Graph 3D [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; 4D Rotation Matrix - Graph 4D]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=296</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-07-16 17:44:39</wp:comment_date>
			<wp:comment_date_gmt>2009-07-17 00:44:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 3D Rotation Matrix - Graph 3D [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[iceblink]]></wp:comment_author>
			<wp:comment_author_email>iceblink@chello.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.161.206.95</wp:comment_author_IP>
			<wp:comment_date>2009-09-02 02:48:43</wp:comment_date>
			<wp:comment_date_gmt>2009-09-02 09:48:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this very helpful page.
Please note that formula 2a is erroneous. The numbers on the matrix diagonal should all be squared, i.e. q0^2+q1^2-q2^2-q3^2 etc. 
I haven't used the programming code so I have no idea if the code is okay.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>173</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Graph 3D (Vector Rotation Source Included) C++]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=458</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-12-19 04:17:12</wp:comment_date>
			<wp:comment_date_gmt>2009-12-19 11:17:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 3D Rotation Matrix - Graph 3D [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>130.184.251.50</wp:comment_author_IP>
			<wp:comment_date>2009-10-28 10:08:19</wp:comment_date>
			<wp:comment_date_gmt>2009-10-28 17:08:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>iceblink
The code was correct, just my comments were wrong, and I wrote this blog based off my code comments, It has been updated. Thanks again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>739</wp:comment_id>
			<wp:comment_author><![CDATA[History Of Animation]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://historyofanimation.org/history-of-animation-and-development</wp:comment_author_url>
			<wp:comment_author_IP>92.13.252.207</wp:comment_author_IP>
			<wp:comment_date>2012-01-04 03:19:41</wp:comment_date>
			<wp:comment_date_gmt>2012-01-04 03:19:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>History Of Animation...</strong>

[...]3D Rotation Matrix &#8211; Graph 3D | Ken-Soft[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325705383.5256";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1434</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.143.173.244</wp:comment_author_IP>
			<wp:comment_date>2013-07-24 14:34:06</wp:comment_date>
			<wp:comment_date_gmt>2013-07-24 14:34:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, I'll look into it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1433</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374676446.950315952301025390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1433</wp:comment_id>
			<wp:comment_author><![CDATA[Jack]]></wp:comment_author>
			<wp:comment_author_email>jack@pryne.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.36.134.127</wp:comment_author_IP>
			<wp:comment_date>2013-07-23 13:48:09</wp:comment_date>
			<wp:comment_date_gmt>2013-07-23 13:48:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ttagg.com uses an invalid security certificate.

The certificate is only valid for the following names:
  datarank.com , www.datarank.com  

(Error code: ssl_error_bad_cert_domain)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374596551.3001101016998291015625;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374587289.773047924041748046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Multi-Linked List (Graph) - Java</title>
		<link>http://ken-soft.com/2008/12/25/multilinked-list-doubly-linked-java/</link>
		<pubDate>Fri, 26 Dec 2008 03:57:40 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[This program is a standard multi-linked list (aka, <a href="http://en.wikipedia.org/wiki/Graph_%28mathematics%29" title="Graph" target="_blank">Graph</a> . <b>Note</b>, this is not a simple linked list. each node of this list can connect to any number of other nodes in the list, including itself. This should be very interesting to build off of and tinker with.

The Jar file can be downloaded here: <a href="http://www.ken-soft.com/code/java/mll/MultiLinkedList.jar">MultiLinkedList.jar</a>
To run the Jar file open the command prompt, cd into the directory, then type:
<code>java -jar MultiLinkedList.jar</code>
That should give a display similar to the image below (The current jar also prints the haschode() of the Node to verify that nodes that are equal() do not get duplicated in the MultiLinkedList). The output shows a series of tests being ran as well as a final output of the MLL.
<a href="http://www.ken-soft.com/code/java/mll/MLL01.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/mll/MLL01.png" width="250" alt="Multilinked list"/></a>

The source is also bundled into the Jar file.

MLL.java - contains many of the main functions necessary in a multilinked list.
<p><a href="http://ken-soft.com/code/java/mll/MultiLinkedList.java" class="code">MultiLinkedList.java</a></p>
<p><a href="http://ken-soft.com/code/java/mll/Node.java" class="code">Node.java</a></p>
<p><a href="http://ken-soft.com/code/java/mll/MultiLinkedListTest.java" class="code">MultiLinkedListTest.java</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2008-12-25 20:57:40</wp:post_date>
		<wp:post_date_gmt>2008-12-26 03:57:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multilinked-list-doubly-linked-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="double-linked"><![CDATA[double-linked]]></category>
		<category domain="post_tag" nicename="graph"><![CDATA[Graph]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="linkedlist"><![CDATA[LinkedList]]></category>
		<category domain="post_tag" nicename="list"><![CDATA[List]]></category>
		<category domain="post_tag" nicename="mult-linked-list"><![CDATA[Mult-Linked List]]></category>
		<category domain="post_tag" nicename="multi-linked"><![CDATA[Multi-linked]]></category>
		<category domain="post_tag" nicename="multiply-linked-list"><![CDATA[multiply-linked list]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Neural Network - Back-Error Propagation - Java</title>
		<link>http://ken-soft.com/2008/12/25/neural-network-back-error-propagation-java/</link>
		<pubDate>Fri, 26 Dec 2008 04:33:40 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[This Neural Network is a command line implementation that uses the Back-Error Propagation learning algorithm. As well, The number of center layers, neurons per center layer, and learning rate are all changeable. The provided Test file teach Logial AND, however other test files can easily be created.

<b>update:</b>Source is now maintained on <a href="https://github.com/kennycason/neuralnetwork/" title="GitHub" target="_blank">GitHub</a>

The Jar file can be downloaded here: <a href="http://www.ken-soft.com/code/java/nn01/NN.jar">NN.jar</a>
Below is the Syntax for running NN.jar in a command line:
<code>java -jar NN.jar [num center layers] [num center layer neurons] [learning rate]</code>
An example includes:
<code>java -jar NN.jar 2 10 1.5</code>
Which specifies a neural network with 2 center layers, 10 neurons per center layer, and a learning rate of 1.5. If now parameters are supplied it runs with default parameter; which are 1 center layers, 1 neurons per center layer, and a learning rate of 0.5.
That should give a display similar to the image below.
<a href="http://www.ken-soft.com/code/java/nn01/NN01.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/nn01/NN01.png" width="250" alt="neural network back error propagation java"/></a>

Below are some links to A couple articles that give a good brief overview about neural networks, including some concepts about developing learning algorithms. Hope they are useful.
<a href="http://ken-soft.com/2008/12/24/neural-networks-simple-models/" target="_blank" >About Neural Networks (English)</a>
<a href="http://ken-soft.com/2008/12/24/%E3%83%8B%E3%83%A5%E3%83%BC%E3%83%A9%E3%83%AB%E3%83%8D%E3%83%83%E3%83%88%EF%BC%88%E7%A5%9E%E7%B5%8C%E5%9B%9E%E8%B7%AF%E7%B6%B2%E3%83%BB%E8%AA%A4%E5%B7%AE%E9%80%86%E4%BC%9D%E6%92%AD%E6%96%B9%EF%BC%89/" target="_blank" >About Neural Networks (Japanese/日本語)</a>

<p><a href="http://ken-soft.com/code/java/nn01/NeuralNetwork.java" class="code">NeuralNetwork.java</a></p>
<p><a href="http://ken-soft.com/code/java/nn01/Layer.java" class="code">Layer.java</a></p>
There are two test file for you to try out.
<p><a href="http://ken-soft.com/code/java/nn01/NeuralNetworkTest.java" class="code">NeuralNetworkTest.java</a></p>
<p><a href="http://ken-soft.com/code/java/nn01/NeuralNetworkTest2.java" class="code">NeuralNetworkTest2.java</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2008-12-25 21:33:40</wp:post_date>
		<wp:post_date_gmt>2008-12-26 04:33:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>neural-network-back-error-propagation-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="category" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="back-error-propagation"><![CDATA[Back-Error Propagation]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="neural-network"><![CDATA[Neural Network]]></category>
		<category domain="category" nicename="neural-networks"><![CDATA[Neural Networks]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="%e3%83%8b%e3%83%a5%e3%83%bc%e3%83%a9%e3%83%ab%e3%83%8d%e3%83%83%e3%83%88"><![CDATA[ニューラルネット]]></category>
		<category domain="post_tag" nicename="%e4%ba%ba%e5%b7%a5%e7%9f%a5%e8%83%bd"><![CDATA[人工知能]]></category>
		<category domain="post_tag" nicename="%e8%aa%a4%e5%b7%ae%e9%80%86%e4%bc%9d%e6%92%ad%e6%b3%95"><![CDATA[誤差逆伝播法]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Neural Network - Load Train Data from XML - Java]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=168</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2008-12-25 21:53:02</wp:comment_date>
			<wp:comment_date_gmt>2008-12-26 04:53:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This Neural Network is a command line implementation that uses the Back-Error Propagation learning algorithm. The main difference with this model is that all train data is loaded from an external XML file. The Train data specification can be found Here. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>179</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Neural Network (Back-Error Propagation) C++]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=475</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-12-20 04:45:18</wp:comment_date>
			<wp:comment_date_gmt>2009-12-20 11:45:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Neural Network - Back-Error Propagation - Java [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rubik&#039;s Cube - 2D Implementation - Java</title>
		<link>http://ken-soft.com/2008/12/25/rubiks-cube-java/</link>
		<pubDate>Fri, 26 Dec 2008 06:43:44 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple 2D representation of a Rubik's Cube written in Java. Its main purpose to be easily integrated with other software. I.e. A Rubik's Cube solving Neural Network. Therefore, the UI is not extremely eye catching. But it serves a good test to demonstrate that the software is working. Later implementations will better support NxNxN cubes.

The Jar file can be downloaded here: <a href="http://www.ken-soft.com/code/java/rc/RC.jar">Rubik's Cube.jar</a> Just click it to run it. If you have any problems running it, check to ensure that Java is correctly installed on your machine.
<table width=100%><tr><td>
<a href="http://www.ken-soft.com/code/java/rc/RC01.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/rc/RC01.png" width="295" alt="Rubik's Cube 2D java"/></a></td><td>
<a href="http://www.ken-soft.com/code/java/rc/RC02.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/rc/RC02.png" width="295"  alt="Rubik's Cube 2D java"/></a></td></tr></table>

<p><a href="http://ken-soft.com/code/java/rc/RubiksCubeGUI.java">RubiksCubeGUI.java</a></p> 
RubiksCube.java is the main wrapper class to Cube3D
<p><a href="http://ken-soft.com/code/java/rc/RubiksCube.java">RubiksCube.java</a></p>
<p><a href="http://ken-soft.com/code/java/rc/Cube3D.java">Cube3D.java</a></p>

Each of the 27 cubes that make up a standard 3x3 Rubik's Cube, I call a Cubit.
<p><a href="http://ken-soft.com/code/java/rc/Cubit.java">Cubit.java</a></p>
<p><a href="http://ken-soft.com/code/java/rc/Cube3DTest.java">Cube3DTest.java</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2008-12-25 23:43:44</wp:post_date>
		<wp:post_date_gmt>2008-12-26 06:43:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubiks-cube-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="category" nicename="logic-problems"><![CDATA[Logic Problems]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[R]]></category>
		<category domain="category" nicename="rubiks-cube"><![CDATA[Rubik's Cube]]></category>
		<category domain="post_tag" nicename="rubiks-cube"><![CDATA[Rubik's Cube]]></category>
		<category domain="post_tag" nicename="%e3%83%ab%e3%83%bc%e3%83%93%e3%83%83%e3%82%af%e3%82%ad%e3%83%a5%e3%83%bc%e3%83%96"><![CDATA[ルービックキューブ]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Deesquecherse]]></wp:comment_author>
			<wp:comment_author_email>boitteroors@greatvox.com</wp:comment_author_email>
			<wp:comment_author_url>http://tereg.ru</wp:comment_author_url>
			<wp:comment_author_IP>92.241.160.22</wp:comment_author_IP>
			<wp:comment_date>2009-02-07 03:39:27</wp:comment_date>
			<wp:comment_date_gmt>2009-02-07 10:39:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yo, ken-soft.com great name for site)))
------------------------
sponsor:  http://qugor.ru]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[swobArrerie]]></wp:comment_author>
			<wp:comment_author_email>whorilliffism@greatvox.com</wp:comment_author_email>
			<wp:comment_author_url>http://nerot.ru/</wp:comment_author_url>
			<wp:comment_author_IP>92.241.160.22</wp:comment_author_IP>
			<wp:comment_date>2009-02-07 06:20:08</wp:comment_date>
			<wp:comment_date_gmt>2009-02-07 13:20:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ken-soft.com - now in my rss reader)))
------------------------
signature:  http://youraudiovox.com/music54/map.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[terperceity]]></wp:comment_author>
			<wp:comment_author_email>indidoles@greatvox.com</wp:comment_author_email>
			<wp:comment_author_url>http://dolim.ru/</wp:comment_author_url>
			<wp:comment_author_IP>92.241.160.22</wp:comment_author_IP>
			<wp:comment_date>2009-02-10 05:51:12</wp:comment_date>
			<wp:comment_date_gmt>2009-02-10 12:51:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, I can't understand how to add your blog ( ken-soft.com ) in my rss reader
------------------------
sponsored link:  http://lilid.ru/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[terperceity]]></wp:comment_author>
			<wp:comment_author_email>indidoles@greatvox.com</wp:comment_author_email>
			<wp:comment_author_url>http://dolim.ru/</wp:comment_author_url>
			<wp:comment_author_IP>92.241.160.22</wp:comment_author_IP>
			<wp:comment_date>2009-02-10 07:25:54</wp:comment_date>
			<wp:comment_date_gmt>2009-02-10 14:25:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ken-soft.com - now in my rss reader)))
------------------------
sponsored link:  http://lilid.ru/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SDL Sprite Class in C++</title>
		<link>http://ken-soft.com/2009/01/02/sprite-class-in-c-using-sdl/</link>
		<pubDate>Sat, 03 Jan 2009 04:58:43 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple Sprite class that I use for game development in C++ using SDL (<a href="http://www.libsdl.org/" target="_blank">www.libsdl.org</a>).
Features include sprite animation, rotation, stretching, transparencies, and other commonly used sprite functions.

I hope this is somewhat useful. The source is available and should be fairly simple to work with.
Feel free to modify it however you want. please comment about any bugs are suggestions that you have. Thanks.

<strong>Clone from GitHub</strong> <a href="https://github.com/kennycason/sdl_sprite"><span style="font-size:18px">HERE</span></a><br/>

<a href="http://www.ken-soft.com/code/c/SDL/Sprite/sshot.PNG" target="_blank" ><img src="http://www.ken-soft.com/code/c/SDL/Sprite/sshot.PNG" width="250" alt="SDL Sprite C++"/></a>

To view a demo of some of the Sprites classes features, and have access to some sample Bitmap images used with the Sprite library,  download the following zip file. It also contains the project settings that I used in Dev C++ and SDL 1.2.12 to compile.


All examples use these sprites
<table><tr><td><a href="http://www.ken-soft.com/code/c/SDL/Sprite/samus_normal_run.bmp" target="_blank" ><img width="90%" src="http://www.ken-soft.com/code/c/SDL/Sprite/samus_normal_run.bmp"  alt="SDL Sprite C++"/></a></td>
<td><a href="http://ken-soft.com/code/c/SDL/Sprite/character.bmp" target="_blank" ><img width="90%" src="http://ken-soft.com/code/c/SDL/Sprite/character.bmp"  alt="SDL Sprite C++"/></a></td></tr></table>

<b>Demo using special effects </b>
<pre lang="CPP" line="1">
    // Initialize SDL, etc
   ...
   ...
   Sprite* s1 = new Sprite("sprites/samus_normal_run.bmp",10,60); // load a BMP that contains 10 frames
                                                // set the animation speed to 60 milliseconds
      // set RGB(255,0,255) as transparent, rotate 180 degrees, flip horizontal and reverse animation
  s1->setTransparency(255,0,255)->rotate180()->flipHorizontal()->reverseAnimation();
   // etc
    ...
    ...

    // Main loop
    // clear background to black, RGB(0,0,0)
    SDL_FillRect(screen, 0, SDL_MapRGB(screen->format, 0, 0, 0));
    // animate and draw the sprite
    s1->animate()->draw(screen,0,0);
    SDL_Flip(screen);
    
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2009-01-02 21:58:43</wp:post_date>
		<wp:post_date_gmt>2009-01-03 04:58:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sprite-class-in-c-using-sdl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="2d"><![CDATA[2D]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="class"><![CDATA[Class]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="graphics"><![CDATA[Graphics]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="sdl"><![CDATA[SDL]]></category>
		<category domain="post_tag" nicename="sprite"><![CDATA[Sprite]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Swampert]]></wp:comment_author>
			<wp:comment_author_email>distantminded@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>152.33.76.130</wp:comment_author_IP>
			<wp:comment_date>2009-06-26 13:46:53</wp:comment_date>
			<wp:comment_date_gmt>2009-06-26 20:46:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a great library but where is the .lib/.a? I get undefined references.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>76.114.250.70</wp:comment_author_IP>
			<wp:comment_date>2009-06-26 15:59:40</wp:comment_date>
			<wp:comment_date_gmt>2009-06-26 22:59:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Do you have SDL installed on your computer? If not just google "install SDL" or "setup SDL"
or, if you use linux it's in the repositories. 
In the case that you are using DeVcpp IDE (freeware), you can also automatically download and install SDL.
else you have to install it manually.

Also, don't forget to set your linker options for the project, this is very important.
you will have to add -lSDL to the linker options.

 you may also have to play around with the #include <SDL.h> by changin it to <SDL/SDL.h>

reply with any questions or problems, I'll help you get everything set up.
(just let me know the IDE you are using)
Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; SDL - Simple Space Shooter Game Demo - Part I]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=419</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-09-20 20:32:17</wp:comment_date>
			<wp:comment_date_gmt>2009-09-21 03:32:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Sprite Class in C++ using SDL [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>479</wp:comment_id>
			<wp:comment_author><![CDATA[jeantoff]]></wp:comment_author>
			<wp:comment_author_email>nekochat@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>2.4.77.67</wp:comment_author_IP>
			<wp:comment_date>2011-10-31 09:12:52</wp:comment_date>
			<wp:comment_date_gmt>2011-10-31 09:12:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,
Good Job ! thank you very much for this. It 'll help me to leave my dear Pygame for a much powerfull env.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320052372.6482";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320055040.9761";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2011-10-31 09:57:53</wp:comment_date>
			<wp:comment_date_gmt>2011-10-31 09:57:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to help, let me know if you have any problems with it, also occasionally check back for updates! :)
Also, this link is an invaluable link for using SDL.  http://lazyfoo.net/SDL_tutorials/ It really helped me when I was switching from Basic to C/C++ for game dev.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>479</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320055073.6245";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>826</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2012-06-12 00:43:48</wp:comment_date>
			<wp:comment_date_gmt>2012-06-12 00:43:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for noticing and taking time to tell me! I'll update the code! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>825</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339461828.3302";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>825</wp:comment_id>
			<wp:comment_author><![CDATA[Paic]]></wp:comment_author>
			<wp:comment_author_email>paic_citron@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.237.95.74</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 23:35:29</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 23:35:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi !
Thanks for sharing your work, it's very usefull for my ongoing game development ! =))

However, I've found a bug in the SpriteEffects::pixelCollide() method.
When you test if the pixels of both sprites are transparents your're doint it wrong with x value:

spriteB.isTransparentPixel(x-aX + ...
spriteA.isTransparentPixel(x-aX + ...

It results in checking pixel at the same x value for both sprites.
You need to use "x-bX" for spriteB :

spriteB.isTransparentPixel(x-bX + ...
spriteA.isTransparentPixel(x-aX + ...

best regards,
paic]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1339457729.118";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339461802.2647";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>788</wp:comment_id>
			<wp:comment_author><![CDATA[Mr Bloggs]]></wp:comment_author>
			<wp:comment_author_email>mr.bloggs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.213.93.51</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 02:32:08</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 02:32:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, just saying thanks for the class. I'm writing a Sprite class for SDL/OpenGL and yours was a great starting point!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1334629928.393";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334630674.0378";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>789</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 02:45:05</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 02:45:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad it was useful! :) I wish I had time to go back and clean up the code some more for you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>788</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1334630705.7284";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1060</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.6.24</wp:comment_author_IP>
			<wp:comment_date>2013-03-16 18:57:51</wp:comment_date>
			<wp:comment_date_gmt>2013-03-16 18:57:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Without revisiting my old code, I would say that it should be pretty easy to add a set function to set the current animation. 

On a side note actually while that code works you can check out my new graphics code on github. https://github.com/kennycason/legendofzelda/tree/master/src/engine/graphics/sprite the root directory is https://github.com/kennycason/legendofzelda

thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1055</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363460271.383181095123291015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1055</wp:comment_id>
			<wp:comment_author><![CDATA[Mo]]></wp:comment_author>
			<wp:comment_author_email>mobataineh@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.200.74.152</wp:comment_author_IP>
			<wp:comment_date>2013-02-01 02:11:34</wp:comment_date>
			<wp:comment_date_gmt>2013-02-01 02:11:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When using the sprite class, I was wondering how would you load the character sprite and then show which line you would like to use as the animation? Such as i want to use the one where its back is facing towards us?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359684694.9961230754852294921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363459848.3361589908599853515625;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C++ Dynamic Memory Allocation (2D and 3D)</title>
		<link>http://ken-soft.com/2009/01/08/c-dynamic-memory-allocation-2d-and-3d/</link>
		<pubDate>Thu, 08 Jan 2009 11:04:20 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[This snipped of code is for allocating memory when using a multidimensional array. The following examples are for 2D ([][]) and 3D ([][][]) structures.

First:
to allocate memory for a two dimensional structure: (i.e. int[][] array)
<pre lang="c" line="1">
int** array;    // 2D array definition;
// begin memory allocation
array = new int*[dimX];
for(int x = 0; x < dimX; ++x) {
     array[x] = new int[dimY];
     for(int y = 0; y < dimY; ++y) { // initialize the values, this is optional, but recommended
          array[x][y] = 0;
     }
}
</pre>

Next, to allocate memory for a three dimensional structure: (i.e. int[][][] array)
<pre lang="c" line="1">
int*** array;    // 3D array definition;
// begin memory allocation
array = new int**[dimX];
for(int x = 0; x < dimX; ++x) {
    array[x] = new int*[dimY];
    for(int y = 0; y < dimY; ++y) {
        array[x][y] = new int[dimZ];
        for(int z = 0; z < dimZ; ++z) { // initialize the values, again, not necessary, but recommended
            array[x][y][z] = 0;
        }
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date>2009-01-08 04:04:20</wp:post_date>
		<wp:post_date_gmt>2009-01-08 11:04:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-dynamic-memory-allocation-2d-and-3d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="allocation"><![CDATA[allocation]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="memory"><![CDATA[memory]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>313</wp:comment_id>
			<wp:comment_author><![CDATA[?JAKIR!]]></wp:comment_author>
			<wp:comment_author_email>jakirseu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://techtweets.com.bd/en/</wp:comment_author_url>
			<wp:comment_author_IP>119.15.156.76</wp:comment_author_IP>
			<wp:comment_date>2011-06-23 20:16:44</wp:comment_date>
			<wp:comment_date_gmt>2011-06-23 20:16:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's very helpful for me. Thanks a lot.
<a href="http://techtweets.com.bd/en/" rel="nofollow">My Blog</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308860204.8191";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1310668520.0992";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Thog Problem</title>
		<link>http://ken-soft.com/2009/01/08/thog-problem/</link>
		<pubDate>Thu, 08 Jan 2009 12:04:30 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=269</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Given the following combinations of shapes and colors:<br><br></p>
<table width=100% align=center">
<td><a href="#" onClick="alert1()"><img class="center"　width="100" src="http://ken-soft.com/images/thog/black_sqr.jpg" border=0></a></td>
<td><a href="#" onClick="alert2()"><img class="center"　width="100" src="http://ken-soft.com/images/thog/black_crc.jpg" border=0></a></td>
<td><a href="#" onClick="alert3()"><img class="center"　width="100" src="http://ken-soft.com/images/thog/white_sqr.jpg" border=0></a></td>
<td><a href="#" onClick="alert4()"><img class="center"  width="100" src="http://ken-soft.com/images/thog/white_crc.jpg" border=0></a></td></table>
<p> The experimenter makes the following statement:</p>
<blockquote><p>"I am thinking of one color (black or white) and one shape (square or circle). Any figure that has either the color I am thinking of, or the shape I am thinking of, but not both, is a THOG. Given that the black square is a THOG what, if anything, can you say about whether the other figures are THOGS?"</p>
</blockquote>
<p>Select the THOG by clicking on one of the shapes above</p>

<script langauage="JavaScript">
function alert1() {
    alert("No, the Black Square is the original THOG");
}
function alert2() {
    alert("No, the experimenter could be thinking of either (Black and Circle) or (White and Square). " +
	"If the experimenter is thinking of (Black and Circle) " +
	"the Black Circle has BOTH properties. If the experimenter is "+
	"thinking of (White and Square) the Black Circle has NEITHER property.");
}
function alert3() {
    alert("No, the experimenter could be thinking of either (Black and Circle) or (White and Square). " +
	"If the experimenter is thinking of (Black and Circle) " +
	"the white square has NEITHER property; if the experimenter is "+
	"thinking of (White and Square) the White Square has BOTH properties.");
}
function alert4() {
    alert("Yes, the experimenter could be thinking of either (Black and Circle) or (White and Square). " +
	"If the experimenter is thinking of (Black and Circle)" +
	"the White Circle has one property: Circle; if the experimenter is" +
	"thinking of (White and Square) the White Circle has one property: White.");
}
</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2009-01-08 05:04:30</wp:post_date>
		<wp:post_date_gmt>2009-01-08 12:04:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thog-problem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iq"><![CDATA[iq]]></category>
		<category domain="category" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="post_tag" nicename="logic"><![CDATA[logic]]></category>
		<category domain="category" nicename="logic-problems"><![CDATA[Logic Problems]]></category>
		<category domain="post_tag" nicename="problem"><![CDATA[problem]]></category>
		<category domain="post_tag" nicename="thog"><![CDATA[thog]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[Joe Whitehead]]></wp:comment_author>
			<wp:comment_author_email>jwhiteheadcc@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.162.138.110</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 01:43:28</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:43:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, so the right shape must be either a white square or black circle.  As above, the other THOG is a black square.  If the right shape is a white square, then the black circle is neither a THOG or the right one.  The opposite is also true.

This problem just screamed "Boole" out to me!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[Joe Whitehead]]></wp:comment_author>
			<wp:comment_author_email>jwhiteheadcc@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.162.138.110</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 01:44:36</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:44:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Err black square and white circle*]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>76.114.250.70</wp:comment_author_IP>
			<wp:comment_date>2009-06-27 21:25:49</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 04:25:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice. I never thought about it like that :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Greg Kennedy]]></wp:comment_author>
			<wp:comment_author_email>kennedy.greg@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://greg-kennedy.com</wp:comment_author_url>
			<wp:comment_author_IP>24.144.16.78</wp:comment_author_IP>
			<wp:comment_date>2009-06-27 21:10:58</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 04:10:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Let Whiteness = 0 and Blackness = 1
Let Squareness = 0 and Circular = 1
Then you can describe your THOG with two bits, one for color and one for shape
XOR with 1 1 to find the opposite THOG.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>4D Rotation Matrix - Graph 4D</title>
		<link>http://ken-soft.com/2009/01/08/graph4d-rotation4d-project-to-2d/</link>
		<pubDate>Thu, 08 Jan 2009 22:52:36 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[This program rotates points about the XY, YZ, XZ, XU, YU, and ZU axises. I then projects each 4D vector to the 2D canvas.
The Jar file can be downloaded here: <a href="http://www.ken-soft.com/code/java/graph4D/Graph4D.jar">Graph4D.jar</a>
<table><tr><td>
<a href="http://www.ken-soft.com/code/java/graph4D/graph4D.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/graph4D/graph4D.png" width="150" alt="4D rotation matrix java"/></a></td><td>
<a href="http://www.ken-soft.com/code/java/graph4D/graph4D2.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/graph4D/graph4D2.png" width="150" alt="4D rotation matrix java"/></a></td></tr></table>
Before looking at the source, let's take a look at some of the fundamental mathematics behind the software.
If you are uncomfortable with the thought of 4D matrix rotations, then I recommend reading Wikipedia, or checking out my article about 3D graphing, which can be found <a href="http://ken-soft.com/2008/12/25/graph3d-java-project-3d-points-to-2d/">here</a>. In this example, I will only show the 4D rotation matrices. Note that for each rotation matrix, 2 axises are held still while the vector is rotated around the other two axises. This may be hard to visualize at first, but It will become clear after a while.
<table><tr><td>
<tr><td>[m]rotXY = delim{[}{matrix{4}{4}{{cos(theta)} {sin(theta)} 0 0 {-sin(theta)} {cos(theta)} 0 0 0 0 1 0 0 0 0 1}}{]}[/m]</td>
<td>[m]rotYZ = delim{[}{matrix{4}{4}{1 0 0 0 0 {cos(theta)} {sin(theta)} 0 0 {-sin(theta)} {cos(theta)} 0 0 0 0 1}}{]}[/m]</td></tr>
<tr><td>[m]rotXZ = delim{[}{matrix{4}{4}{{cos(theta)} 0 {-sin(theta)} 0 0 1 0 0 {sin(theta)} 0 {cos(theta)} 0 0 0 0 1}}{]}[/m]</td>
<td>[m]rotXU = delim{[}{matrix{4}{4}{{cos(theta)} 0 0 {sin(theta)} 0 1 0 0 0 0 1 0 {-sin(theta)} 0 0 {cos(theta)}}}{]}[/m]</td></tr>
<tr><td>[m]rotYU = delim{[}{matrix{4}{4}{1 0 0 0 0 {cos(theta)} 0 {-sin(theta)} 0 0 1 0  0 {sin(theta)} 0 {cos(theta)}}}{]}[/m]</td>
<td>[m]rotZU = delim{[}{matrix{4}{4}{1 0 0 0 0 1 0 0 0 0 {cos(theta)} {-sin(theta)} 0 0 {sin(theta)} {cos(theta)}}}{]}[/m]</td></tr>
</table>
The source code can be found below as well as being bundled into the Jar file.

Transform4D.java - contains method for rotating a 4D vector
<p><a href="http://ken-soft.com/code/java/graph4D/Transform4D.java" class="code">Transform4D.java</a></p>
<p><a href="http://ken-soft.com/code/java/graph4D/Point4D.java">Point4D.java</a></p>
<p><a href="http://ken-soft.com/code/java/graph4D/Graph4D.java">Graph4D.java</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2009-01-08 15:52:36</wp:post_date>
		<wp:post_date_gmt>2009-01-08 22:52:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>graph4d-rotation4d-project-to-2d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="4d"><![CDATA[4D]]></category>
		<category domain="post_tag" nicename="graph"><![CDATA[Graph]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="matrix"><![CDATA[Matrix]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="projection"><![CDATA[Projection]]></category>
		<category domain="post_tag" nicename="rotation"><![CDATA[Rotation]]></category>
		<category domain="post_tag" nicename="transformation"><![CDATA[Transformation]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Graph3D - Rotation3D - Project 3D to 2D]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=147</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-01-08 16:17:48</wp:comment_date>
			<wp:comment_date_gmt>2009-01-08 23:17:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Graph4D - Rotation4D - Project to 2D [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Onendehopolve]]></wp:comment_author>
			<wp:comment_author_email>nedplenly@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iloveyandex.com</wp:comment_author_url>
			<wp:comment_author_IP>66.155.122.189</wp:comment_author_IP>
			<wp:comment_date>2009-02-24 04:27:59</wp:comment_date>
			<wp:comment_date_gmt>2009-02-24 11:27:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[Joe Whitehead]]></wp:comment_author>
			<wp:comment_author_email>jwhiteheadcc@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.162.138.110</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 01:38:20</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:38:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Finally!  I was looking for a wireframe 4D graph to play with.  Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>12.109.151.104</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 12:03:33</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 19:03:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[np. glad it is useful :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>168</wp:comment_id>
			<wp:comment_author><![CDATA[NeuroFuzzy]]></wp:comment_author>
			<wp:comment_author_email>dkm.guitar@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.91.242.248</wp:comment_author_IP>
			<wp:comment_date>2009-12-07 01:30:59</wp:comment_date>
			<wp:comment_date_gmt>2009-12-07 08:30:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hmm... does this mean that to express any four dimensional rotation, you need 6 angle values?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>170</wp:comment_id>
			<wp:comment_author><![CDATA[NeuroFuzzy]]></wp:comment_author>
			<wp:comment_author_email>dkm.guitar@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.91.242.248</wp:comment_author_IP>
			<wp:comment_date>2009-12-07 18:18:56</wp:comment_date>
			<wp:comment_date_gmt>2009-12-08 01:18:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you for the fast reply! I'm trying to make a 4 dimensional object viewer, and I'm wondering how many different user inputs i would need to be able to be able to show all possible rotations of a four dimensional object. Euler's rotation theorem states that you only need 3 angles to describe an arbitrary rotation, but that only applies to 3 dimensions. I guess that i'll start out using the result of six rotation matrices... but i really don't want to if i can use fewer.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>171</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>130.184.251.50</wp:comment_author_IP>
			<wp:comment_date>2009-12-08 00:38:28</wp:comment_date>
			<wp:comment_date_gmt>2009-12-08 07:38:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No problem. and yes these rotation matrices only describe the rotation around a specific Axis. You would need to derive a rotation matrix for rotations around any given vector (which is possible, though I honestly am not sure how to do this off the top of my head), 

Refer to my 3D rotation matrices page and note that I use quaternions to define a rotation around any arbitrary axis as it is simpler. I'm going to guess that there exists a similar method for mapping 4D rotations.

As for a 4 dimension object viewer, I will be uploading various 3D function and 4D function/object viewing software I recently flung together in C++. They have correspondingly contain a Vector3D.h and Vector4D.h file with some useful rotation functions. and getUnitVector() functions. 

Also, about a 4D viewer, since 4D is not directly viewable you will have to come up with some "creative" way to represent it. for example, taking a "slice" of the 4D object, which is 3D and displaying it. So in a sense draw multiple slices. Or do something like change the color of the dot depending on it's 4D value. so High 4D values represent a White pixel and fade to Blue or Black as the values go more negative. Etc.

Also dig through the source files (included in the JAR) on this page and you'll see how it all works.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>172</wp:comment_id>
			<wp:comment_author><![CDATA[NeuroFuzzy]]></wp:comment_author>
			<wp:comment_author_email>dkm.guitar@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.91.242.248</wp:comment_author_IP>
			<wp:comment_date>2009-12-08 21:40:54</wp:comment_date>
			<wp:comment_date_gmt>2009-12-09 04:40:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm planning to have a 3d-to-2d camera, which the user views through a standard camera, controlled by the movement of the mouse. The 3d world will be given by a 4d-to-3d camera, IE 4D lines intersecting a 3d cube, as opposed to 3d lines intersecting a 2d plane.

If things get too complicated, doe to the nature of euler angles (problems like gimbal lock, and odd rotation patterns), i might limit the program to rotation on the YU axis, for now.

Besides that, i'll definitely take a look at all the source code, it might be really helpful :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>169</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>69.152.205.144</wp:comment_author_IP>
			<wp:comment_date>2009-12-07 02:25:32</wp:comment_date>
			<wp:comment_date_gmt>2009-12-07 09:25:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>NeuroFuzzy
No. It just means that there are 6 different elementary ways to rotate a 4D Vector (X, Y, Z, U). 
Possible rotations in 4D space include: 
X vector around the Y
X vector around the Z
X vector around the U

Y vector around the Z
Y vector around the U

Z vector around the U 

So this leaves 6 rotations, (of course removing symmetric rotations. i.e. XU = UX, YU = UY, etc)

in 5D space (X, Y, Z, U, W) you would then have

X vector around the Y
X vector around the Z
X vector around the U
X vector around the W

Y vector around the Z
Y vector around the U
Y vector around the W

Z vector around the U
Z vector around the W

U vector around the W

for a total of 10 rotation matrices.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>797</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 17:02:29</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 17:02:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can't remember off the top of my head, but it should be the default start values stated in the code. Just download it and check it out :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>795</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1336582949.555";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>795</wp:comment_id>
			<wp:comment_author><![CDATA[Ahmed]]></wp:comment_author>
			<wp:comment_author_email>abilalahmed@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.99.49.22</wp:comment_author_IP>
			<wp:comment_date>2012-05-08 16:47:11</wp:comment_date>
			<wp:comment_date_gmt>2012-05-08 16:47:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What are the angle values for the projection shown in the left figure (http://www.ken-soft.com/code/java/graph4D/graph4D.png), 

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336495631.7333";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1336582918.225";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1450</wp:comment_id>
			<wp:comment_author><![CDATA[Bog]]></wp:comment_author>
			<wp:comment_author_email>bogbog@freemail.hu</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>152.66.83.33</wp:comment_author_IP>
			<wp:comment_date>2013-08-16 14:28:58</wp:comment_date>
			<wp:comment_date_gmt>2013-08-16 14:28:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
I have a problem that I cannot solve so far. I need to rotate a 4-simplex given in 4D on the hyperplane with normal vector (1, 1, 1, 1) so that I can draw it in 3D. For instance I need to know the rotation for the regular one having vertices e_i, and all its sub-simplices after division.

I tried to calculate a rotation matrix from axes rotations you showed, so R=rotXU*rotYU*rotZU, but I could not find out what should be the angles to use (I tried pi/4, -atan(sqrt(2)/2, and -pi/6, which looked good, but somehow the result wasn't ok). Do you know how to get the good angles for the rotations?

Thanks in advance,
Bog]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376663338.6616981029510498046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376671071.10495090484619140625;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>4D Maze - (Java)</title>
		<link>http://ken-soft.com/2009/01/14/4d-maze-java/</link>
		<pubDate>Wed, 14 Jan 2009 07:23:55 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=315</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple implementation of a 4D maze written in Java. As of now it is entirely text based however, a simple GUI is currently under development. Either way, this simple implementation should be useful to modify and/or build off of.
The algorithm used to generate the map is quite simple and always generates a perfect maze.
<blockquote>
<b>1.</b> Randomly choose a starting room
<b>2.</b> Add all surrounding rooms that have not been visited, or  to a list
<b>3.</b> While their are rooms in the list randomly select one
<b>4.</b> Set the room to visited, and start again from step 2 using the current room
</blockquote>
Note: the Java version used in this implementation uses recursion to do this.
This code has not been thoroughly checked for possible bugs, and I am sure there is a more efficient method to write a 4D maze. But, at the very least, it is flexible and each room of the maze is of class type Room4D and should be easy to modify.
The Jar file can be downloaded here: <a href="http://www.ken-soft.com/code/java/maze4D/Maze4D.jar">Maze4D.jar</a>
To run from the command line:
<blockquote>java -jar Maze4D.java dimXYZU</blockquote>
Ex:
<blockquote>java -jar Maze4D.java 5</blockquote>
This initializes a 5x5x5x5 maze. Start = (0,0,0,0), Finish = (5,5,5,5)
that's 5^4 rooms, 625 rooms, that's a lot of rooms to navigate in 4D. :) 

<blockquote>java -jar Maze4D.java dimX dimY dimZ dimU</blockquote>
Ex:
<blockquote>java -jar Maze4D.java 5 5 3 2</blockquote>
This initializes a 5x5x3x2 maze. Start = (0,0,0,0), Finish = (5,5,3,2)
5x5x3x2 = 150 rooms.

<blockquote>java -jar Maze4D.java</blockquote>
creates a default maze of dimensions 4x4x4x4

Note: be careful not to load a 4D maze that's too big or Java will run out of memory, depending on your Java settings. For example creating a room that is 10x10x10x10, 10000 rooms, will likely cause an error caused by using too much memory. besides, a 10000 room is very, very complicated, especially in 4D.
<a href="http://www.ken-soft.com/code/java/maze4D/maze4D.png" target="_blank" ><img src="http://www.ken-soft.com/code/java/maze4D/maze4D.png" width="230" alt="4D maze java"/></a>

<p><a href="http://www.ken-soft.com/code/java/maze4D/Rect4D.java">Rect4D.java</a></p>
<p><a href="http://www.ken-soft.com/code/java/maze4D/Point4D.java" >Point4D.java</a></p>
<p><a href="http://www.ken-soft.com/code/java/maze4D/Room4D.java" >Room4D.java</a></p>
<p><a href="http://www.ken-soft.com/code/java/maze4D/Maze4D.java" >Maze4D.java</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date>2009-01-14 00:23:55</wp:post_date>
		<wp:post_date_gmt>2009-01-14 07:23:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4d-maze-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="4d"><![CDATA[4D]]></category>
		<category domain="post_tag" nicename="generation"><![CDATA[Generation]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="maze"><![CDATA[Maze]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Hanson]]></wp:comment_author>
			<wp:comment_author_email>email@creativeadvertisingblog.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.creativeadvertisingblog.com</wp:comment_author_url>
			<wp:comment_author_IP>74.86.66.199</wp:comment_author_IP>
			<wp:comment_date>2009-01-14 00:40:09</wp:comment_date>
			<wp:comment_date_gmt>2009-01-14 07:40:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good writing.  Keep up the good work.  I just added your RSS feed my Google News Reader..

Matt Hanson]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com</wp:comment_author_url>
			<wp:comment_author_IP>72.204.42.171</wp:comment_author_IP>
			<wp:comment_date>2009-01-14 00:45:47</wp:comment_date>
			<wp:comment_date_gmt>2009-01-14 07:45:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks alot! I'll try to keep making stuff. :)
You also have some very useful blog articles.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Onendehopolve]]></wp:comment_author>
			<wp:comment_author_email>nedplenly@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iloveyandex.com</wp:comment_author_url>
			<wp:comment_author_IP>65.15.161.58</wp:comment_author_IP>
			<wp:comment_date>2009-02-24 04:26:18</wp:comment_date>
			<wp:comment_date_gmt>2009-02-24 11:26:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[Joe Whitehead]]></wp:comment_author>
			<wp:comment_author_email>jwhiteheadcc@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.162.138.110</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 08:04:41</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 15:04:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Showed my brother this.  The 4D Rubiks Cube site is awsome as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>太陽系</title>
		<link>http://ken-soft.com/2009/03/02/%e5%a4%aa%e9%99%bd%e7%b3%bb/</link>
		<pubDate>Mon, 02 Mar 2009 19:31:21 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=334</guid>
		<description></description>
		<content:encoded><![CDATA[これは僕が関西外国語大学にいる時、書いた論文で、内容はそんなに難しくなく、日本語を勉強している人にとって役に立つかもしれません。
<embed wmode="transparent" src="http://www.ken-soft.com/doc/Solar_System-jp.pdf" width="100%" height="600">  ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date>2009-03-02 19:31:21</wp:post_date>
		<wp:post_date_gmt>2009-03-02 19:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a4%aa%e9%99%bd%e7%b3%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="japanese"><![CDATA[Japanese]]></category>
		<category domain="category" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="category" nicename="science"><![CDATA[Science]]></category>
		<category domain="post_tag" nicename="%e5%a4%aa%e9%99%bd%e7%b3%bb"><![CDATA[太陽系]]></category>
		<category domain="post_tag" nicename="%e5%ae%87%e5%ae%99"><![CDATA[宇宙]]></category>
		<category domain="post_tag" nicename="%e6%83%91%e6%98%9f"><![CDATA[惑星]]></category>
		<category domain="post_tag" nicename="%e7%90%86%e7%b3%bb"><![CDATA[理系]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3D Cube Engine - Java</title>
		<link>http://ken-soft.com/2009/06/27/3d-cube-engine-java/</link>
		<pubDate>Sat, 27 Jun 2009 17:35:51 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=368</guid>
		<description></description>
		<content:encoded><![CDATA[<table ><tr>
<td><a href="http://www.ken-soft.com/code/java/cube3D/Screenshot-Cubes3D-4.png" target="_blank" alt="3D rotating cube engine java" ><img src="http://www.ken-soft.com/code/java/cube3D/Screenshot-Cubes3D-4.png" width="190" /></a></td>
<td><div<a href="http://www.ken-soft.com/code/java/kubix/Screenshot-Kubix-8.png" target="_blank" alt="3D rotating cube engine java" ><img src="http://www.ken-soft.com/code/java/kubix/Screenshot-Kubix-8.png" width="190" /></a></td>
<td><a href="http://www.ken-soft.com/code/java/cube3D/Screenshot-Cubes3D-2.png" target="_blank" alt="3D rotating cube engine java" ><img src="http://www.ken-soft.com/code/java/cube3D/Screenshot-Cubes3D-2.png" width="190" /></a></td>
</tr></table>
This is a recent project of mine for building 3D puzzle games, (like Rubik's Cubes). 

While the code could be optimized quite a bit, this is mainly for those who wish to better understand concepts of 3D programming. For example, one way to create, store, and manipulate a 3D polygon, whether it be a Cube, or an ellipsoid. This project contains code and algorithm's to rotate 3D polygons, around the origin, and themselves. Ability to draw 3D objects in order of increasing Z-values. Draw wireframe or solid color polygons. Keyboard and Mouse controls to move and alter the Polygons. It is a work in progress and not intended for use in graphic intensive games.

Note: later I will add rotateAroundVector() for more general rotation
Note: Ellipse3D is still very primitive but demonstrates one method creating an ellipsoid
Note: Not all Jar files contain the same versions of code. Each Jar file contains code specific to what it is supposed to do.

All source code can be found in the JAR files
Downloadable Jars (simple to complex):
1. <a href="http://www.ken-soft.com/code/java/cube3D/RenderWiredCubes3D-demo.jar">RenderWiredCubes3D-demo.jar</a>: this code rotates 4 rotating cubes about the origin.
2.  <a href="http://www.ken-soft.com/code/java/cube3D/RenderPolygons3D-demo.jar">RenderPolygons3D-demo.jar</a>: this code demonstrates various ellipsoids and cubes rotating around unique axises.
3. <a href="http://www.ken-soft.com/code/java/cube3D/Cubes3D-demo.jar">Cubes3D-demo.jar</a>: this code demonstrates more of the functionality of the 3D Cube engine by creating a Rubik's cube like look and feel. 
<b>Controls</b>
<ul>
 <li>Mouse: click and drag the cube</li>
 <li>A - reset</li>
 <li>S - toggle between solid and non-solid mode. (i.e. the inside is filled with cubes or not)</li>
 <li>D - randomly select an internally defined color scheme</li>
 <li>F - toggle between random rotate mode. Just try it :)</li>
 <li>Q - Decrease space between pieces</li>
 <li>W - Increase space between pieces</li>
 <li>E - Decrease size of cubes</li>
 <li>R - Increase size of cubes</li>
 <li>T - Decrease dimensions. i.e. 4x4x4 -> 3x3x3</li>
 <li>Y - Increase dimensions. i.e. 4x4x4 -> 5x5x5 (not that if solid mode is true, then it will render slower</li>
 <li>Arrows - Translate the cubes across the screen</li>
</ul>

If you're only interested in the Transformation algorithms, check the below link:
<a href="http://ken-soft.com/2009/01/08/graph4d-rotation4d-project-to-2d/" >Graph4D</a> - demonstrates methods and actual source code for rotating a 4D vector.
<a href="http://ken-soft.com/2008/12/25/graph3d-java-project-3d-points-to-2d/" >Graph3D</a> - demonstrates methods and actual source code for rotating a 3D vector.
<table ><tr>
<td><a href="http://www.ken-soft.com/code/java/kubix/Kubix-RandomCubes.png" target="_blank" alt="3D rotating cube engine java" ><img src="http://www.ken-soft.com/code/java/kubix/Kubix-RandomCubes.png" width="190" /></a></td>
<td><a href="http://www.ken-soft.com/images/cube3D/Screenshot-Cubes3D.png" target="_blank" alt="3D rotating cube engine java" ><img src="http://www.ken-soft.com/code/java/cube3D/Screenshot-Cubes3D.png" width="190" /></a></td>
<td><a href="http://www.ken-soft.com/code/java/kubix/Screenshot-Kubix-1.png" target="_blank" alt="3D rotating cube engine java" ><img src="http://www.ken-soft.com/code/java/kubix/Screenshot-Kubix-1.png" width="190" /></a></td>
</tr></table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>368</wp:post_id>
		<wp:post_date>2009-06-27 10:35:51</wp:post_date>
		<wp:post_date_gmt>2009-06-27 17:35:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3d-cube-engine-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="graphics"><![CDATA[Graphics]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="rotation"><![CDATA[Rotation]]></category>
		<category domain="post_tag" nicename="rubiks-cube"><![CDATA[Rubik's Cube]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; 3D Rotation Matrix - Graph 3D]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=147</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-07-23 02:29:24</wp:comment_date>
			<wp:comment_date_gmt>2009-07-23 09:29:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 3D Cube Engine - Java [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1321</wp:comment_id>
			<wp:comment_author><![CDATA[graphics]]></wp:comment_author>
			<wp:comment_author_email>MavityButterfield6037@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://oldwizardnetwork.com/services.html</wp:comment_author_url>
			<wp:comment_author_IP>89.153.16.26</wp:comment_author_IP>
			<wp:comment_date>2013-07-02 16:50:19</wp:comment_date>
			<wp:comment_date_gmt>2013-07-02 16:50:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am now not sure where you are getting your info, however great topic. I must spend a while studying much more or figuring out more. Thank you for wonderful information I was looking for this info for my mission.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372783819.1737759113311767578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SDL - Simple Space Shooter Game Demo</title>
		<link>http://ken-soft.com/2009/09/20/sdl-simple-space-shooter-game-demo-part-i/</link>
		<pubDate>Sun, 20 Sep 2009 20:32:11 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[<table><tr>
<td><a href="http://www.ken-soft.com/code/c/SDL/Game_Demo/gamedemo.png" target="_blank" alt="SDL Space Shooter Game Demo" ><img src="http://www.ken-soft.com/code/c/SDL/Game_Demo/gamedemo.png" width="190" /></a></td>
<td><a href="http://www.ken-soft.com/code/c/SDL/Game_Demo/gamedemo2.png" target="_blank" alt="SDL Space Shooter Game Demo" ><img src="http://www.ken-soft.com/code/c/SDL/Game_Demo/gamedemo2.png" width="190" /></a></td>
<td><a href="http://www.ken-soft.com/code/c/SDL/Game_Demo/gamedemo3.png" target="_blank" alt="SDL Space Shooter Game Demo" ><img src="http://www.ken-soft.com/code/c/SDL/Game_Demo/gamedemo3.png" width="190" /></a></td>
</tr></table>

This page contains source code for a simple space shooter game written in C++ using the SDL library. There are no enemies or levels, but only a ship that shoots bullets. This is meant for a beginner who is interested in getting started with SDL for use of making games. (This will be an ongoing tutorial)

All source code can be found in the ZIP file
Version Downloads with project files (All you really need is the source):
<a href="http://ken-soft.com/code/c/SDL/Game_Demo/Game_Demo_3.zip">Version 3: </a>Enemies, Event Queue(timer based), explosions, bullet & enemy collision, some minor code fixes
<a href="http://ken-soft.com/code/c/SDL/Game_Demo/Game_Demo_2.zip">Version 2:</a> Animated sprites, uses custom sprite class
<b>New to SDL? Start with Version 1 below</b>
<a href="http://www.ken-soft.com/code/c/SDL/Game_Demo/Game_Demo_windows_devcpp.zip">Version 1: Project file for DevCpp (Windows)</a>
<a href="http://www.ken-soft.com/code/c/SDL/Game_Demo/Game_Demo_linux_codeblocks.zip">Version 1: Project file for Code::Blocks (Linux)</a>

Also, for a Sprite class with rotations, animations, etc. Check out my ongoing Sprite library, also written in C++ using SDL
<a href="http://ken-soft.com/?p=234">SDL Sprite Library</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2009-09-20 20:32:11</wp:post_date>
		<wp:post_date_gmt>2009-09-20 20:32:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sdl-simple-space-shooter-game-demo-part-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="games"><![CDATA[games]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="sdl"><![CDATA[SDL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Graph 3D (Vector Rotation Source Included) C++</title>
		<link>http://ken-soft.com/2009/12/19/graph-3d-vector-rotation-source-included-c/</link>
		<pubDate>Sat, 19 Dec 2009 11:17:06 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=458</guid>
		<description></description>
		<content:encoded><![CDATA[This program implements my simple Vector3D.h source to draw simple graphs using <a href="http://www.libsdl.org" target="blank">SDL</a>. While it's not terribly advanced, it should be pretty fun to tinker with. To learn more about 3D rotations including the mathematics and more source (Java) examples, view my previous post --> <a href="http://ken-soft.com/2008/12/25/graph3d-java-project-3d-points-to-2d/" target="blank">3D Rotation Matrix - Graph3D</a>.
The source code and linux executables can be downloaded <a href="http://ken-soft.com/code/c/vector3D/Vector3D.zip" >here</a>.
If you don't want the Graph utility the single Vector3D.h file can be found <a href="http://ken-soft.com/2010/09/16/vector-3d-structure-rotation-functions-c/" >here</a>. Note that this version is more up-to-date than the one included in the zip file.

Below is a few of the graphs that I created. All of which can be found in main.cpp (there is a section in the code where you can uncomment the function that you want to graph!)
<table>
<tr><td><a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-01.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-01.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-02.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-02.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-03.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-03.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-32.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-32.png" width="140" alt="3D  graph" /></a></td></tr>

<tr><td><a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-33.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-33.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-07.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-07.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-26.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-26.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-27.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-27.png" width="140" alt="3D  graph" /></a></td></tr>

<tr><td><a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-12.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-12.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-13.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-13.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-14.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-14.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-28.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-28.png" width="140" alt="3D  graph" /></a></td></tr>


<tr><td><a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-16.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-16.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-17.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-17.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-19.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-19.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-29.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-29.png" width="140" alt="3D  graph" /></a></td></tr>


<tr><td><a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-21.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-21.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-22.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-22.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-24.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-24.png" width="140" alt="3D  graph" /></a></td><td>
<a href="http://www.ken-soft.com/code/c/vector3D/Vector3D-25.png" target="_blank" ><img src="http://www.ken-soft.com/code/c/vector3D/Vector3D-25.png" width="140" alt="3D  graph" /></a></td></tr>

</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>458</wp:post_id>
		<wp:post_date>2009-12-19 04:17:06</wp:post_date>
		<wp:post_date_gmt>2009-12-19 11:17:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>graph-3d-vector-rotation-source-included-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="matrix"><![CDATA[Matrix]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="rotation"><![CDATA[Rotation]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; 3D Rotation Matrix - Graph 3D]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=147</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2009-12-19 04:22:24</wp:comment_date>
			<wp:comment_date_gmt>2009-12-19 11:22:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Graph 3D (Vector Rotation Source Included) C++ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[Badeanzug-Shop , Bademoden , Bikinis, Wettkampfanz&uuml;ge, Leotards, Gymnastikanz&uuml;ge, K&uuml;rkleider , Hotpants]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.badeanzug-shop.eu/?p=215</wp:comment_author_url>
			<wp:comment_author_IP>94.102.210.228</wp:comment_author_IP>
			<wp:comment_date>2009-12-19 06:58:57</wp:comment_date>
			<wp:comment_date_gmt>2009-12-19 13:58:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Ken-Soft » Graph 3D (Vector Rotation Source Included) C++ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>801</wp:comment_id>
			<wp:comment_author><![CDATA[Soft &amp; Source - Get OpenSource Source easily]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://softandsource.blogspot.fr/2012/05/pidgin-opensource-source.html</wp:comment_author_url>
			<wp:comment_author_IP>94.46.8.88</wp:comment_author_IP>
			<wp:comment_date>2012-05-17 10:19:15</wp:comment_date>
			<wp:comment_date_gmt>2012-05-17 10:19:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Soft &amp; Source - Get OpenSource Source easily...</strong>

[...]Graph 3D (Vector Rotation Source Included) C++ | Ken-Soft[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337543410.0841";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Neural Network (Back-Error Propagation) C++</title>
		<link>http://ken-soft.com/2009/12/20/neural-network-back-error-propagation-c/</link>
		<pubDate>Sun, 20 Dec 2009 11:42:46 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=475</guid>
		<description></description>
		<content:encoded><![CDATA[Here is yet another simple Neural Network that implements Back-Error Propagation as a form of Reinforced Learning.
The entire project is written in C++ and requires no special libraries to compile and run.
main.cpp contains code to train both a 2 and 3-input Logical AND gate.
The zipped source code can be downloaded <a href="http://www.ken-soft.com/code/c/nn01/NeuralNetwork.zip">here</a>
A Linux executable is already compiled and included in the zip, but feel free to recompile it. A Code::Blocks Project file is also included.

<b>To Compile</b>
<code>g++ *.cpp -o NeuralNetwork</code>
It will output an executable name "NeuralNetwork"
<b>To Run</b>
open a terminal and type:
<code>./NeuralNetwork</code>
<b>Sample Output</b>
<code>Neural Network Connections Inited
 Trained in 10000 trails within an error of 1.03127e-05
0 & 0 = 4.63117e-05
0 & 1 = 0.00349833
1 & 0 = 0.00290835
1 & 1 = 0.995469
Train Logical AND 2 Inputs Demo End
Neural Network Connections Inited
Training...
 Trained in 5584 trails within an error of 9.99977e-06
0 & 0 & 0 = 3.62242e-05
0 & 0 & 1 = 0.00194301
0 & 1 & 0 = 0.000102096
0 & 1 & 1 = 0.00344352
1 & 0 & 0 = 0.000142368
1 & 0 & 1 = 0.00333881
1 & 1 & 0 = 0.0035418
1 & 1 & 1 = 0.993633
Logical AND 3 Inputs Demo End
</code>

<b>Resources:</b>
<a href="http://ken-soft.com/2008/12/24/neural-networks-simple-models/" target="_blank" >About Neural Networks (English)</a>
<a href="http://ken-soft.com/2008/12/24/%E3%83%8B%E3%83%A5%E3%83%BC%E3%83%A9%E3%83%AB%E3%83%8D%E3%83%83%E3%83%88%EF%BC%88%E7%A5%9E%E7%B5%8C%E5%9B%9E%E8%B7%AF%E7%B6%B2%E3%83%BB%E8%AA%A4%E5%B7%AE%E9%80%86%E4%BC%9D%E6%92%AD%E6%96%B9%EF%BC%89/" target="_blank" >About Neural Networks (Japanese/日本語)</a>
<a href="http://ken-soft.com/2008/12/25/neural-network-back-error-propagation-java/">Java Implementation of a Neural Network</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date>2009-12-20 04:42:46</wp:post_date>
		<wp:post_date_gmt>2009-12-20 11:42:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>neural-network-back-error-propagation-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ai"><![CDATA[AI]]></category>
		<category domain="category" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="back-error-propagation"><![CDATA[Back-Error Propagation]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="neural-network"><![CDATA[Neural Network]]></category>
		<category domain="category" nicename="neural-networks"><![CDATA[Neural Networks]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="%e3%83%8b%e3%83%a5%e3%83%bc%e3%83%a9%e3%83%ab%e3%83%8d%e3%83%83%e3%83%88"><![CDATA[ニューラルネット]]></category>
		<category domain="post_tag" nicename="%e4%ba%ba%e5%b7%a5%e7%9f%a5%e8%83%bd"><![CDATA[人工知能]]></category>
		<category domain="post_tag" nicename="%e8%aa%a4%e5%b7%ae%e9%80%86%e4%bc%9d%e6%92%ad%e6%b3%95"><![CDATA[誤差逆伝播法]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>314</wp:comment_id>
			<wp:comment_author><![CDATA[?JAKIR!]]></wp:comment_author>
			<wp:comment_author_email>jakirseu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://techtweets.com.bd/en/</wp:comment_author_url>
			<wp:comment_author_IP>119.15.156.76</wp:comment_author_IP>
			<wp:comment_date>2011-06-23 20:17:22</wp:comment_date>
			<wp:comment_date_gmt>2011-06-23 20:17:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[many many thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308860242.7828";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1310668517.5646";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>John Conway&#039;s Game of Life + Mutation (C/C++)</title>
		<link>http://ken-soft.com/2009/12/22/john-conways-game-of-life-mutation-cc/</link>
		<pubDate>Tue, 22 Dec 2009 14:37:49 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=481</guid>
		<description></description>
		<content:encoded><![CDATA[I've always been interested in AI, evolution simulations, and other interesting problems. But I will never forget one of my all time favorite classics, <a href="http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank">John Conway's Game of Life.</a>.
This simulation implements a few just a few simple rules, yet relatively complex structures emerge.
The rules are:
<b>1.</b> Any live cell with fewer than two live neighbors dies, as if caused by underpopulation.
<b>2.</b> Any live cell with more than three live neighbors dies, as if by overcrowding.
<b>3.</b> Any live cell with two or three live neighbors lives on to the next generation.
<b>4.</b> Any dead cell with exactly three live neighbors becomes a live cell.

Below are some of the patterns that I found and thought were interesting:
<table><tr><td><a href="http://ken-soft.com/code/c/Life/Life-SimplePatterns.png" target="_blank"><img src="http://ken-soft.com/code/c/Life/Life-SimplePatterns.png" alt="Game of Life Simple Patterns" /></td>
<td><a href="http://ken-soft.com/code/c/Life/Life-ComplexPatterns.png" target="_blank"><img src="http://ken-soft.com/code/c/Life/Life-ComplexPatterns.png" alt="Game of Life Complex Patterns" /></td></tr></table>

After watching many trails I noticed one thing immediately; The simulation always eventually "dies down", or reaches some equilibrium state and it is usually comprised of a bunch of simple structures. So I decided to add a <b>mutation</b> factor to the simulation such that upon mutation, A living cell dies and a dead cell comes to life. This significantly increased the life of the simulation. In fact with the right mutation rate the simulation will continue endlessly. 

In my quick little simulation I also introduced a "wrap around" feature so that structures can move infinitely in any direction.

The demo is written in C and uses the <a href="http://www.libsdl.org"  target="_blank">SDL Library</a> for drawing the points and is in 640x480 resolution. The source can be downloaded <a href="http://www.ken-soft.com/code/c/Life/Life.zip">here</a>.
To Compile:
<code>g++ main.cpp -o LIFE -lSDL</code>
To Run:
<code>./LIFE</code>

Every thing from mutation rate to cell generation at startup is configurable. Read the <b>ReadMe.txt</b> file included to see what's configurable.

Screenshots:
<table><tr><td><a href="http://ken-soft.com/code/c/Life/Life-1.png" target="_blank"><img src="http://ken-soft.com/code/c/Life/Life-1.png" alt="Life Screenshot"  width="175"/></td>
<td><a href="http://ken-soft.com/code/c/Life/Life-2.png" target="_blank"><img src="http://ken-soft.com/code/c/Life/Life-2.png" alt="Life Screenshot"  width="175" /></td><td><a href="http://ken-soft.com/code/c/Life/Life-ChangedRules.png" target="_blank"><img src="http://ken-soft.com/code/c/Life/Life-ChangedRules.png" alt="Life Screenshot Changed Rule"  width="175" /></td></tr></table>

Notice that the 3rd Image is a result of changing rule 4 to " Any dead cell with <b>two or three</b> live neighbors becomes a live cell." (I made this typo when first writing the program and was surprised by the result :)) Try changing the rules and see what results you find. 
I hope to release a more complex version in the future.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2009-12-22 07:37:49</wp:post_date>
		<wp:post_date_gmt>2009-12-22 14:37:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>john-conways-game-of-life-mutation-cc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="cellular-automata"><![CDATA[cellular automata]]></category>
		<category domain="post_tag" nicename="evolution"><![CDATA[evolution]]></category>
		<category domain="post_tag" nicename="john-conways-game-of-life"><![CDATA[John Conways Game of Life]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="mutation"><![CDATA[Mutation]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="self-organization"><![CDATA[self-organization]]></category>
		<category domain="category" nicename="simulation"><![CDATA[Simulation]]></category>
		<category domain="post_tag" nicename="simulation"><![CDATA[Simulation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>221</wp:comment_id>
			<wp:comment_author><![CDATA[Ken-Soft &raquo; Simulation Program (Motivated John Conway&#8217;s Game of Life) - C/C++]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/?p=512</wp:comment_author_url>
			<wp:comment_author_IP>208.109.181.3</wp:comment_author_IP>
			<wp:comment_date>2010-07-13 20:33:52</wp:comment_date>
			<wp:comment_date_gmt>2010-07-14 03:33:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] John Conway&#8217;s Game of Life + Mutation (C/C++) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>318</wp:comment_id>
			<wp:comment_author><![CDATA[John Conway&#8217;s Game of Life &#8211; Windows/C++ (ASCII) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/07/20/john-conways-game-of-life-windowsc-ascii/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-07-20 11:39:09</wp:comment_date>
			<wp:comment_date_gmt>2011-07-20 11:39:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] a more interesting version using SDL to draw pixel graphics, check out this link: John Conway&#8217;s Game of Life &#8211; C++/SDL  Here is the code for the ASCII Version: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311162555.1082";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Is Prime Number Algorithm</title>
		<link>http://ken-soft.com/2010/07/12/is-prime-algorithm/</link>
		<pubDate>Mon, 12 Jul 2010 18:03:43 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=502</guid>
		<description></description>
		<content:encoded><![CDATA[I was randomly surfing around the internet when I stumbled upon Google Labs Aptitude Test (GLAT)<a href="http://cruftbox.com/blog/archives/001031.html">(Found here)</a>. I can't really remember which links I followed from there but I stumbled into a question that asks to find the first 10 consecutive digits of E that are prime. While definitely not a hard task I wrote a small program in C to test whether or not a number is prime. 

The core function isPrime() is below
<pre lang="c" line="1">
bool isPrime(unsigned long long n) {
    // prime numbers are natural by definition
    if(n <= 1) {
        return false;
    } 
    unsigned long long root = sqrtl(n);
    // is the number divisible by n, such that n >= 2 and n <= sqrt(number)?
    // if so then the number is composite
    for(unsigned long long i = 2; i <= root; i++) {
        if(n % i == 0) {
            return false;
        }
    }
    return true; // it is prime!
}
</pre>
<b>note:</b> I use long long just to allow the calculation of bigger numbers. Though if the number gets to large enough this algorithm can still slow down a bit, as it could potentially have to iterate from 3 to the square root of the number being tested. For most cases this algorithm executes plenty fast enough and it is definitely better than iterating over every number between 1 and N, as many sites do.



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>502</wp:post_id>
		<wp:post_date>2010-07-12 11:03:43</wp:post_date>
		<wp:post_date_gmt>2010-07-12 18:03:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-prime-algorithm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="factor"><![CDATA[Factor]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="number"><![CDATA[Number]]></category>
		<category domain="post_tag" nicename="prime"><![CDATA[Prime]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Simulation Program (Motivated by John Conway&#039;s Game of Life) - C/C++</title>
		<link>http://ken-soft.com/2010/07/13/simulation-program-motivated-john-conways-game-of-life-cc/</link>
		<pubDate>Wed, 14 Jul 2010 03:33:44 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[In this little simulation demo I created four simple rules, of which can be activated by uncommenting them out in the source code. Though nothing too complex emerges, I still liked some the resulting behavior. 
Particularly, rule1(), results in colors slowly grouping together in various forms. It may be hard to immediately noticed so watch carefully. This was motivated by <a href="http://ken-soft.com/?p=481">John Conway's Game of Life</a>.
The program was written in C/C++, all graphics are done using <a href="http://www.libsdl.org">SDL</a>
The whole source can be found here <a href="http://ken-soft.com/code/c/Life2/main.cpp">main.cpp</a>
<b>Compile</b><code>g++ main.cpp -lSDL</code>
<b>Run</b><code>./a.out</code>
<table><tr><td><a href="http://ken-soft.com/code/c/Life2/Life-1.png" target="_blank"><img src="http://ken-soft.com/code/c/Life2/Life-1.png" width="275" alt="Game of Life Patterns" /></td>
<td><a href="http://ken-soft.com/code/c/Life2/Life-4.png" target="_blank"><img src="http://ken-soft.com/code/c/Life2/Life-4.png" width="275" alt="Game of Life Patterns" /></td></tr>
<tr><td><a href="http://ken-soft.com/code/c/Life2/Life-8.png" target="_blank"><img src="http://ken-soft.com/code/c/Life2/Life-8.png" width="275" alt="Game of Life Patterns" /></td>
<td><a href="http://ken-soft.com/code/c/Life2/Life-9.png" target="_blank"><img src="http://ken-soft.com/code/c/Life2/Life-9.png" width="275" alt="Game of Life Patterns" /></td></tr></table>

Rule1()
<pre lang="c" line="1">
for(int x = 0; x < worldWidth; x++) {
    for(int y = 0; y < worldHeight; y++) {
        int r = world[x][y].r;
        int g = world[x][y].g;
        int b = world[x][y].b;
        /*
          o o o
          o x o
          o o o
        */
        // RULES
        if(x > 0 && y > 0) { // top left
            if(world[x - 1][y - 1].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x - 1][y - 1].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x - 1][y - 1].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(y > 0) { // top
            if(world[x][y - 1].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x][y - 1].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x][y - 1].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(x < worldWidth - 1 && y > 0) { // top right
            if(world[x + 1][y - 1].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x + 1][y - 1].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x + 1][y - 1].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(x > 0) { //  left
            if(world[x - 1][y].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x - 1][y].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x - 1][y].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(x < worldWidth - 1) { // right
            if(world[x + 1][y].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x + 1][y].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x + 1][y].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(x > 0 && y < worldHeight - 1) { // bottom left
            if(world[x - 1][y + 1].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x - 1][y + 1].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x - 1][y + 1].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(y < worldHeight - 1) { // bottom
            if(world[x][y + 1].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x][y + 1].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x][y + 1].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(x < worldWidth - 1 && y < worldHeight - 1) { // bottom right
            if(world[x + 1][y + 1].r > 200) {
                r+=2; g--; b--;
            }
            if(world[x + 1][y + 1].g > 200) {
                r--; g+=2; b--;
            }
            if(world[x + 1][y + 1].b > 200) {
                r--; g--; b+=2;
            }
        }
        if(r < 0) {
            r = 0;
        }
        if(g < 0) {
            g = 0;
        }
        if(b < 0) {
            b = 0;
        }
        if(r > 255) {
            r = 255;
        }
        if(g > 255) {
            g = 255;
        }
        if(b > 255) {
            b = 255;
        }
        world[x][y].r = r;
        world[x][y].g = g;
        world[x][y].b = b;
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2010-07-13 20:33:44</wp:post_date>
		<wp:post_date_gmt>2010-07-14 03:33:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simulation-program-motivated-john-conways-game-of-life-cc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="game-of-life"><![CDATA[Game of Life]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<category domain="category" nicename="simulation"><![CDATA[Simulation]]></category>
		<category domain="post_tag" nicename="simulation"><![CDATA[Simulation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ackermann–Péter function (2 arguments) - C/C++ - Recursive Implentation</title>
		<link>http://ken-soft.com/2010/07/16/ackermann%e2%80%93peter-function-2-arguments-cc-recursive/</link>
		<pubDate>Fri, 16 Jul 2010 19:06:22 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=524</guid>
		<description></description>
		<content:encoded><![CDATA[This is an implementation of the 2 argument version of the <a target="blank" href="http://en.wikipedia.org/wiki/Ackermann_function">Ackermann Function</a> (i.e. Ackermann-Péter function). In essence, this is an example of a very simple recursive function is an example of a total computable function that is not primitive recursive. Instead of making the internet even more redundant with unnecessary text, just click the above link to view the entire Wikipedia article.
Function's like these are very fun to play with. I often think about the human brain and how it functions when I see these kinds of functions. Taking input from the environment and processing it, sometimes recursively (like in a thought cycle), then converging to some or many outputs.
C Implentation: 
<b>note</b>This function grows extremely fast, such that it quickly out grows any primitive type in C, including the largest "unsigned long long" type. Though the program will likely crash with a 0xC0000005 error from too much recursion :) 
It should run fine from A(0,0) to A(4,0) and likely crash while computing A(4,1), which is 65533. A(4,0) is 13, so the number of recursive calls jumps up enormously! I will be working on a custom, larger data type as well as a way around the error caused by too much recursion.
<pre lang="c" line="1">
/**
 * Ackermann function - recursive implementation
 */
unsigned long long A(unsigned long long m, unsigned long long n) {
    if(m == 0) {
        return n + 1;
    }else if(n == 0) {
        return A(m - 1, 1);
    } else {
        return A(m - 1, A(m, n - 1));
    }
}
</pre>
The entire source implentation can be found <a target="blank" href="http://ken-soft.com/code/c/ackermann/main.cpp">here</a>
I obtained a list of some of the expected values from this site ->     <a target="blank" href="http://www-users.cs.york.ac.uk/susan/cyc/a/ackermnn.htm">http://www-users.cs.york.ac.uk/susan/cyc/a/ackermnn.htm</a>
Here are some of the values for 0 < m < 5, 0 < n < 6
<table  align="left" bgcolor="#222" border="0">
<tbody>
<tr bgcolor="#111"><td></td><td>n=0</td><td>n=1</td><td>n=2</td><td>n=3</td><td>n=4</td><td>n=5</td></tr>
<tr><td bgcolor="#111">m=0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr>
<tr><td bgcolor="#111">m=1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td></tr>
<tr><td bgcolor="#111">m=2</td><td>3</td><td>5</td><td>7</td><td>9</td><td>11</td><td>13</td></tr>
<tr><td bgcolor="#111">m=3</td><td>5</td><td>13</td><td>29</td><td>61</td><td>125</td><td>253</td></tr>
<tr><td bgcolor="#111">m=4</td><td>13</td><td>65533</td><td>265536-3</td><td>2265536-3</td><td>A(3,2265536-3)</td><td>A(3,A(4,4))</td></tr>
</tbody>
</table>
Some of the patterns formed are very amazing. For example: A(2, n), 0 <= n < infinite, will list odd numbers starting from 3 to infinite.
To demonstrate this just insert the below loop into your code:
<pre lang="c" line="1">
for(int n = 0; n < 100; n++) {
      std::cout << "A(2, " << n << ") = " << A(2, n) << std::endl;
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2010-07-16 12:06:22</wp:post_date>
		<wp:post_date_gmt>2010-07-16 19:06:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ackermann%e2%80%93peter-function-2-arguments-cc-recursive</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ackermann"><![CDATA[Ackermann]]></category>
		<category domain="post_tag" nicename="ackermann%e2%80%93peter"><![CDATA[Ackermann–Péter]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="function"><![CDATA[function]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="recursive"><![CDATA[recursive]]></category>
		<category domain="post_tag" nicename="total-computable"><![CDATA[total computable]]></category>
		<category domain="post_tag" nicename="wilhelm"><![CDATA[Wilhelm]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Base N to 10 Conversion Class - PHP (Base 62 Implementation)</title>
		<link>http://ken-soft.com/2010/08/31/base-62-10-conversion-class-php/</link>
		<pubDate>Wed, 01 Sep 2010 02:11:38 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=544</guid>
		<description></description>
		<content:encoded><![CDATA[This class can be used convert a base N number into base 10, and back. (Which makes it ideal for usage in technologies such as URL shorteners.)
<pre lang="php" line="1">
<?php
/**
 * BNID - Base N <=> 10 converter
 *
 * @author kenny cason
 * @site www.ken-soft.com
 */
class BNID {

        // Alphabet of Base N (default is a Base 62 Implementation)
        var $bN = array(
            '0','1','2','3','4','5','6','7','8','9',
            'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
            'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'
        );

        var $baseN;
        /**
         * pass in your own alphabet of any base following above examples
         *  base should be greater than one
         * @param array $alphabet
         */
        function __construct($alphabet=null) {
            if($alphabet) {
                $this->bN = $alphabet;
            }
            $this->baseN = count($this->bN);
        }

        // convert base 10 to base N
        function base10ToN($b10num=0) {
            $bNnum = "";
            do {
                $bNnum = $this->bN[$b10num % $this->baseN] . $bNnum;
                $b10num /= $this->baseN;
            } while($b10num >= 1);     
            return $bNnum;
        }

        // convert base N to base 10
        function baseNTo10($bNnum = "") {
           $b10num = 0;
            $len = strlen($bNnum);
            for($i = 0; $i < $len; $i++) {
                $val = array_keys($this->bN, substr($bNnum, $i, 1));
                $b10num += $val[0] * pow($this->baseN, $len - $i - 1);
            }
            return $b10num;
        }

}
/*
// uncomment and call this script to demonstrate it's functionality

//$customBase = Array('0','1','2','3','4');  // base 4
//$customBase = array(
//           '0','1','2','3','4','5','6','7','8','9',
//            'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
//            'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
//	    '-','+','_','%','|','@','!','$','*','~','`','#','(',')','=','&','[',']','{','}','<','>',':',';'
//        ); // Alphabet of Base 86 
//$conv = new BNID($customBase); // initialize with custom base alphabet 
$conv = new BNID(); // default base 62 implementation

$max = pow($conv->baseN, 2);
for($i = 0; $i <= $max; $i++) {
    echo $conv->base10ToN($i).", ";
}
echo "<br/><br/>";
for($i = 0; $i <= $max; $i++) {
    $x = $conv->base10ToN($i);
    echo $conv->baseNTo10($x).", ";
}
*/
?>
</pre>

If you want to use this as a URL shortener, below is a quick demo of how to use URL Rewrite to accept www.page.com/<BaseNID> and forward it to some page to process the ID (i.e. convert to base 10 ID and query a URL from the Database using the ID). The below implementation will work for a base 62 alphabet comprised of [0-9][A-Z][a-z], which is the demo I posted.
place the below text in <b>.htaccess</b> in your websites root directory<br/>
<code>Options +FollowSymlinks
RewriteEngine on
RewriteBase /yourrootdirectory/
RewriteRule ^(([A-Z]*[a-z]*[0-9]*)*)$ main.php?b62id=$1 [L,QSA]
</code>

So it should take a domain  www.abc.com, if you specify <b>www.abc.com/zA4F</b>, it would forward to <b>www.abc.com/main.php?id=14576711</b>
<b>Here is a sample Demo</b><a href="http://www.ken-soft.com/code/php/baseconvert/AABCz23" target="blank">http://www.ken-soft.com/code/php/baseconvert/AABCz23</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date>2010-08-31 19:11:38</wp:post_date>
		<wp:post_date_gmt>2010-09-01 02:11:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>base-62-10-conversion-class-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alphanumeric"><![CDATA[alphanumeric]]></category>
		<category domain="post_tag" nicename="base10"><![CDATA[base10]]></category>
		<category domain="post_tag" nicename="base62"><![CDATA[base62]]></category>
		<category domain="post_tag" nicename="basen"><![CDATA[baseN]]></category>
		<category domain="post_tag" nicename="convert"><![CDATA[convert]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="url-shortener"><![CDATA[URL Shortener]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vector 3D structure with Operation overloads and basic functions - C++</title>
		<link>http://ken-soft.com/2010/09/16/vector-3d-structure-rotation-functions-c/</link>
		<pubDate>Thu, 16 Sep 2010 11:41:07 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=564</guid>
		<description></description>
		<content:encoded><![CDATA[This is my Vector3D structure with a set of appropriate operation overloads(-,+,/,*,--,++,etc)  that I use for various math operations as well. Feel free to add upon it or do whatever you like with it. (Update the -- and ++ operators are not correctly overloaded :) )
<pre  lang="cpp" line="1">
#ifndef __VECTOR_3D_H__
#define __VECTOR_3D_H__

#include "math.h"
#include <string>
#include <iostream>
#include <sstream>
/*
ABOUT: 3D Vector and rotation functions. Rotations about X, Y, Z, and any arbitruary Vector
AUTHOR: Kenny Cason
WEBSITE: Ken-Soft.com
EMAIL: kenneth.cason@gmail.com
DATE: 11-19-2009
*/


#define PI 3.14159265358979323846264338327950288

struct Vector3D {

    long double x;
    long double y;
    long double z;

    Vector3D() {
        x = 0; y = 0; z = 0;
    }

    Vector3D(long double _x, long double _y, long double _z) {
        x = _x; y = _y; z = _z;
    }

    /**
     * assignment operator
     */
    bool operator=(Vector3D v) {
        x = v.x; y = v.y; z = v.z;
    }

    /**
     * equality operator
     */
    bool operator==(Vector3D v) {
        return (x == v.x && y == v.y && z == v.z);
    }

    /**
     * equality operator
     */
    bool operator!=(Vector3D v) {
        return (x != v.x || y != v.y || z != v.z);
    }

    /**
     * addition operators
     */
    bool operator+=(Vector3D v) {
        x += v.x; y += v.y; z += v.z;
    }

    Vector3D operator+(Vector3D v) {
        Vector3D vect;
        vect.x = x + v.x; vect.y = y + v.y; vect.z = z + v.z;
        return vect;
    }

    Vector3D operator++(int) {
        x++; y++; z++;
    }

    Vector3D operator++() {
        ++x; ++y; ++z;
    }

    /**
     * subtraction operators
     */
    bool operator-=(Vector3D v) {
        x -= v.x; y -= v.y; z -= v.z;
    }

    Vector3D operator-(Vector3D v) {
        Vector3D vect;
        vect.x = x - v.x; vect.y = y - v.y; vect.z = z - v.z;
        return vect;
    }

    Vector3D operator--(int) {
        x--; y--; z--;
    }

    Vector3D operator--() {
        --x; --y; --z;
    }

    /**
     * division operators
     */
    bool operator/=(long double scalar) {
        x /= scalar; y /= scalar; z /= scalar;
    }

    Vector3D operator/(long double scalar){
        Vector3D vect;
        vect.x = x / scalar; vect.y = y / scalar; vect.z = z / scalar;
        return vect;
    }

    bool operator/=(Vector3D v) {
        x /= v.x; y /= v.y; z /= v.z;
    }

    Vector3D operator/(Vector3D v){
        Vector3D vect;
        vect.x = x / v.x; vect.y = y / v.y; vect.z = z / v.z;
        return vect;
    }


    /**
     * multiplication operators
     */
    bool operator*=(long double scalar) {
        x *= scalar; y *= scalar; z *= scalar;
    }

    Vector3D operator*(long double scalar){
        Vector3D vect;
        vect.x = x * scalar; vect.y = y * scalar; vect.z = z * scalar;
        return vect;
    }

    bool operator*=(Vector3D v) {
        x *= v.x; y *= v.y; z *= v.z;
    }

    Vector3D operator*(Vector3D v){
        Vector3D vect;
        vect.x = x * v.x; vect.y = y * v.y; vect.z = z * v.z;
        return vect;
    }


    /**
     * exponent operators
     */
    bool operator^=(float power) {
        x = pow(x, power); y = pow(y, power); z = pow(z, power);
    }

    Vector3D operator^(float power){
        Vector3D vect;
        vect.x = pow(x, power); vect.y = pow(y, power); vect.z = pow(z, power);
        return vect;
    }

    /**
     * Return Unit Vector
     */
    Vector3D unit() {
        Vector3D vect;
        double d = sqrt(x * x + y * y +  z * z);
        vect = *(this) / d;
        return vect;
    }

    /**
     * toString()
     */
    std::string toString() {
        std::stringstream oss;
        oss << "(" << x << "," << y << "," << z << ")";
        return oss.str();
    }

};
#endif
</pre>
<b>Example usage of operators: main.cpp (Rotation functions are demonstrated in previous posts)</b>
<pre lang="cpp" line="1">
#include <iostream>
#include "Vector3D.h"

using namespace std;

int main() {

    Vector3D v(2,2,2);
    cout << "v1, " << v.toString() << endl;

    Vector3D v2(2,3,4);
    cout << "v2, " << v2.toString() << endl;

    v += v2;

    cout << "v1 += v2, " << v.toString() << endl;

    v ^= 2;

    cout << "v1^=2, " << v.toString() << endl;

    v ^= 0.5;

    cout << "v1^=(1/2), " << v.toString() << endl;

    v--;
    --v;
    v++;
    ++v;

    cout << "v1++,++v1,v--,--v," << v.toString() << endl;

    v -= v2;

    cout << "v1 -= v2," << v.toString() << endl;

    cout << "v1 == v2, " << (v == v2) << endl;
    cout << "v1 != v2, " << (v != v2) << endl;

    cout << "unit vect, " << v2.unit().toString() << endl;

    return 0;
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>564</wp:post_id>
		<wp:post_date>2010-09-16 04:41:07</wp:post_date>
		<wp:post_date_gmt>2010-09-16 11:41:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vector-3d-structure-rotation-functions-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP Mail Class - Send HTML Mail / Attachments</title>
		<link>http://ken-soft.com/2010/09/24/php-mail-class-send-html-mail-attachments/</link>
		<pubDate>Fri, 24 Sep 2010 14:14:14 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=576</guid>
		<description></description>
		<content:encoded><![CDATA[This is a sample class to send mail using PHP. It also demonstrates how to attach images.

<pre lang="php" line="1">
<?php 

class Mail {
    var $parts;
    var $to;
    var $cc;
    var $bcc;
    var $from;
    var $headers;
    var $subject;
    var $body;
    var $html;
    var $host;
    var $port;
    
    function __construct() {
        $this->parts = array();
        $this->to = "";
        $this->cc = "";
        $this->bcc = "";
        $this->from = "";
        $this->subject = "";
        $this->body = "";
        $this->headers = "";
        $this->html = false;
    }
    
    function addAttachment($message,$name = "",$ctype = "application/octet-stream") {
        $this->parts[] = array(
                    "ctype" => $ctype,
                    "message" => $message,
                    "encode" => "base64",
                    "name" => $name
                    );            
    }
        
    function buildMessage($part) {
        $message = $part["message"];
        $message = chunk_split(base64_encode($message));
        $encoding = "base64";
        return "Content-Type: ".$part["ctype"].($part["name"]? ";name = \"".$part["name"]."\"" : "").
               "\nContent-Transfer-Encoding: $encoding\n\n$message\n";
    }
    
    function buildMultipart() {
        $boundry = "HKC".md5(uniqid(time()));
        $multipart = "Content-Type: multipart/mixed; boundary =  \"$boundry\"\n\n";
        $multipart .= "This is a MIME encoded message.\n\n--$boundry";
        for($i = sizeof($this->parts)-1; $i >= 0; $i--) {
            $multipart .= "\n".$this->buildMessage($this->parts[$i])."--$boundry";
        }
        return $multipart .= "--\n";
   }
        
    function getMail($complete = true) {
        $mime = "";
        if(!empty($this->from)) {
            $mime .= "From: ".$this->from."\n";
        }
        if(!empty($this->headers)) {
            $mime .= $this->headers."\n";
        }
        if($complete) {
            if(!empty($this->cc)) {
                $mime .= "Cc: ".$this->cc."\n"; 
            }
            if(!empty($this->bcc)) {
                $mime .= "Bcc: ".$this->bcc."\n";
            }
            if(!empty($this->subject)) {
                $mime .= "Subject: ".$this->subject."\n";
            }
        }     
        if(!empty($this->body)) {
            $this->addAttachment($this->body,"",($this->html? "text/html":"text/plain"));
        }
        $mime .=  "MIME-Version: 1.0\n".$this->buildMultipart();
        return $mime;
    }
        
    function send() {
        if(!empty($this->cc)) {
            $mime = $this->getMail(true);
        } else {
            $mime = $this->getMail(false);
        }
        if(!empty($this->host)) {
             ini_set("SMTP",$this->host);
        }
        return mail($this->to,$this->subject,$this->body,$mime);
    }
}
            
// sample usage
/*
$fp = fopen("somepicture.jpg","r");
$data = fread($fp,filesize("somepicture.jpg"));
fclose($fp);
      
$mail = new Mail();
$mail->from = "me@somewhere.com";
$mail->to = "you@somewhere.com";
$mail->subject = "welcome";
$mail->body = "<b>How's it going?</b>";
$mail->html = true;
$mail->addAttachment($data,"somepicture.jpg" ,"image/jpeg" );
$mail->send();
*/
      
?>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>576</wp:post_id>
		<wp:post_date>2010-09-24 07:14:14</wp:post_date>
		<wp:post_date_gmt>2010-09-24 14:14:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-mail-class-send-html-mail-attachments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="attachments"><![CDATA[attachments]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[HTML]]></category>
		<category domain="post_tag" nicename="mail"><![CDATA[mail]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LinkedList - C</title>
		<link>http://ken-soft.com/2010/10/21/linkedlist-c/</link>
		<pubDate>Thu, 21 Oct 2010 13:13:55 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=601</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple Doubly connected LinkedList written in C. It hasn't been thoroughly tested, but should be fun to play around with :)
<a target="_blank" href="http://www.ken-soft.com/code/c/ll/linkedlist.h">linkedlist.h</a><br/>
<a target="_blank" href="http://www.ken-soft.com/code/c/ll/main.c">main.c</a><br/>

<b>linkedlist.h</b>
<pre  lang="cpp" line="1">
#ifndef __C__LINKEDLIST__H__
#define __C__LINKEDLIST__H__

typedef struct {
    unsigned int value;
} NodeData;

 typedef struct Node {
    NodeData data;
    struct Node* next;
    struct Node* prev;
} Node;

typedef struct {
    unsigned int size;
    Node* head;
    Node* tail;
} LinkedList;

void ll_init(LinkedList* ll);       /* init linked list */
void ll_destroy(LinkedList* ll);    /* free all the memory */

void ll_addFirst(LinkedList* ll, NodeData data);    /* prepend data to list O(1) */
void ll_addLast(LinkedList* ll, NodeData data);     /* append data to list O(1) */
void ll_add(LinkedList* ll, unsigned int i, NodeData data);     /* insert data into list O(n) */

void ll_set(LinkedList* ll, unsigned int i, NodeData data);     /* set data in list O(n) */
void ll_setFirst(LinkedList* ll, NodeData data);    /* set first data in list O(1) */
void ll_setLast(LinkedList* ll, NodeData data);     /* set last data in list O(1) */

Node* ll_get(LinkedList* ll, unsigned int i);    /* get data in list O(n) */
Node* ll_getFirst(LinkedList* ll);    /* get first data in list O(1) */
Node* ll_getLast(LinkedList* ll);     /* get last data in list O(1) */

Node* ll_remove(LinkedList* ll, unsigned int i);    /* remove data from list O(n) */
void ll_clear(LinkedList* ll);  /* clear the list O(n) */
int ll_isEmpty(LinkedList* ll); /* return 1 if list is empty, else 0 */
int ll_size(LinkedList* ll);    /* return the number of elements in the list */


void ll_init(LinkedList* ll) {
    NodeData data;
    data.value = 0;

    Node* head = (Node*)malloc(sizeof(Node));
    head->next = NULL;
    head->prev = NULL;

    ll->head = head;
    ll->tail = head;

    ll->size = 0;
}

Node* ll_getHead(LinkedList* ll) {
    return ll->head;
}

Node* ll_getTail(LinkedList* ll) {
    return ll->tail;
}

int ll_isEmpty(LinkedList* ll) {
    return ll->size == 0;
}

int ll_size(LinkedList* ll) {
    return ll->size;
}

void ll_addLast(LinkedList* ll, NodeData data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;

    newNode->prev = ll->tail;
    ll->tail->next = newNode;

    newNode->next = NULL;
    ll->tail = newNode;
    ll->size++;
}

void ll_addFirst(LinkedList* ll, NodeData data) {
    ll_add(ll, 0, data); /* ll_add() is O(n), however when passed 0, behaves as O(1) */
}


void ll_add(LinkedList* ll, unsigned int i,  NodeData data) {
    int j;
    Node* n = ll->head;
    for(j = 0; j < i && j < ll->size; j++) {
        n = n->next;
    }

    Node* next = n->next; /* node after n */

    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;

    n->next = newNode;
    newNode->prev = n;

    if(next != NULL) {
        next->prev = newNode;
        newNode->next = next;
    } else { /* the node deleted was the last node, update last */
        ll->tail = newNode;
        newNode->next = NULL;
    }
    ll->size++;
}

void ll_set(LinkedList* ll, unsigned int i,  NodeData data) {
    int j;
    Node* n = ll->head->next;
    for(j = 0; j < i && j < ll->size; j++) {
        n = n->next;
    }
    n->data = data;
}

void ll_setFirst(LinkedList* ll, NodeData data) {
    ll->head->data = data;
}

void ll_setLast(LinkedList* ll, NodeData data) {
    ll->tail->data = data;
}

Node* ll_get(LinkedList* ll, unsigned int i) {
    int j;
    Node* n = ll->head->next;
    for(j = 0; j < i && j < ll->size; j++) {
        n = n->next;
    }
    return n;
}

Node* ll_getFirst(LinkedList* ll) {
    return ll->head->next;
}

Node* ll_getLast(LinkedList* ll) {
    return ll->tail;
}

Node* ll_remove(LinkedList* ll, unsigned int i) {
    int j;
    Node* n = ll->head->next;
    for(j = 0; j < i && j < ll->size; j++) {
        n = n->next;
    }
    Node* prev = n->prev; /* node before n */
    Node* next = n->next; /* node after n */
    prev->next = next;
    if(next != NULL) {
        next->prev = prev;
    } else { /* the node deleted was the last node, update last */
        ll->tail = prev;
    }
    ll->size--;
    return n;
}

void ll_clear(LinkedList* ll) {
    Node* n = ll->tail;
    while(n != ll->head) {
        n = n->prev; /* first get the previous node */
        free(n->next); /* then delete the node */
    }
    ll->head->next = NULL;
    ll->head->prev = NULL;

    ll->head = ll->head;

    ll->tail = ll->head;

    ll->size = 0;
}

void ll_destroy(LinkedList *ll) {
    ll_clear(ll);
    free(ll);
}


void ll_print(LinkedList *ll) {
    printf("[ ");
    Node* n = ll->head;
    for(;;) {
        n = n->next;
        if(n == NULL) {
            break;
        }
        printf("%d ",n->data.value);
    }
    printf("]\n");
}

#endif

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>601</wp:post_id>
		<wp:post_date>2010-10-21 09:13:55</wp:post_date>
		<wp:post_date_gmt>2010-10-21 13:13:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linkedlist-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="linkedlist"><![CDATA[LinkedList]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:comment>
			<wp:comment_id>843</wp:comment_id>
			<wp:comment_author><![CDATA[Struct containing pointers to itself]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://news361.org/struct-containing-pointers-to-itself.html</wp:comment_author_url>
			<wp:comment_author_IP>209.190.61.40</wp:comment_author_IP>
			<wp:comment_date>2012-09-16 06:46:59</wp:comment_date>
			<wp:comment_date_gmt>2012-09-16 06:46:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I understand (or think that I do) that struct Node not the same as typedef struct Node. Granted my code compiles and runs as it&#8217;s supposed to, however, I get a lot of warnings when assigning next and prev (warning: assignment from incompatible pointer type). I am guessing that this has to do with how I&#8217;m defining them in the Node structure. I uploaded the full source here [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1351059826.3018";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>BrainF*** (Programming Language) – minor varient</title>
		<link>http://ken-soft.com/2011/01/14/brainfuck-programming-language-minor-varient/</link>
		<pubDate>Sat, 15 Jan 2011 02:12:50 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=704</guid>
		<description></description>
		<content:encoded><![CDATA[Earlier this year I was playing around with making simple programming languages and came across <a href="http://en.wikipedia.org/wiki/Brainfuck" target="_blank">"BrainFuck"</a>. I, being bored decided to write my own BrainFuck Interpreter and of course made a few changes along the way (only in I/O functions, added integer support since BrainFuck only deals with characters). If interested, I recommend reading more information about BrainFuck on Wikipedia.

The Full download including Source and examples can be found <a href="http://ken-soft.com/code/c/bf/bf.zip" target="_blank">HERE</a>.

Here are the basic rules of BrainFuck with some added I/O Functions.<br/>
<table class="table" border="1">
<tbody><tr>
<th align="center">brainfuck command</th>
<th align="left">C equivalent</th>
</tr><tr>
<td style="text-align: center;">&gt;</td>
<td>++CP;</td>
</tr><tr>
<td style="text-align: center;">&lt;</td>
<td>--CP;</td>
</tr><tr>
<td style="text-align: center;">+</td>
<td>++*CP;</td>
</tr>
<tr>
<td style="text-align: center;">-</td>
<td>--*CP;</td>
</tr><tr>
<td style="text-align: center;">[</td>
<td>while (*CP) {</td>
</tr><tr>
<td style="text-align: center;">]</td>
<td>}</td>
</tr><tr>
<td style="text-align: center;">c</td>
<td>printf("%c",(char)*CP)</td>
</tr><tr>
<td style="text-align: center;">d</td>
<td>printf("%u",*CP);</td>
</tr><tr>
<td style="text-align: center;">C</td>
<td>while (scanf("%c", CP) != 1);</td>
</tr><tr>
<td style="text-align: center;">D</td>
<td>while (scanf("%u", CP) != 1);</td>
</tr><tr>
<td style="text-align: center;">M</td>
<td>Print out Cell and Pointers</td>
</tr><tr>
<td style="text-align: center;">I</td>
<td>Print out Instruction Pointer</td>
</tr>
</tbody></table>
<br/>
<b>CP</b> is the Cell Pointer<br/>
<b>Below are various scripts written in BrainFuck<b/>
<a href="http://ken-soft.com/code/c/bf/helloworld.bf" target="_blank">Hello World</a><br/>
<pre lang="bf" line="1">
+++++ +++++
[
    > +++++ ++
    > +++++ +++++
    > +++
    > +

    <<<< -
]
> ++ c
> + c
+++++ ++ c
c
+++ c
> ++ c
<< +++++ +++++ +++++ c
> c
+++ c
----- - c
----- --- c
> + c
> c
M
</pre>

<a href="http://ken-soft.com/code/c/bf/helloworld2.bf" target="_blank">Hello World Version 2</a><br/>
<pre lang="bf" line="1">
+++++
[
    > +++++ +++++ +++
    < -
]
+++++ +++++
[
    >> +++++ ++++
    << -
]
>> +++++ ++

< +++++ ++ c ----- --
> ++++ c  +++++ ++ cc +++ c ----- ----- ----

<< +++
[
    >>> +++++ +++++
    <<< -
]
>>> ++ c

<< +++++ +++++ +++++ +++++ ++ c ----- ----- ----- ----- --
> +++++ +++++ ++++ c +++ c ------ c -------- c ---
> + c

M
</pre>

<a href="http://ken-soft.com/code/c/bf/nestedloop.bf" target="_blank">3 Nested While loops</a><br/>
<pre lang="bf" line="1">
+++
M
[
    > +++
    [
        > +++
        [
            -
            M
        ]
        < -
    ]
    < -
]
M
</pre>

<b>Below is the source for the BrainFuck Interpreter</b>
<pre  lang="c" line="1">
#include <stdio.h>
#include <stdlib.h>

#define DEFAULT_IN_FILE "in.bf"
#define DEFAULT_MEMORY_SIZE 8

char inFile[256] = DEFAULT_IN_FILE;

/* function definitions */
void runInstructions();
int loadFile(char inFile[256]);
void printInstructions();
void clearDataBuffer();
void printDataBuffer();

unsigned int* cell; /* cell buffer, all program cell is stored in here */
unsigned int cellSize = 0;

unsigned int IP; // instruction pointer

unsigned char* instructions; /* the Instructions loaded from input file */
unsigned int instructionsSize = 0;

unsigned int* CP = NULL; /* cell Pointer */


int main(int argc, char *argv[]) {
    int i;
    for(i = 1; i < argc; i++) { /* handle parameters */
        if(strcmp(argv[i], "-i") == 0) { /* input file */
            if( i + 1 < argc) {
                sprintf(inFile, "%s", argv[i + 1]);
            } else {  /* improper format */
                return -1;
            }
        } else if(strcmp(argv[i], "-size") == 0) { /* size of cell buffer */
            if( i + 1 < argc) {
                cell = (unsigned int*) malloc( atoi(argv[i + 1]) * sizeof(unsigned int) );
                cellSize = atoi(argv[i + 1]);
            } else {  /* improper format */
                return -1;
            }
        }
    }
    if(cellSize == 0) {
        cell = (unsigned int*) malloc( DEFAULT_MEMORY_SIZE * sizeof(unsigned int) );
        cellSize = DEFAULT_MEMORY_SIZE;
    }
    CP = cell;

    loadFile(inFile);
    clearDataBuffer();
    runInstructions();
    return 0;
}

void runInstructions() {
    int i; // used in for loops
    int numCloseBrackets = 0;
    int numOpenBrackets = 0;

    for(IP = 0; IP < instructionsSize; IP++) {
        switch(instructions[IP]) {
            case '>': /* INC/DEC */
                ++CP;

                break;
            case '<':
                --CP;
                break;
            case '+': /* INC/DEC POINTER */
                ++(*CP);
                break;
            case '-':
                --(*CP);
                break;
            case '[': /* WHILE LOOP */
                if(*CP == 0) { // if CP == 0, then skip to the next matching ']'
                    numOpenBrackets = 0;
                    for(i = IP + 1; i < instructionsSize; i++) {
                        if(instructions[i] == '[') {
                            numOpenBrackets++;
                        } else if(instructions[i] == ']') {
                            if(numOpenBrackets == 0) {
                                IP = i;
                                break;
                            } else {
                                numOpenBrackets--;
                            }
                        }
                    }
                }
                break;
            case ']': /* END WHILE*/
                if(*CP != 0) { // if CP != 0, loopback to the previous matching'['
                    numCloseBrackets = 0;
                    for(i = IP - 1; i >= 0; i--) {
                        if(instructions[i] == ']') {
                            numCloseBrackets++;
                        }else if(instructions[i] == '[') {
                            if(numCloseBrackets == 0) {
                                IP = i;
                                break;
                            } else {
                                numCloseBrackets--;
                            }
                        }
                    }
                }
                break;
            case 'c':  /* OUTPUT */
                printf("%c",(char)*CP);
                break;
            case 'd':
                printf("%u",*CP);
                break;
            case 'C': /* INPUT */
                while (scanf("%c", CP) != 1);
                break;
            case 'D':
                while (scanf("%u", CP) != 1);
                break;
            case 'M': /* print Data Buffer */
                printDataBuffer();
                break;
            case 'I': /* print Instructions as is*/
                printInstructions();
                break;
            default:
                /* unknown command, ignore it */
                break;
        }
    }
}


/*
 *
 */
int loadFile(char inFile[256]) {
    FILE *fp;
    fp=fopen(inFile, "r");
    if(fp == NULL) {
        return -1;
    }
    fseek(fp, 0, SEEK_END); // seek to end of file
    instructionsSize = ftell(fp); // get current file pointer
    rewind (fp);
    instructions = (char*) malloc( instructionsSize );
    int i;
    for(i = 0; i < instructionsSize; i++) {
        instructions[i] = ' ';
    }
    if(instructions == NULL) {
        return -1;
    }
    fread (instructions,1,instructionsSize,fp);
    fclose(fp);
    return 0;
}

void printInstructions() {
    int i;
    for(i = 0; i < instructionsSize; i++) {
        printf("%c", instructions[i]);
    }
    printf("\n");
}

void clearDataBuffer() {
    int i;
    for(i = 0; i < cellSize; i++) {
        cell[i] = 0;
    }
}

void printDataBuffer() {
    int i;
    printf("\n");
    for(i = 0; i < cellSize; i++) {
        printf("[%d]=%d", i, cell[i]);
        if(CP == &cell[i]) {
            printf(" <-- (CP)");
        }
        printf("\n");
    }
    printf("\nIP = %d\n", IP);
}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date>2011-01-14 22:12:50</wp:post_date>
		<wp:post_date_gmt>2011-01-15 02:12:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brainfuck-programming-language-minor-varient</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vector ND - C++</title>
		<link>http://ken-soft.com/2011/01/19/vector-nd-cpp/</link>
		<pubDate>Wed, 19 Jan 2011 17:58:30 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=728</guid>
		<description></description>
		<content:encoded><![CDATA[This is a N-Dimensional Vector class written in C++. While it can be used for any dimension, if you would like to use 3 or less dimensions including rotation functions check out my previous post (<a href="http://ken-soft.com/2010/09/16/vector-3d-structure-rotation-functions-c/">here</a>)

<b>VectorND.cpp</b><br/>
<pre  lang="cpp" line="1">
#ifndef __VECTOR_ND_H__
#define __VECTOR_ND_H__

#include "math.h"
#include <string>
#include <iostream>
#include <sstream>
/*
ABOUT: 3D Vector and rotation functions. Rotations about X, Y, Z, and any arbitruary Vector
AUTHOR: Kenny Cason
WEBSITE: Ken-Soft.com
EMAIL: kenneth.cason@gmail.com
DATE: 1-19-2011
*/


struct VectorND {

    long double* pts;

    int dim;

    VectorND() {
        pts = new long double[0];
        dim = 0;
    }

    VectorND(long double x) {
        pts = new long double[1];
        pts[0] = x;
        dim = 1;
    }

    VectorND(long double x, long double y) {
        pts = new long double[2];
        pts[0] = x;
        pts[1] = y;
        dim = 2;
    }

    VectorND(long double x, long double y, long double z) {
        pts = new long double[3];
        pts[0] = x;
        pts[1] = y;
        pts[2] = z;
        dim = 3;
    }

    VectorND(int _dim, long double* _pts) {
        pts = new long double[_dim];
        for(int i = 0; i < _dim; i++) {
            pts[i] = _pts[i];
        }
        dim = _dim;
    }

    long double get(int i) {
        return pts[i];
    }

    long double* get() {
        return pts;
    }

    void set(int i, long double value) {
        pts[i] = value;
    }


    /**
     * assignment operator
     */
    void operator=(VectorND v) {
        pts = new long double[v.dim];
        for(int i = 0; i < dim; i++) {
            pts[i] = v.get(i);
        }
    }

    /**
     * equality operator
     */
    bool operator==(VectorND v) {
        for(int i = 0; i < dim; i++) {
            if(pts[i] != v.get(i)) {
                return false;
            }
        }
        return true;
    }

    /**
     * equality operator
     */
    bool operator!=(VectorND v) {
        for(int i = 0; i < dim; i++) {
            if(pts[i] != v.get(i)) {
                return true;
            }
        }
        return false;
    }

    /**
     * addition operators
     */
    void operator+=(VectorND v) {
        for(int i = 0; i < dim; i++) {
            pts[i] += v.get(i);
        }
    }

    VectorND operator+(VectorND v) {
        VectorND vect(v.dim, v.get());
        for(int i = 0; i < dim; i++) {
            vect.set(i, pts[i] + v.get(i));
        }
        return vect;
    }

    void operator++(int) {
        for(int i = 0; i < dim; i++) {
            pts[i]++;
        }
    }

    void operator++() {
        for(int i = 0; i < dim; i++) {
            ++pts[i];
        }
    }

    /**
     * subtraction operators
     */
    void operator-=(VectorND v) {
        for(int i = 0; i < dim; i++) {
            pts[i] -= v.get(i);
        }
    }

    VectorND operator-(VectorND v) {
        VectorND vect(v.dim, v.get());
        for(int i = 0; i < dim; i++) {
            vect.set(i, pts[i] - v.get(i));
        }
        return vect;
    }

    void operator--(int) {
        for(int i = 0; i < dim; i++) {
            pts[i]--;
        }
    }

    void operator--() {
        for(int i = 0; i < dim; i++) {
            --pts[i];
        }
    }

    /**
     * division operators
     */
    void operator/=(long double scalar) {
        for(int i = 0; i < dim; i++) {
            pts[i] /= scalar;
        }
    }

    VectorND operator/(long double scalar) {
        VectorND vect(dim, pts);
        for(int i = 0; i < dim; i++) {
            vect.set(i, pts[i] / scalar);
        }
        return vect;
    }

    /**
     * multiplication operators
     */
    void operator*=(long double scalar) {
        for(int i = 0; i < dim; i++) {
            pts[i] *= scalar;
        }
    }

    VectorND operator*(long double scalar) {
        VectorND vect(dim, pts);
        for(int i = 0; i < dim; i++) {
            vect.set(i, pts[i] * scalar);
        }
        return vect;
    }

    /**
     * exponent operators
     */
    void operator^=(float power) {
        for(int i = 0; i < dim; i++) {
            pts[i] = pow(pts[i], power);
        }
    }

    VectorND operator^(float power){
        VectorND vect(dim, pts);
        for(int i = 0; i < dim; i++) {
            vect.set(i, pow(pts[i], power));
        }
        return vect;
    }

    VectorND unit() {
        VectorND vect(dim,pts);
        double d;
        for(int i = 0; i < dim; i++) {
            d += pts[i] * pts[i];
        }
        d = sqrt(d);
        vect = *(this) / d;
        return vect;
    }

    /**
     * toString()
     */
    std::string toString() {
        std::stringstream oss;
        oss << "(";
        for(int i = 0; i < dim - 1; i++) {
            oss << pts[i] << ", ";
        }
        oss << pts[dim - 1] << ")";
        return oss.str();
    }

};
#endif

</pre>


<b>main.cpp</b><br/>
<pre  lang="cpp" line="1">
#include <iostream>
#include "VectorND.h";

using namespace std;

int main() {
    cout << "Vector ND" << endl;
    long double* pts = new long double[5]{1,2,3,4,5};
    long double* pts2 = new long double[5]{1,2,3,4,5};
    VectorND v(5, pts);
    VectorND v2(5, pts);
    cout << v.toString() << endl;
    v *= 3;
    cout << v.toString() << endl;
    v /= 3;
    cout << v.toString() << endl;
    v += v2;
    cout << v.toString() << endl;
    v -= v2;
    cout << v.toString() << endl;
    v++;
    cout << v.toString() << endl;
    v--;
    cout << v.toString() << endl;


    cout << (v == v2) << endl;
    cout << (v != v2) << endl;

    cout << (v * 3).toString() << endl;
    cout << (v / 3).toString() << endl;
    cout << (v + v2).toString() << endl;
    cout << (v - v2).toString() << endl;

    cout << (v == v2) << endl;
    cout << (v != v2) << endl;

    cout << (v ^ 4).toString() << endl;
    v ^= 4;
    cout << (v).toString() << endl;
    cout <<  v.unit().toString() << endl;
    return 0;
}

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date>2011-01-19 13:58:30</wp:post_date>
		<wp:post_date_gmt>2011-01-19 17:58:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vector-nd-cpp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3D]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="local-alignment"><![CDATA[Local Alignment]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
	</item>
	<item>
		<title>TicTacToe - C (procedural style)</title>
		<link>http://ken-soft.com/2011/07/19/tictactoe-c-procedural-style/</link>
		<pubDate>Tue, 19 Jul 2011 20:07:23 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=785</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple version of TicTacToe written in C. <br/>
I wrote this primarily to help a friend of mine. It has virtually no error checking (primarily in regards to the scanf functions, so don't mess up while inputting!)

<pre lang="c" line="0">
#include <stdio.h>

char board[3][3];

char turn = 'X';

void init(char board[3][3]);
void draw(char board[3][3]);
void move(char board[3][3], char turn);
int isGameOver(char board[3][3]);


int main() {
    init(board);
    while(!isGameOver(board)) {
        draw(board);
        move(board, turn);
        // change turn
        if(turn == 'X') {
            turn = 'O';
        } else {
            turn = 'X';
        }
    }
}

void init(char board[3][3]) {
    int x, y;
    for(y = 0; y < 3; y++) {
        for(x = 0; x < 3; x++) {
            board[x][y] = ' ';
        }
    }
}

void move(char board[3][3], char turn) {
    int x, y, moved = 0;
    printf("%c's Turn:\n", turn);
    while(moved == 0) {
        printf("Input column (0-2):\n");
        scanf("%d", &x);
        printf("Input row (0-2):\n");
        scanf("%d", &y);
        if(x >= 0 && x <= 2 && y >= 0 && y <= 2) {
            if(board[x][y] == ' ') {
                board[x][y] = turn;
                moved = 1;
            } else {
                printf("You can not go there!\n");
            }
        } else {
            printf("Row or Column invalid!\n");
        }
    }
}

int isGameOver(char board[3][3]) {
    int x, y;
    // check rows
    for(y = 0; y < 3; y++) {
        if(board[0][y] != ' ') {
            if(board[0][y] == board[1][y] && board[1][y] == board[2][y]) {
                printf("Player %c Wins!\n", board[0][y]);
                return 1;
            }
        }
    }
    // check columns
    for(x = 0; x < 3;x++) {
        if(board[x][0] != ' ') {
            if(board[x][0] == board[x][1] && board[x][1] == board[x][2]) {
                printf("Player %c Wins!\n", board[x][0]);
                return 1;
            }
        }
    }
    // check diagonals
    if(board[0][0] != ' ') {
        if(board[x][0] == board[1][1] && board[1][1] == board[2][2]) {
            printf("Player %c Wins!\n", board[0][0]);
            return 1;
        }
    }
    if(board[2][0] != ' ') {
        if(board[2][0] == board[1][1] && board[1][1] == board[0][2]) {
            printf("Player %c Wins!\n", board[2][0]);
            return 1;
        }
    }
    // check cat game
    if(board[0][0] != ' ' && board[1][0] != ' ' && board[2][0] != ' ' &&
       board[0][1] != ' ' && board[1][1] != ' ' && board[2][1] != ' ' &&
       board[0][2] != ' ' && board[1][2] != ' ' && board[2][2] != ' ') {
        printf("Cat Game!");
        return 1;
    }
    // the game is still going
    return 0;
}

void draw(char board[3][3]) {
    int x, y;
    for(y = 0; y < 3; y++) {
        for(x = 0; x < 3; x++) {
            printf("%c", board[x][y]);
            if(x < 2) {
                printf("|");
            }
        }
        printf("\n");
        if(y < 2) {
            printf("-----\n");
        }
    }
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>785</wp:post_id>
		<wp:post_date>2011-07-19 20:07:23</wp:post_date>
		<wp:post_date_gmt>2011-07-19 20:07:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tictactoe-c-procedural-style</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="computer"><![CDATA[Computer]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="category" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>315</wp:comment_id>
			<wp:comment_author><![CDATA[Scott]]></wp:comment_author>
			<wp:comment_author_email>slavigne@uark.edu</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.220.102.66</wp:comment_author_IP>
			<wp:comment_date>2011-07-19 22:39:19</wp:comment_date>
			<wp:comment_date_gmt>2011-07-19 22:39:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, so you used forward declarations of the functions so you could include the array in them?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311115194.0015";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311115159.3512";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>316</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.109.151.104</wp:comment_author_IP>
			<wp:comment_date>2011-07-19 22:43:57</wp:comment_date>
			<wp:comment_date_gmt>2011-07-19 22:43:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Scott, thanks for the question.
That's not entirely the case, but close.
Take this for  example, if you try to use a variable name "i" in code but never define it, the code has no idea what it is, so at some point you have to say "int i;"
or "char i;"
or whatever type it is correct
so the same goes for functions
you have to tell the code to expect a function of a specific name and behavior
so the things you see at the beginning are telling the code that hey there is a function named init that returns void and excepts a char array [3][3] (and the name is optional i just like it for style)
so that later on in the code when you call
init(board); it knows what that means

so in general before you use a function
you must at some point tell the compiler about it

now,
if you go int add(int a, int b) {return a+b;}
THEN below that type add(a,b);
it will work
since you defined the full function before calling it

when code gets real big
or multiple files start to use the same set of codeyou tend to factor these function declarations into header files that are shared then put the function definitions in C files
but for small examples like this

i just put the declarations up at top of the c file, this is common practice]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311115437.6227";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>798</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 17:03:38</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 17:03:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad it helped! I'm a bit swamped at the moment, but if I have some free time i'll try to help you debug it! In the mean time, keep trying and update me with your status :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>796</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336583018.3809";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>796</wp:comment_id>
			<wp:comment_author><![CDATA[Richard Dickinson]]></wp:comment_author>
			<wp:comment_author_email>richard@dickinson350.freeserve.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.richard-dickinson.com</wp:comment_author_url>
			<wp:comment_author_IP>2.26.113.204</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 10:12:00</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 10:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Ken
I really like your TTT C code-thanks!
I have been trying to get a simple chessboard to display in the console and take user move inputs to move the pieces but my C coding skill is limited! I thought I might try and adapt your code to help my aim. So I will post what I have so far and wonder if you could help me get it working? :-)
#include 

/*
 * Partly based on KenSoft tictactoe 
 * @http://ken-soft.com/2011/07/19/tictactoe-c-procedural-style/
*/
 
char board[8][8];
char turn = 'W';
 
void init();
void draw();
void move(char board[8][8], char turn);
int isGameOver(char board[8][8]);

int main() {
    init(board);
    while(!isGameOver(board)) {
        draw(board);
        move(board, turn);
        // change turn
        if(turn == 'W') {
            turn = 'B';
        } else {
            turn = 'W';
        }
    }
}

void init() {
int r;
int c;

char board[8][8]={
{'r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'},
{'p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'},
{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
{' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
{'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'},
{'R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'}
};
 printf("\n");
for (r=0;r&lt;8;r++)
{
for (c=0;c= 0 &amp;&amp; r = 0 &amp;&amp; c &lt;= 8) {
            if(board[r][c] == &#039; &#039;) {
                board[r][c] = turn;
                moved = 1;
            } else {
                printf(&quot;You can not go there!\n&quot;);
            }
        } else {
            printf(&quot;Row or Column invalid!\n&quot;);
        }
    }
}
int isGameOver(char board[8][8]) {
    
    // the game is still going
    return 0;
}
 
void draw() {
    int r;
int c;
char board[8][8]={
{&#039;r&#039;, &#039;n&#039;, &#039;b&#039;, &#039;q&#039;, &#039;k&#039;, &#039;b&#039;, &#039;n&#039;, &#039;r&#039;},
{&#039;p&#039;, &#039;p&#039;, &#039;p&#039;, &#039;p&#039;, &#039;p&#039;, &#039;p&#039;, &#039;p&#039;, &#039;p&#039;},
{&#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;},
{&#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;},
{&#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;},
{&#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;, &#039; &#039;},
{&#039;P&#039;, &#039;P&#039;, &#039;P&#039;, &#039;P&#039;, &#039;P&#039;, &#039;P&#039;, &#039;P&#039;, &#039;P&#039;},
{&#039;R&#039;, &#039;N&#039;, &#039;B&#039;, &#039;Q&#039;, &#039;K&#039;, &#039;B&#039;, &#039;N&#039;, &#039;R&#039;}
};
 printf(&quot;\n&quot;);
for (r=0;r&lt;8;r++)
{
for (c=0;c&lt;8;c++)
{
	printf(&quot;%c&quot;,board[r][c]);
	
}
printf(&quot;\n&quot;);

}
}

Many thanks...:-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336558320.1922";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1336582964.7412";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>John Conway&#039;s Game of Life - Windows/C++ (ASCII)</title>
		<link>http://ken-soft.com/2011/07/20/john-conways-game-of-life-windowsc-ascii/</link>
		<pubDate>Wed, 20 Jul 2011 11:39:05 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=790</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple version of John Conway's Game of Life written in C/C++ and runs on Windows using ASCII graphics. 

For a more interesting version using SDL to draw pixel graphics, check out this link: <a href="http://ken-soft.com/2009/12/22/john-conways-game-of-life-mutation-cc/">John Conway's Game of Life - C++/SDL</a>
<img src="http://ken-soft.com/code/c/LifeAscii/sshot.PNG" alt="John Conway's Game of Life" target="_blank" width="600"/>
Here is the code for the ASCII Version:
<pre lang="c" line="1">
#include "math.h"
#include <iostream>
#include <stdlib.h>
#include <windows.h>
#include <time.h>

void init();
void draw();
void process();
void processMutate(int x, int y);
int getNumNeigbors(int x, int y);
void clrscr();
void flip();
char getLeft(int x, int y);
char getRight(int x, int y);
char getUp(int x, int y);
char getDown(int x, int y);
char getUpLeft(int x, int y);
char getUpRight(int x, int y);
char getDownLeft(int x, int y);
char getDownRight(int x, int y);
void sleep(unsigned int mseconds);

char BLOCKS[] = {' ', '*'};
int NUM_BLOCKS = 2;
char LIVE = BLOCKS[1];
char DEAD = BLOCKS[0];

int GRID_WIDTH = 70;
int GRID_HEIGHT = 22;
char** grid;
char** gridTmp;

int main() {
    init();
    bool running = true;
    while(running) {
        draw();
        sleep(500);
        process();
    }
}


void init() {
    srand(time(0));
    grid = new char*[GRID_WIDTH];
    gridTmp = new char*[GRID_WIDTH];
    for(int x = 0; x < GRID_WIDTH; ++x) {
         grid[x] = new char[GRID_HEIGHT];
         gridTmp[x] = new char[GRID_HEIGHT];
         for(int y = 0; y < GRID_HEIGHT; ++y) {
              grid[x][y] = BLOCKS[rand() % NUM_BLOCKS];
              gridTmp[x][y] = ' ';
         }
    }
}

void draw() {
    clrscr();
    for(int y = 0; y < GRID_HEIGHT; ++y) {
        for(int x = 0; x < GRID_WIDTH; ++x) {
            std::cout << grid[x][y];
        }
        std::cout << std::endl;
    }
}

void process() {
    for(int y = 0; y < GRID_HEIGHT; ++y) {
        for(int x = 0; x < GRID_WIDTH; ++x) {
            int neighbors = getNumNeigbors(x, y);
            if(grid[x][y] == LIVE) {
                //1. Any live cell with fewer than two live neighbors dies, as if caused by underpopulation.
                //2. Any live cell with more than three live neighbors dies, as if by overcrowding.
                if(neighbors < 2 || neighbors > 3) {
                    gridTmp[x][y] = DEAD;
                } else {
                    gridTmp[x][y] = LIVE;
                }
                //3. Any live cell with two or three live neighbors lives on to the next generation.

            } else {
                //4. Any dead cell with exactly three live neighbors becomes a live cell.
                if(neighbors == 3) {
                    gridTmp[x][y] = LIVE;
                } else {
                    gridTmp[x][y] = DEAD;
                }
            }
          //  processMutate(x, y);
        }
    }
    flip();
}


int getNumNeigbors(int x, int y) {
    int i = 0;
    if(getLeft(x, y) == LIVE) {
        i++;
    }
    if(getRight(x, y) == LIVE) {
        i++;
    }
    if(getUp(x, y) == LIVE) {
        i++;
    }
    if(getDown(x, y) == LIVE) {
        i++;
    }
    if(getUpLeft(x, y) == LIVE) {
        i++;
    }
    if(getUpRight(x, y) == LIVE) {
        i++;
    }
    if(getDownLeft(x, y) == LIVE) {
        i++;
    }
    if(getDownRight(x, y) == LIVE) {
        i++;
    }
    return i;
}


void processMutate(int x, int y) {
    if(rand() % 1000 > 997) {
        if(gridTmp[x][y] == DEAD) {
            gridTmp[x][y] = LIVE;
        }
    }
}

void flip() {
    char** tmp = grid;
    grid = gridTmp;
    gridTmp = tmp;

}


char getLeft(int x, int y) {
    if(x == 0) {
        return DEAD;
    }
    return grid[x - 1][y];
}

char getRight(int x, int y) {
    if(x == GRID_WIDTH - 1) {
        return DEAD;
    }
    return grid[x + 1][y];
}

char getUp(int x, int y) {
    if(y == 0) {
        return DEAD;
    }
    return grid[x][y - 1];
}

char getDown(int x, int y) {
    if(y == GRID_HEIGHT - 1) {
        return DEAD;
    }
    return grid[x][y + 1];
}

char getUpLeft(int x, int y) {
    if(x == 0 || y == 0) {
        return DEAD;
    }
    return grid[x - 1][y - 1];
}

char getUpRight(int x, int y) {
    if(x == GRID_WIDTH - 1 || y == 0) {
        return DEAD;
    }
    return grid[x + 1][y - 1];
}

char getDownLeft(int x, int y) {
    if(y == GRID_HEIGHT - 1 || x == 0) {
        return DEAD;
    }
    return grid[x - 1][y + 1];
}

char getDownRight(int x, int y) {
    if(y == GRID_HEIGHT - 1 || x == GRID_WIDTH - 1 ) {
        return DEAD;
    }
    return grid[x + 1][y + 1];
}

void clrscr() {
   COORD topLeft = {0, 0};
   DWORD cCharsWritten, dwConSize;
   CONSOLE_SCREEN_BUFFER_INFO cInfo;
              HANDLE hConsoleOutput = GetStdHandle((DWORD)-11);

   // Get the number of character cells in the current buffer
   GetConsoleScreenBufferInfo(hConsoleOutput, &cInfo);
   dwConSize = cInfo.dwSize.X * cInfo.dwSize.Y;

   // Fill the whole screen with blank chars
  // FillConsoleOutputCharacter(hConsoleOutput, (TCHAR)' ', dwConSize, topLeft, &cCharsWritten);

   // Get the current text attribute
   GetConsoleScreenBufferInfo(hConsoleOutput, &cInfo);

   // Set the buffer's attributes accordingly
   FillConsoleOutputAttribute(hConsoleOutput, cInfo.wAttributes, dwConSize, topLeft, &cCharsWritten);

   // Put the cursor at its home coordinates
   SetConsoleCursorPosition(hConsoleOutput, topLeft);
}


void sleep(unsigned int mseconds) {
    clock_t goal = mseconds + clock();
    while (goal > clock());
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>790</wp:post_id>
		<wp:post_date>2011-07-20 11:39:05</wp:post_date>
		<wp:post_date_gmt>2011-07-20 11:39:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>john-conways-game-of-life-windowsc-ascii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="john-conways-game-of-life"><![CDATA[John Conways Game of Life]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="simulation"><![CDATA[Simulation]]></category>
		<category domain="post_tag" nicename="simulation"><![CDATA[Simulation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Facebook - Find Who Deleted/Added You</title>
		<link>http://ken-soft.com/2011/08/05/facebook-find-who-deletedadded-you/</link>
		<pubDate>Fri, 05 Aug 2011 01:25:24 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=800</guid>
		<description></description>
		<content:encoded><![CDATA[Being a Facebook Junky I spent a bit of time trying to find out how to find out who deleted or added me. These are the general steps I go through (I have not bothered to make a script to automate this yet). Keep in mind you must have a bit of computer knowledge to do this. All my commands are geared towards Unix/Mac users, sorry Windows :)

<h3>1. Setup</h3>
Create A folder called "fb" somewhere, this is where we will store our lists of Facebook friends for later comparison. 

<h3>2. Get List of current Facebook Friends</h3>

<strong>a. </strong>Go to this URL (This is the Facebook Graph API's home page) 
<a href="http://developers.facebook.com/docs/reference/api/">http://developers.facebook.com/docs/reference/api/</a>

<strong>b. </strong>Find the link prefaced with "Friends: " and click it, this will display a list of your friends in JSON format. 
i.e.
<pre lang="javascript" line="1">
{
   "data": [
      {
         "name": "Person A",
         "id": "111111"
      },
      {
         "name": "Person B",
         "id": "222222"
      },
      {
         "name": "Person C",
         "id": "333333"
      }
   ]
}
</pre>
<strong>c. </strong>Then Copy the contents into a file named "FB_Friends_2011_8_4" (or whatever suites you, but at least put the current date in the file name to make it easy to differentiate from other files)
<strong>d. </strong>You probably noticed there is a lot of fluff in this file, so now lets clean it up and get rid of everything except the name entries. Do do this run the below commands in the terminal (be sure to CD to the directory).
<code>
cat FB_Friends_2011_8_4 | grep "name" > tmp.txt
mv tmp.txt FB_Friends_2011_8_4
</code>
Your file now should look like:
<pre lang="javascript" line="1">
         "name": "Person A",
         "name": "Person B",
         "name": "Person C",
</pre>
Which makes it a bit easier to process later :)

<h3>3. Detecting who deleted/added you</h3>
<strong>a. </strong>You must wait until you have noticed a change in your friends numbers or for some other amount of time. I typically do this about once a month. 
<strong>b. </strong>After waiting for a change in your friend's list, repeat step 2 from above but name the file based on the current date of which you are sampling. i.e. if I do it on September 4th 2011, name the file FB_Friends_2011_9_4
<strong>c. </strong>Finally we will use a program called "diff" to compare the two files and echo out the results. Using our example dates previously mentioned I would run the below command:
<code>diff FB_Friends_2011_8_4 FB_Friends_2011_9_4</code>
<strong>d. </strong>Understanding the output
<strong>lines with: </strong>
<code> <       "name" : "Person A"</code> 
Mean that "Person A" is no longer your friend, i.e. you deleted them, or they deleted you, or they deactivated their Facebook account.
<strong>lines with: </strong>
<code> >       "name" : "Person A"</code> 
Mean that "Person A" is a new friend
<strong>lines with: </strong>
<code> <       "name" : "Person A"
---
>       "name" : "Person AA"
</code> Mean that "Person A" changed his/her name to "Person AA"
Facebook


It's a lot of steps, but it becomes very easy after you've done it a couple times :) ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>800</wp:post_id>
		<wp:post_date>2011-08-05 01:25:24</wp:post_date>
		<wp:post_date_gmt>2011-08-05 01:25:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>facebook-find-who-deletedadded-you</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="detecting-deleted-friends"><![CDATA[Detecting Deleted Friends]]></category>
		<category domain="category" nicename="facebook"><![CDATA[Facebook]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[Facebook]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>331</wp:comment_id>
			<wp:comment_author><![CDATA[Britt]]></wp:comment_author>
			<wp:comment_author_email>emailtyrick@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.zixg.com</wp:comment_author_url>
			<wp:comment_author_IP>70.174.174.16</wp:comment_author_IP>
			<wp:comment_date>2011-08-05 01:29:14</wp:comment_date>
			<wp:comment_date_gmt>2011-08-05 01:29:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice.. Easy to use too.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312510505.9571";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312507754.4221";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>332</wp:comment_id>
			<wp:comment_author><![CDATA[Daiki]]></wp:comment_author>
			<wp:comment_author_email>kanto200@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.197.249.230</wp:comment_author_IP>
			<wp:comment_date>2011-08-05 12:53:49</wp:comment_date>
			<wp:comment_date_gmt>2011-08-05 12:53:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not for Windows. Sad...         :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312548829.7665";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312551737.4646";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>334</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.174.174.16</wp:comment_author_IP>
			<wp:comment_date>2011-08-05 13:43:56</wp:comment_date>
			<wp:comment_date_gmt>2011-08-05 13:43:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are equivalent commands to do this in Windows I just haven't taken the time to write them. Perhaps I'll do that next :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>332</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312551836.8532";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>752</wp:comment_id>
			<wp:comment_author><![CDATA[Josh]]></wp:comment_author>
			<wp:comment_author_email>josh.txt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.34.132</wp:comment_author_IP>
			<wp:comment_date>2012-01-15 22:35:05</wp:comment_date>
			<wp:comment_date_gmt>2012-01-15 22:35:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey!  Great method!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326684190.5839";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326666905.6608";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>697</wp:comment_id>
			<wp:comment_author><![CDATA[Angel]]></wp:comment_author>
			<wp:comment_author_email>nekab3000@yahoo.es</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>77.210.78.170</wp:comment_author_IP>
			<wp:comment_date>2011-12-15 18:07:39</wp:comment_date>
			<wp:comment_date_gmt>2011-12-15 18:07:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you have an iphone you can use an app called "Still Friends?" to check who deleted you. It works well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323972459.4293";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1323975105.964";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>698</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2011-12-15 18:52:21</wp:comment_date>
			<wp:comment_date_gmt>2011-12-15 18:52:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice. :) I'll check it out. I remember there also used to be a Facebook App for it, but it was deleted.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>697</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1323975141.2487";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jGames - display various games using jQuery</title>
		<link>http://ken-soft.com/2011/08/08/jgames/</link>
		<pubDate>Mon, 08 Aug 2011 01:41:40 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=819</guid>
		<description></description>
		<content:encoded><![CDATA[jGames is a collection of functions written in <a href="http://jquery.com/" target="_blank">jQuery</a> to display static states of various class board games, including Checkers, Chess, Go, XiangQi, Shogi, Othello, Tic Tac Toe, Cards, and Dice.

It also supports display of a series of states (i.e. an animation). This is useful when you want to show a series of moves for demonstration purposes. The time between transitions is also configurable. 

As this is the first release be wary of any bugs and also keep in mind that I will be updating it continuously. 
<strong>jGame links</strong> 
<strong>1.</strong> <a href="http://ken-soft.com/2011/08/08/jchess/">jChess</a> 
<strong>2.</strong> <a href="http://ken-soft.com/2011/08/08/jcheckers/">jCheckers</a>
<strong>3.</strong> <a href="http://ken-soft.com/2011/08/08/jgo/">jGo</a> 
<strong>4.</strong> <a href="http://ken-soft.com/2011/08/08/jxiangqi/">jXiangQi</a> 
<strong>5.</strong> <a href="http://ken-soft.com/2011/08/08/jshogi/">jShogi</a> 
<strong>6.</strong> <a href="http://ken-soft.com/2011/08/08/jothello/">jOthello</a> 
<strong>7.</strong> <a href="http://ken-soft.com/2011/08/08/jtictactoe/">jTicTacToe</a> 

Below is a simple demo of some of the games supported. 

<strong><a href="https://github.com/kennycason/jGames">Clone from GitHub!</a></strong>

    <table>
        <tr><td><div id="chess"></div></td><td><div id="chess_anim"></div></td></tr>
<tr><td><div id="go13"></div></td></td><td><div id="checkers"></div></td></tr>
    </table>

<strong>Usage</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "chess". This is where the chess board will be rendered to.
<pre lang="javascript" line="1">
<div id="chess"></div>
</pre>
Next, create the state of the chess board using Javascript. Depending on the game you want to display will depend on the exact configuration. More documentation can be found on each of the modules pages (Coming Soon). For Demo purposes, we are going to create the static Chess board that was displayed above
<pre lang="javascript" line="1">
        var board_chess = [
            ["br", "bn", "bb", "bk", "bq", "bb", "bn", "br"],
            ["bp", "bp", "bp", "bp", "bp", "bp", "bp", "bp"],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            ["wp", "wp", "wp", "wp", "wp", "wp", "wp", "wp"],
            ["wr", "wn", "wb", "wk", "wq", "wb", "wn", "wr"]];
       $("#chess").chess(board_chess);
</pre>
That's it! 
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#checkers").checkers(board_checkers);$("#chess").chess(board_chess);$("#go13").go(board_go_13);$("#chess_anim").chessAnimator(chessAnim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>819</wp:post_id>
		<wp:post_date>2011-08-08 01:41:40</wp:post_date>
		<wp:post_date_gmt>2011-08-08 01:41:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jgames</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="checkers"><![CDATA[Checkers]]></category>
		<category domain="post_tag" nicename="chess"><![CDATA[Chess]]></category>
		<category domain="post_tag" nicename="go"><![CDATA[Go]]></category>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="jcheckers"><![CDATA[jCheckers]]></category>
		<category domain="category" nicename="jchess"><![CDATA[jChess]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgo"><![CDATA[jGo]]></category>
		<category domain="category" nicename="jothello"><![CDATA[jOthello]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="jshogi"><![CDATA[jShogi]]></category>
		<category domain="category" nicename="jxiangqi"><![CDATA[jXiangQi]]></category>
		<category domain="post_tag" nicename="othello"><![CDATA[Othello]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="shogi"><![CDATA[Shogi]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<category domain="post_tag" nicename="xiangqi"><![CDATA[XiangQi]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[jgames-display-various-games-using-jquery]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>344</wp:comment_id>
			<wp:comment_author><![CDATA[jXiangQi – Display a XiangQi(象棋) Game State/Animation (jGames) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jxiangqi/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 02:51:24</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 02:51:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is one module within the jGames suite used to display Chess game states, as well as animations. jGames can be downloaded from the [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1312777579.516";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>343</wp:comment_id>
			<wp:comment_author><![CDATA[jGo – Display a Go Game State/Animation (jGames) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jgo/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 02:31:24</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 02:31:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is one module within the jGames suite used to display Go game states, as well as animations. jGames can be downloaded from the [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1312771316.685";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>342</wp:comment_id>
			<wp:comment_author><![CDATA[jChess &#8211; Display a Chess Game State/Animation (jGames) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jchess/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 01:55:01</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 01:55:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is one module within the jGames suite used to display Chess game states, as well as animations. jGames can be downloaded from the [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312771318.2754";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>345</wp:comment_id>
			<wp:comment_author><![CDATA[jShogi – Display a Shogi(将棋) Game State/Animation (jGames) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jshogi/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 03:23:07</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 03:23:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is one module within the jGames suite used to display Shogi game states, as well as animations. jGames can be downloaded from the [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312777578.0515";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>346</wp:comment_id>
			<wp:comment_author><![CDATA[jOthello – Display a Othello Game State/Animation (jGames) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jothello/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 04:00:10</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 04:00:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is one module within the jGames suite used to display Othello game states, as well as animations. jGames can be downloaded from the [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312777576.4639";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>347</wp:comment_id>
			<wp:comment_author><![CDATA[jTicTacToe – Display a Tic Tac Toe Game State/Animation (jGames) | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jtictactoe/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 04:15:54</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 04:15:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is one module within the jGames suite used to display Tic Tac Toe game states, as well as animations. jGames can be downloaded from [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312777575.1764";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jChess - Display a Chess Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jchess/</link>
		<pubDate>Mon, 08 Aug 2011 01:54:54 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=847</guid>
		<description></description>
		<content:encoded><![CDATA[jChess is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display Chess game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. 
    <table>
        <tr><td><div id="chess"></div></td><td><div id="chess_anim"></div></td></tr>
    </table>

<strong>Display Static Chess State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "chess". This is where the chess board will be rendered to.
<pre lang="javascript" line="1">
<div id="chess"></div>
</pre>
Next, create the state of the chess board using Javascript. The below state represents every piece in the Chess game and renders the chess above left chess board.
<pre lang="javascript" line="1">
        var board_chess = [
            ["br", "bn", "bb", "bk", "bq", "bb", "bn", "br"],
            ["bp", "bp", "bp", "bp", "bp", "bp", "bp", "bp"],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            ["wp", "wp", "wp", "wp", "wp", "wp", "wp", "wp"],
            ["wr", "wn", "wb", "wk", "wq", "wb", "wn", "wr"]];
       $("#chess").chess(board_chess);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>chessAnimator()</b> function. Below is the code to render the above right Chess animation.
<pre lang="javascript" line="1">
        var chess_anim
        [
            [
                ["br", "bn", "bb", "bk", "bq", "bb", "bn", "br"],
                ["bp", "bp", "bp", "bp", "bp", "bp", "bp", "bp"],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                ["wp", "wp", "wp", "wp", "wp", "wp", "wp", "wp"],
                ["wr", "wn", "wb", "wk", "wq", "wb", "wn", "wr"]
            ],
            [
                ["br", "bn", "bb", "bk", "bq", "bb", "bn", "br"],
                ["bp", "bp", "bp", "bp", "bp", "bp", "bp", "bp"],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "wp", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                ["wp", "wp", "wp", " ", "wp", "wp", "wp", "wp"],
                ["wr", "wn", "wb", "wk", "wq", "wb", "wn", "wr"]
            ],
            [   
                ["br", "bn", "bb", "bk", "bq", "bb", "bn", "br"],
                ["bp", "bp", "bp", "bp", " ", "bp", "bp", "bp"],
                [" ", " ", " ", " ", "bp", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "wp", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                ["wp", "wp", "wp", " ", "wp", "wp", "wp", "wp"],
                ["wr", "wn", "wb", "wk", "wq", "wb", "wn", "wr"]
            ],
            [   
                ["br", "bn", "bb", "bk", "bq", "bb", "bn", "br"],
                ["bp", "bp", "bp", "bp", " ", "bp", "bp", "bp"],
                [" ", " ", " ", " ", "bp", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "wp", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "wn", " ", " "],
                ["wp", "wp", "wp", " ", "wp", "wp", "wp", "wp"],
                ["wr", "wn", "wb", "wk", "wq", "wb", " ", "wr"]
            ],
            [   
                ["br", "bn", "bb", "bk", " ", "bb", "bn", "br"],
                ["bp", "bp", "bp", "bp", "bq", "bp", "bp", "bp"],
                [" ", " ", " ", " ", "bp", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "wp", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "wn", " ", " "],
                ["wp", "wp", "wp", " ", "wp", "wp", "wp", "wp"],
                ["wr", "wn", "wb", "wk", "wq", "wb", " ", "wr"]
            ]
        ];
        $("#chess_anim").chessAnimator(chess_anim, 1000);</pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#chess").chess(board_chess);$("#chess_anim").chessAnimator(chess_anim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2011-08-08 01:54:54</wp:post_date>
		<wp:post_date_gmt>2011-08-08 01:54:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jchess</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="chess"><![CDATA[Chess]]></category>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="jchess"><![CDATA[jChess]]></category>
		<category domain="post_tag" nicename="jchess"><![CDATA[jChess]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>350</wp:comment_id>
			<wp:comment_author><![CDATA[jGames &#8211; display various games using jQuery | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jgames/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 16:07:18</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 16:07:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] be wary of any bugs and also keep in mind that I will be updating it continuously. jGame links 1. jChess 2. jCheckers 3. jGo 4. jXiangQi 5. jShogi 6. jOthello 7. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312820008.5773";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jCheckers - Display a Checkers Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jcheckers/</link>
		<pubDate>Mon, 08 Aug 2011 02:10:49 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=854</guid>
		<description></description>
		<content:encoded><![CDATA[jCheckers is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display Checkers game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. 
    <table>
        <tr><td><div id="checkers"></div></td><td><div id="checkers_anim"></div></td></tr>
    </table>

<strong>Display Static Checkers State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "checkers". This is where the chess board will be rendered to.
<pre lang="javascript" line="1">
<div id="checkers"></div>
</pre>
Next, create the state of the chess board using Javascript. The below state represents every piece in the checkers game and renders the chess above left checkers board. (Note that currently "kings" are not supported, however they will be in later releases).
<pre lang="javascript" line="1">
        var board_checkers = [
            ["r", " ", "r", " ", "r", " ", "r", " "],
            [" ", "r", " ", "r", " ", "r", " ", "r"],
            ["r", " ", "r", " ", "r", " ", "r", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", "b", " ", "b", " ", "b", " ", "b"],
            ["b", " ", "b", " ", "b", " ", "b", " "],
            [" ", "b", " ", "b", " ", "b", " ", "b"]];
         $("#checkers").checkers(board_checkers);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>checkersAnimator()</b> function. Below is the code to render the above right Checkers animation.
<pre lang="javascript" line="1">
        var board_checkers_anim =
        [
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", "r", " ", "r"],
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"],
                ["b", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ],
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", "r", " ", "r"],
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                ["b", " ", " ", " ", " ", " ", " ", " "],
                [" ", "", " ", "b", " ", "b", " ", "b"],
                ["b", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ],
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", "r", " ", "r"],
                [" ", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", " ", " ", " ", " ", " "],
                ["b", " ", " ", " ", " ", " ", " ", " "],
                [" ", "", " ", "b", " ", "b", " ", "b"],
                ["b", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ],
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", "r", " ", "r"],
                [" ", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", " ", " ", " ", " ", " "],
                ["b", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"],
                [" ", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ],
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", "r", " ", "r"],
                [" ", " ", " ", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", " ", " ", " "],
                ["b", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"],
                [" ", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ],
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", "r", " ", "r"],
                [" ", " ", "b", " ", "r", " ", "r", " "],
                [" ", "", " ", "r", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"],
                [" ", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ],
            [
                ["r", " ", "r", " ", "r", " ", "r", " "],
                [" ", "r", " ", " ", " ", "r", " ", "r"],
                [" ", " ", " ", " ", "r", " ", "r", " "],
                [" ", "r", " ", "r", " ", " ", " ", " "],
                ["", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"],
                [" ", " ", "b", " ", "b", " ", "b", " "],
                [" ", "b", " ", "b", " ", "b", " ", "b"]
            ]
        ];
       $("#checkers_anim").checkers(board_checkers_anim);
</pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#checkers").checkers(board_checkers);$("#checkers_anim").checkersAnimator(board_checkers_anim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>854</wp:post_id>
		<wp:post_date>2011-08-08 02:10:49</wp:post_date>
		<wp:post_date_gmt>2011-08-08 02:10:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jcheckers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="checkers"><![CDATA[Checkers]]></category>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="jcheckers"><![CDATA[jCheckers]]></category>
		<category domain="post_tag" nicename="jcheckers"><![CDATA[jCheckers]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jGo – Display a Go(围棋) Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jgo/</link>
		<pubDate>Mon, 08 Aug 2011 02:31:19 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=859</guid>
		<description></description>
		<content:encoded><![CDATA[jGo is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display Go game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. jGo supporst both 13x13 boards as well as 19x19 boards.
    <table>
        <tr><td><div id="go13"></div></td></tr>
       <tr><td><div id="go13_anim"></div></td></tr>
       <tr><td><div id="go19"></div></td></tr>
    </table>

<strong>Display Static Go State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "go". This is where the go board will be rendered to.
<pre lang="javascript" line="1">
<div id="go"></div>
</pre>
Next, create the state of the go board using Javascript. The below state represents every piece in the Go game and renders the go top 13x13 go board.
<pre lang="javascript" line="1">
        var board_go_13 =
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "b", "b", "b", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", "w", "w", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ];
       $("#go").go(board_go_13);</pre>
The below state represents every piece in the Go game and renders the go bottom 19x19 go board. Note that only sizes 13x13 and 19x19 work, anything else will result in an error.
<pre lang="javascript" line="1">
        var board_go = [
            ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
            [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
            [" ", " ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", "w", "b", " ", "b", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b", " ", "b", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "w", "w", " ", " "],
            [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
            [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", "b", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b", " ", " "],
            [" ", " ", "b", " ", " ", "w", "w", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", "b", "w", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", "b", " ", " ", " "],
            [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
            ["w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "w"]];
        $("#go").go(board_go);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>goAnimator()</b> function. Below is the code to render the middle Go animation.
<pre lang="javascript" line="1">
        var board_go_13_anim =
        [
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "b", "b", "b", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", "w", "w", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "b", "b", "b", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", "w", "w", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "b", "b", "b", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "b", "b", "b", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", "b", " ", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", "b", " ", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", " ", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", "w", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", "w", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],

            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", "w", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", "w", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", " ", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", "w", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", "w", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", "", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", "b", "w", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", "b", "b", "b", "w", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", "b", "b", "b", "w", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
            [
                ["b", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b"],
                [" ", " ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", "b", "w", "w", " ", "w", " ", " ", " "],
                [" ", " ", " ", "w", " ", " ", "w", " ", " ", " ", "w", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", "w", " ", " ", " ", "w", " "],
                [" ", "b", "b", " ", " ", " ", " ", " ", "w", "w", "w", " ", " "],
                [" ", "b", "w", " ", " ", " ", " ", " ", "w", " ", " ", " ", " "],
                [" ", " ", "b", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "b", "w", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", "b", " ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "]
            ],
        ];
     $("#go_anim").go(board_go_13_anim);
  </pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#go13").go(board_go_13);$("#go13_anim").goAnimator(board_go_13_anim, 1000);$("#go19").go(board_go);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date>2011-08-08 02:31:19</wp:post_date>
		<wp:post_date_gmt>2011-08-08 02:31:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jgo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="go"><![CDATA[Go]]></category>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgo"><![CDATA[jGo]]></category>
		<category domain="post_tag" nicename="jgo"><![CDATA[jGo]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1061</wp:comment_id>
			<wp:comment_author><![CDATA[jGames &#8211; display various games using jQuery | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jgames/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2013-03-21 17:25:20</wp:comment_date>
			<wp:comment_date_gmt>2013-03-21 17:25:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] jGo – Display a Go Game State/Animation (jGames) | Ken-Soft says:   August 8, 2011 at 2:31 am [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1364189148.508490085601806640625;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jXiangQi – Display a XiangQi(象棋) Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jxiangqi/</link>
		<pubDate>Mon, 08 Aug 2011 02:51:16 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=867</guid>
		<description></description>
		<content:encoded><![CDATA[jXiangQi is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display xiangqi game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. 
    <table>
        <tr><td><div id="xiangqi"></div></td></tr><tr><td><div id="xiangqi_anim"></div></td></tr>
    </table>

<strong>Display Static XiangQi State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "xiangqi". This is where the xiangqi board will be rendered to.
<pre lang="javascript" line="1">
<div id="xiangqi"></div>
</pre>
Next, create the state of the xiangqi board using Javascript. The below state represents every piece in the xiangqi game and renders the top xiangqi board.
<pre lang="javascript" line="1">
        var board_xiangqi = [
            ["br", "bn", "bb", "ba", "bk", "ba", "bb", "bn", "br"],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", "bc", " ", " ", " ", " ", " ", "bc", " "],
            ["bp", " ", "bp", " ", "bp", " ", "bp", " ", "bp"],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            ["rp", " ", "rp", " ", "rp", " ", "rp", " ", "rp"],
            [" ", "rc", " ", " ", " ", " ", " ", "rc", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            ["rr", "rn", "rb", "ra", "rk", "ra", "rb", "rn", "rr"]];
       $("#xiangqi").xiangqi(board_xiangqi);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>xiangqiAnimator()</b> function. Below is the code to render the bottom xiangqi animation.
<pre lang="javascript" line="1">
        var board_xiangqi_anim =
        [
            [
                ["br", "bn", "bb", "ba", "bk", "ba", "bb", "bn", "br"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "bc", " ", " ", " ", " ", " ", "bc", " "],
                ["bp", " ", "bp", " ", "bp", " ", "bp", " ", "bp"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                ["rp", " ", "rp", " ", "rp", " ", "rp", " ", "rp"],
                [" ", "rc", " ", " ", " ", " ", " ", "rc", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                ["rr", "rn", "rb", "ra", "rk", "ra", "rb", "rn", "rr"]
            ],
            [
                ["br", "bn", "bb", "ba", "bk", "ba", "bb", "bn", "br"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "bc", " ", " ", " ", " ", " ", "bc", " "],
                ["bp", " ", "bp", " ", "bp", " ", "bp", " ", "bp"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", "rp", " ", " "],
                ["rp", " ", "rp", " ", "rp", " ", "", " ", "rp"],
                [" ", "rc", " ", " ", " ", " ", " ", "rc", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                ["rr", "rn", "rb", "ra", "rk", "ra", "rb", "rn", "rr"]
            ],
            [
                ["br", "bn", "bb", "ba", "bk", "ba", "bb", "bn", "br"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "bc", " ", " ", " ", " ", " ", "  ", " "],
                ["bp", " ", "bp", " ", "bp", " ", "bp", " ", "bp"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", "rp", " ", " "],
                ["rp", " ", "rp", " ", "rp", " ", "", " ", "rp"],
                [" ", "rc", " ", " ", " ", " ", " ", "rc", " "],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                ["rr", "rn", "rb", "ra", "rk", "ra", "rb", "bc", "rr"]
            ],
            [
                ["br", "bn", "bb", "ba", "bk", "ba", "bb", "bn", "br"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", "bc", " ", " ", " ", " ", " ", "  ", " "],
                ["bp", " ", "bp", " ", "bp", " ", "bp", " ", "bp"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", " ", " ", " ", " ", "rp", " ", " "],
                ["rp", " ", "rp", " ", "rp", " ", "", " ", "rp"],
                [" ", "rc", " ", " ", " ", " ", " ", "rc", "rr"],
                [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                ["rr", "rn", "rb", "ra", "rk", "ra", "rb", "bc", " "]
            ]
        ];

        $("#xiangqi_anim").xiangqiAnimator(board_xiangqi_anim, 1000);</pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#xiangqi").xiangqi(board_xiangqi);$("#xiangqi_anim").xiangqiAnimator(board_xiangqi_anim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>867</wp:post_id>
		<wp:post_date>2011-08-08 02:51:16</wp:post_date>
		<wp:post_date_gmt>2011-08-08 02:51:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jxiangqi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="jxiangqi"><![CDATA[jXiangQi]]></category>
		<category domain="post_tag" nicename="jxiangqi"><![CDATA[jXiangQi]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<category domain="post_tag" nicename="xiangqi"><![CDATA[XiangQi]]></category>
		<category domain="post_tag" nicename="%e8%b1%a1%e6%a3%8b"><![CDATA[象棋]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1062</wp:comment_id>
			<wp:comment_author><![CDATA[jGames &#8211; display various games using jQuery | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jgames/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2013-03-21 17:25:36</wp:comment_date>
			<wp:comment_date_gmt>2013-03-21 17:25:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] jXiangQi – Display a XiangQi(象棋) Game State/Animation (jGames) | Ken-Soft says:   August 8, 2011 at 2:51 am [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1364189149.8207190036773681640625;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jShogi – Display a Shogi(将棋) Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jshogi/</link>
		<pubDate>Mon, 08 Aug 2011 03:23:00 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=875</guid>
		<description></description>
		<content:encoded><![CDATA[jShogi is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display Shogi game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. 
    <table>
        <tr><td><div id="shogi"></div></td></tr><tr><td><div id="shogi_anim"></div></td></tr>
    </table>

<strong>Display Static Shogi State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "shogi". This is where the shogi board will be rendered to.
<pre lang="javascript" line="1">
<div id="shogi"></div>
</pre>
Next, create the state of the chess board using Javascript. The below state represents every piece in the Chess game and renders the chess top chess board. (Note: To promote a piece you will add "p" to the end of the name, that should be updated by the end of this week!)
<pre lang="javascript" line="1">
        var board_shogi = [
            ["L-", "N-", "S-", "G-", "K-", "G-", "S-", "N-", "L-"],
            [" ", "R-", " ", " ", " ", " ", " ", "B-", " "],
            ["p-", "p-", "p-", "p-", "p-", "p-", "p-", "p-", "p-"],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", " ", " ", " ", " ", " ", " ", " "],
            ["p", "p", "p", "p", "p", "p", "p", "p", "p"],
            [" ", "B", " ", " ", " ", " ", " ", "R", " "],
            ["L", "N", "S", "G", "K", "G", "S", "N", "L"]
        ];
     //   $("#shogi").shogi(board_shogi);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>shogiAnimator()</b> function. Below is the code to render the bottom shogi animation.
<pre lang="javascript" line="1">
        var board_shogi_anim =
            [
                [
                    ["L-", "N-", "S-", "G-", "K-", "G-", "S-", "N-", "L-"],
                    [" ", "R-", " ", " ", " ", " ", " ", "B-", " "],
                    ["p-", "p-", "p-", "p-", "p-", "p-", "p-", "p-", "p-"],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    ["p", "p", "p", "p", "p", "p", "p", "p", "p"],
                    [" ", "B", " ", " ", " ", " ", " ", "R", " "],
                    ["L", "N", "S", "G", "K", "G", "S", "N", "L"]
                ],
                [
                    ["L-", "N-", "S-", "G-", "K-", "G-", "S-", "N-", "L-"],
                    [" ", "R-", " ", " ", " ", " ", " ", "B-", " "],
                    ["p-", "p-", "p-", "p-", "p-", "p-", "p-", "p-", "p-"],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", "p", " ", " ", " "],
                    ["p", "p", "p", "p", "p", " ", "p", "p", "p"],
                    [" ", "B", " ", " ", " ", " ", " ", "R", " "],
                    ["L", "N", "S", "G", "K", "G", "S", "N", "L"]
                ],
                [
                    ["L-", "N-", "S-", "G-", "K-", "G-", "S-", "N-", "L-"],
                    [" ", "R-", " ", " ", " ", " ", " ", "B-", " "],
                    ["p-", "p-", "", "p-", "p-", "p-", "p-", "p-", "p-"],
                    [" ", " ", "p-", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", "p", " ", " ", " "],
                    ["p", "p", "p", "p", "p", " ", "p", "p", "p"],
                    [" ", "B", " ", " ", " ", " ", " ", "R", " "],
                    ["L", "N", "S", "G", "K", "G", "S", "N", "L"]
                ],
                [
                    ["L-", "N-", "S-", "G-", "K-", "G-", "S-", "N-", "L-"],
                    [" ", "R-", " ", " ", " ", " ", " ", "B-", " "],
                    ["p-", "p-", " ", "p-", "p-", "p-", "p-", "p-", "p-"],
                    [" ", " ", "p-", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", " ", " ", " ", " ", " "],
                    [" ", " ", " ", " ", "p", "p", " ", " ", " "],
                    ["p", "p", "p", "p", " ", " ", "p", "p", "p"],
                    [" ", "B", " ", " ", " ", " ", " ", "R", " "],
                    ["L", "N", "S", "G", "K", "G", "S", "N", "L"]
                ]
            ];

        $("#shogi_anim").shogiAnimator(board_shogi_anim, 1000);</pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#shogi").shogi(board_shogi);$("#shogi_anim").shogiAnimator(board_shogi_anim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>875</wp:post_id>
		<wp:post_date>2011-08-08 03:23:00</wp:post_date>
		<wp:post_date_gmt>2011-08-08 03:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jshogi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="jshogi"><![CDATA[jShogi]]></category>
		<category domain="post_tag" nicename="jshogi"><![CDATA[jShogi]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="shogi"><![CDATA[Shogi]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>505</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2011-11-22 21:01:27</wp:comment_date>
			<wp:comment_date_gmt>2011-11-22 21:01:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Haha. busted. yeah I was hoping I would finish updating the css/js for shogi, it's actually missing most of the promotion rules! :) I will push to update it within 2 weeks. Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>466</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321995687.3077";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>466</wp:comment_id>
			<wp:comment_author><![CDATA[romfont]]></wp:comment_author>
			<wp:comment_author_email>f.huisema@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.romfont.com</wp:comment_author_url>
			<wp:comment_author_IP>83.86.5.183</wp:comment_author_IP>
			<wp:comment_date>2011-09-14 19:54:50</wp:comment_date>
			<wp:comment_date_gmt>2011-09-14 19:54:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're missing the css rule for the gold (kinsho) in the css file. 


.shogi_board .kinsho {
    background:transparent url("../img/shogi/kinsho.png") no-repeat;
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321995579.5328";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316030091.0049";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jOthello – Display a Othello Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jothello/</link>
		<pubDate>Mon, 08 Aug 2011 04:00:04 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=883</guid>
		<description></description>
		<content:encoded><![CDATA[jOthello is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display Othello game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. 
    <table>
        <tr><td><div id="othello"></div></td><td><div id="othello_anim"></div></td></tr>
    </table>

<strong>Display Static Othello State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "othello". This is where the othello board will be rendered to.
<pre lang="javascript" line="1">
<div id="othello"></div>
</pre>
Next, create the state of the othello board using Javascript. The below state represents every piece in the Othello game and renders the othello above left othello board.
<pre lang="javascript" line="1">
        var board_othello = [
            [" ", " ", " ", " ", " ", " ", " ", " "],
            [" ", " ", "b", " ", " ", " ", "w", " "],
            [" ", " ", "b", " ", " ", "w", " ", " "],
            [" ", "b", "b", "b", "w", "w", "w", " "],
            [" ", " ", "b", "w", "w", " ", " ", " "],
            [" ", "b", "w", "w", "w", "w", " ", " "],
            [" ", "w", " ", "w", " ", " ", " ", " "],
            ["w", "b", " ", "w", " ", " ", " ", " "]];

       $("#othello").othello(board_othello);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>othelloAnimator()</b> function. Below is the code to render the above right othello animation.
<pre lang="javascript" line="1">
        var board_othello_anim =
        [
            [
                [" ", " ", " ", " ", " ", " ", " ", " "],
                [" ", " ", "b", " ", " ", " ", "w", " "],
                [" ", " ", "b", " ", " ", "w", " ", " "],
                [" ", "b", "b", "b", "w", "w", "w", " "],
                [" ", " ", "b", "w", "w", " ", " ", " "],
                [" ", "b", "w", "w", "w", "w", " ", " "],
                [" ", "w", " ", "w", " ", " ", " ", " "],
                ["w", "b", " ", "w", " ", " ", " ", " "]
            ],
            [
                [" ", " ", "w", " ", " ", " ", " ", " "],
                [" ", " ", "b", " ", " ", " ", "w", " "],
                [" ", " ", "b", " ", " ", "w", " ", " "],
                [" ", "b", "b", "b", "w", "w", "w", " "],
                [" ", " ", "b", "w", "w", " ", " ", " "],
                [" ", "b", "w", "w", "w", "w", " ", " "],
                [" ", "w", " ", "w", " ", " ", " ", " "],
                ["w", "b", " ", "w", " ", " ", " ", " "]
            ],
            [
                [" ", " ", "w", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", "w", " "],
                [" ", " ", "w", " ", " ", "w", " ", " "],
                [" ", "b", "w", "b", "w", "w", "w", " "],
                [" ", " ", "w", "w", "w", " ", " ", " "],
                [" ", "b", "w", "w", "w", "w", " ", " "],
                [" ", "w", " ", "w", " ", " ", " ", " "],
                ["w", "b", " ", "w", " ", " ", " ", " "]
            ],
            [
                [" ", " ", "w", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", "w", " "],
                [" ", " ", "w", " ", " ", "w", " ", " "],
                [" ", "b", "w", "b", "w", "w", "w", " "],
                [" ", " ", "w", "w", "w", " ", " ", " "],
                [" ", "b", "w", "w", "w", "w", "b", " "],
                [" ", "w", " ", "w", " ", " ", " ", " "],
                ["w", "b", " ", "w", " ", " ", " ", " "]
            ],
            [
                [" ", " ", "w", " ", " ", " ", " ", " "],
                [" ", " ", "w", " ", " ", " ", "w", " "],
                [" ", " ", "w", " ", " ", "w", " ", " "],
                [" ", "b", "w", "b", "w", "w", "w", " "],
                [" ", " ", "w", "w", "w", " ", " ", " "],
                [" ", "b", "b", "b", "b", "b", "b", " "],
                [" ", "w", " ", "w", " ", " ", " ", " "],
                ["w", "b", " ", "w", " ", " ", " ", " "]
            ]
        ];

        $("#othello_anim").othelloAnimator(board_othello_anim, 1000);</pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#othello").othello(board_othello);$("#othello_anim").othelloAnimator(board_othello_anim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date>2011-08-08 04:00:04</wp:post_date>
		<wp:post_date_gmt>2011-08-08 04:00:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jothello</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jothello"><![CDATA[jOthello]]></category>
		<category domain="post_tag" nicename="jothello"><![CDATA[jOthello]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="post_tag" nicename="othello"><![CDATA[Othello]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>351</wp:comment_id>
			<wp:comment_author><![CDATA[jGames &#8211; display various games using jQuery | Ken-Soft]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ken-soft.com/2011/08/08/jgames/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.187.1</wp:comment_author_IP>
			<wp:comment_date>2011-08-08 16:07:33</wp:comment_date>
			<wp:comment_date_gmt>2011-08-08 16:07:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] be updating it continuously. jGame links 1. jChess 2. jCheckers 3. jGo 4. jXiangQi 5. jShogi 6. jOthello 7. [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312820006.7139";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1324</wp:comment_id>
			<wp:comment_author><![CDATA[shinkyoshin singapore]]></wp:comment_author>
			<wp:comment_author_email>erickleyva@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dojowu.com</wp:comment_author_url>
			<wp:comment_author_IP>220.255.1.67</wp:comment_author_IP>
			<wp:comment_date>2013-07-02 23:28:12</wp:comment_date>
			<wp:comment_date_gmt>2013-07-02 23:28:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up to every body, it's my first pay a quick visit of this weblog; 
this web site contains remarkable and really fine data in favor of readers.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372807692.8705708980560302734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1323</wp:comment_id>
			<wp:comment_author><![CDATA[foreigner loans]]></wp:comment_author>
			<wp:comment_author_email>earnest-cardwell@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.getsgloan.com</wp:comment_author_url>
			<wp:comment_author_IP>220.255.1.25</wp:comment_author_IP>
			<wp:comment_date>2013-07-02 22:14:18</wp:comment_date>
			<wp:comment_date_gmt>2013-07-02 22:14:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm amazed, I have to admit. Seldom do I encounter a blog that's both educative and 
engaging, and without a doubt, you've hit the nail on the head. The issue is an issue that too few people are speaking intelligently about. Now i'm 
very happy that I came across this during my search for something relating to this.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372803258.226818084716796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>jTicTacToe – Display a Tic Tac Toe Game State/Animation (jGames)</title>
		<link>http://ken-soft.com/2011/08/08/jtictactoe/</link>
		<pubDate>Mon, 08 Aug 2011 04:15:48 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=887</guid>
		<description></description>
		<content:encoded><![CDATA[jTicTacToe is one module within the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames</a> suite used to display Tic Tac Toe game states, as well as animations. jGames can be downloaded from the <a href="http://ken-soft.com/2011/08/08/jgames/">jGames home page</a>. 
    <table>
        <tr><td><div id="tictactoe"></div></td><td><div id="tictactoe_anim"></div></td></tr>
    </table>

<strong>Display Static Tic Tac Toe State</strong>
First include the following lines to your webpage
<pre lang="javascript" line="1">
    <script type="text/javascript" src="js/jgames/jquery.jgames.js"></script>
    <link href="js/jgames/css/style.css" rel="stylesheet" type="text/css" />
</pre>
Create an empty div tag and give it an ID, i.e. "tictactoe". This is where the tic tac toe board will be rendered to.
<pre lang="javascript" line="1">
<div id="tictactoe"></div>
</pre>
Next, create the state of the tic tac toe board using Javascript. The below state represents every piece in the Tic Tac Toe game and renders the tic tac toe above left tic tac toe board.
<pre lang="javascript" line="1">
        var board_tictactoe = [
            ["o", "o", "x"],
            ["o", "x", "x"],
            [" ", "o", " "]
        ];
       $("#tictactoe").tictactoe(board_tictactoe);</pre>

<strong>Creating an Animation</strong>
Creating an animation is very easy. You simply pass an array of states, and the time interval between states (in milliseconds) to the <b>tictactoeAnimator()</b> function. Below is the code to render the above right Tic Tac Toe animation.
<pre lang="javascript" line="1">
        var board_tictactoe_anim =
        [
            [
                [" ", " ", " "],
                [" ", " ", " "],
                [" ", " ", " "]
            ],
            [
                [" ", " ", "o"],
                [" ", " ", " "],
                [" ", " ", " "]
            ],
            [
                [" ", " ", "o"],
                [" ", "x", " "],
                [" ", " ", " "]
            ],
            [
                [" ", " ", "o"],
                [" ", "x", " "],
                [" ", " ", "o"]
            ],
            [
                [" ", " ", "o"],
                [" ", "x", "x"],
                [" ", " ", "o"]
            ],
            [
                [" ", " ", "o"],
                [" ", "x", "x"],
                [" ", "o", "o"]
            ],
            [
                [" ", " ", "o"],
                ["x", "x", "x"],
                [" ", "o", "o"]
            ]
        ];

        $("#tictactoe_anim").tictactoeAnimator(board_tictactoe_anim, 1000);</pre>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script><script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.js"></script>
<script type="text/javascript" src="http://ken-soft.com/js/jgames/jquery.jgames.demo-data.js"></script>
<link href="http://ken-soft.com/js/jgames/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
<!--
$(document).ready(function(){$("#tictactoe").tictactoe(board_tictactoe);$("#tictactoe_anim").tictactoeAnimator(board_tictactoe_anim, 1000);});
//--></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>887</wp:post_id>
		<wp:post_date>2011-08-08 04:15:48</wp:post_date>
		<wp:post_date_gmt>2011-08-08 04:15:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jtictactoe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jgames"><![CDATA[jGames]]></category>
		<category domain="category" nicename="jothello"><![CDATA[jOthello]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="post_tag" nicename="jtictactoe"><![CDATA[jTicTacToe]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="tic-tac-toe"><![CDATA[Tic Tac Toe]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>506</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.31.195</wp:comment_author_IP>
			<wp:comment_date>2011-11-22 21:02:07</wp:comment_date>
			<wp:comment_date_gmt>2011-11-22 21:02:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! did you check out the others jGames?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>471</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1321995727.498";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>471</wp:comment_id>
			<wp:comment_author><![CDATA[jostmey]]></wp:comment_author>
			<wp:comment_author_email>jostmey@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>128.135.176.219</wp:comment_author_IP>
			<wp:comment_date>2011-09-29 20:33:27</wp:comment_date>
			<wp:comment_date_gmt>2011-09-29 20:33:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Love it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317328407.9514";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321995547.8557";s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>PHP - Binary Tree</title>
		<link>http://ken-soft.com/2011/11/20/php-binary-tree/</link>
		<pubDate>Sun, 20 Nov 2011 06:48:08 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=897</guid>
		<description></description>
		<content:encoded><![CDATA[A simple binary tree in php, will add a delete function later :P

<pre lang="php" line="1">
<?php

/**
 * binary Tree node
 */
class BinaryTreeNode {

	public $object;
	public $left;
	public $right;

	public function __construct($object) {
		$this->object = $object;
		$this->left = null;
		$this->right = null;
	}

	public function compareTo($object) {
		if ($this->object <= $object) {
			return BinaryTree::$RIGHT;
		}
		return BinaryTree::$LEFT;
	}

}
/**
 * A simple BinaryTree
 *
 * @author kenny
 */
class BinaryTree {

	public static $LEFT = -1;

	public static $RIGHT = 1;

	private $root;

	private $size;

	public function __construct() {
		$this->root = null;
		$this->size = null;
	}

	public function add($object) {
		$this->addRecur($this->root, $object);
	}

	private function addRecur($n, $object) {
		if($this->root == null) {
			$this->root = new BinaryTreeNode($object);
			$this->size++;
		} else if($n->compareTo($object) == BinaryTree::$LEFT) {
			if($n->left == null) {
				$n->left = new BinaryTreeNode($object);
				$this->size++;
			} else {
				$this->addRecur($n->left, $object);
			}
		} else {
			if($n->right == null) {
				$n->right = new BinaryTreeNode($object);
				$this->size++;
			} else {
				$this->addRecur($n->right, $object);
			}
		}
	}

	public function contains($object) {
		return $this->containsRecur($this->root, $object);
	}

	private function containsRecur($n, $object) {
		if($this->root == null) {
			return false;
		} else if($n->object == $object) {
			return true;
		} else if($n->compareTo($object) == BinaryTree::$LEFT) {
			if($n->left == null) {
				return false;
			} else {
				return $this->containsRecur($n->left, $object);
			}
		} else {
			if($n->right == null) {
				return false;
			} else {
				return $this->containsRecur($n->right, $object);
			}
		}
	}

	public function size() {
		return $this->size;
	}

	public function isEmpty() {
		return ($this->size == 0);
	}

	public function getAll() {
		$all = array();
		$this->getAllRecur($this->root, $all);
		return $all;
	}

	private function getAllRecur($n, &$all) {
		if($n == null) {
			return;
		}
		$all[] = $n;
		$this->getAllRecur($n->left, $all);
		$this->getAllRecur($n->right, $all);
	}

	public function getRoot() {
		if($this->root == null) {
			return null;
		}
		return $this->root->object;
	}

}
?>
</pre>

A Unit test (using SimpleTest)

<pre lang="php" line="1">
<?php

define('SIMPLE_TEST', '../simpletest/'); 
require_once(SIMPLE_TEST . 'unit_tester.php');
require_once(SIMPLE_TEST . 'reporter.php');
$test = &new GroupTest('BinaryTreeTest');
$test->addTestCase(new BinaryTreeTest());
$test->run(new HtmlReporter());


class BinaryTreeTest extends UnitTestCase {
   
    public function setUp() {

    }

    public function test() {

        $btree = new BinaryTree();
        $this->assertEqual($btree->size(), 0);
        $btree->add(10);
        $this->assertEqual($btree->size(), 1);
        $this->assertEqual($btree->getRoot(), 10);
        
        $btree->add(15);
        $this->assertEqual($btree->size(), 2);
        
        $btree->add(5);
        $this->assertEqual($btree->size(), 3);
        $btree->add(3);
        $this->assertEqual($btree->size(), 4);

        $this->assertEqual($btree->getRoot(), 10);


        $this->assertTrue($btree->contains(10));
        $this->assertTrue($btree->contains(15));
        $this->assertTrue($btree->contains(5));
        $this->assertFalse($btree->contains(-1));
        $this->assertFalse($btree->contains(55));

        $arr = $btree->getAll();
        $this->assertEqual(count($arr), $btree->size());
        

    }

}

?>

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>897</wp:post_id>
		<wp:post_date>2011-11-20 06:48:08</wp:post_date>
		<wp:post_date_gmt>2011-11-20 06:48:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-binary-tree</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="binary-tree"><![CDATA[binary tree]]></category>
		<category domain="post_tag" nicename="btree"><![CDATA[btree]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP - Observer/Observable Design Pattern</title>
		<link>http://ken-soft.com/2011/11/20/php-observerobservable-design-pattern/</link>
		<pubDate>Sun, 20 Nov 2011 07:08:44 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=902</guid>
		<description></description>
		<content:encoded><![CDATA[This is a PHP implementation of the Java Observer/Observable classes.

Observable.php
<pre lang="php" line="1">
<?php

/**
 * Observable
 *
 * @author kenny
 */
class Observable {

	private $changed = false;

	private $observers = array();

	public function addObserver(Observer $o) {
		if($o == null) {
			throw new NullPointerException();
		}
		$contains = 0;
		foreach($this->observers as $observer) {
			if($o === $observer) {
				$contains = true;
				break;
			}
		}
		if(!$contains) {
			$this->observers[] = $o;
		}
	}

	public function deleteObserver(Observer $o) {
		for($i = 0; $i < count($this->observers); $i++) {
			if($this->observers[$i] == $o) {
				unset($this->observers[$i]);
			}
		}
		$observers = array();
		foreach($this->observers as $observer) {
			$observers[] = $observer;
		}
		$this->observers = $observers;
	}

	public function notifyObservers($object = null) {
		if(!$this->changed) {
			return;
			$this->clearChanged();
		}
		foreach($this->observers as $ob) {
			$ob->update($this, $object);
		}
	}

	public function deleteObservers() {
		$this->observers = array();
	}

	protected function setChanged() {
		$this->changed = true;
	}

	protected function clearChanged() {
		$this->changed = false;
	}

	public function hasChanged() {
		return $this->changed;
	}

	public function countObservers() {
		return count($this->observers);
	}

}
?>
</pre>

Observer.php
<pre lang="php" line="1">
<?php

/**
 *
 * @author kenny
 */
interface Observer {

	public function update(Observable $o, $object);
}
?>
</pre>

A Unit test (using SimpleTest)
<pre lang="php" line="1">
<?php

define('SIMPLE_TEST', '../simpletest/'); 
require_once(SIMPLE_TEST . 'unit_tester.php');
require_once(SIMPLE_TEST . 'reporter.php');
require_once('Observable.php');
require_once('Observer.php');

class MockObservable extends Observable {

    public $object = null;

    public function set($object) {
        $this->object = $object;
    }

    public function setAndNotify($object) {
        $this->object = $object;
        $this->setChanged();
        $this->notifyObservers($object);
    }
   
}

class MockObserver implements Observer {

    public $observed = null;

    public function update(Observable $o, $observed) {
        $this->observed = $observed;
    }
}

class ObserverTest extends UnitTestCase {
   
    public function setUp() {

    }

    public function test() {

        $observer = new MockObserver();
        $observable = new MockObservable();

        // test defaults
        $this->assertNull($observer->observed);
        $this->assertNull($observable->object);
        $this->assertFalse($observable->hasChanged());
        $this->assertEqual($observable->countObservers(), 0);
        
        // test add
        $observable->addObserver($observer);
        $this->assertEqual($observable->countObservers(), 1);

        // test to not add duplicate observers
        $observable->addObserver($observer);
        $this->assertEqual($observable->countObservers(), 1);
        $observer2 = new MockObserver();
        $observable->addObserver($observer2);
        $this->assertEqual($observable->countObservers(), 2);
        $observable->deleteObserver($observer2);
        $this->assertEqual($observable->countObservers(), 1);

        // test delete
        $observable->deleteObserver($observer);
        $this->assertEqual($observable->countObservers(), 0);
        $observable->addObserver($observer);

        $observable->set(10);
        // test not notfiy unless setChagnged() has been called
        $observable->notifyObservers();
        $this->assertNull($observer->observed);

        // test notify
        $observable->setAndNotify(10);
        $this->assertEqual($observer->observed, 10);

    }

}

?>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>902</wp:post_id>
		<wp:post_date>2011-11-20 07:08:44</wp:post_date>
		<wp:post_date_gmt>2011-11-20 07:08:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-observerobservable-design-pattern</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="design-pattern"><![CDATA[design pattern]]></category>
		<category domain="post_tag" nicename="observable"><![CDATA[observable]]></category>
		<category domain="post_tag" nicename="observer"><![CDATA[observer]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP - Logger</title>
		<link>http://ken-soft.com/2011/11/20/php-logger/</link>
		<pubDate>Sun, 20 Nov 2011 07:32:28 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=907</guid>
		<description></description>
		<content:encoded><![CDATA[Mainly written for fun, but this is a configurable Logger written in PHP that supports multiple handlers, including Writers (File, SQL, Apache's Error Log, Echo), configurable Formatting. various logging levels (FATAL, ERROR, WARN, INFO, DEBUG, TRACE). Also useful functions like isDebug/TraceEnabled(), to check before building large strings to debug/trace(). *While each logger instance can have a unique name, there isn't any parent/child hierarchy attributed to them.

<b>update:</b> Now on <a href="https://github.com/kennycason/log4php" title="GitHub" target="_blank">GitHub</a> <br/>

<pre lang="php" line="1">
<?php
/**
 * PHP Logger
 * @author Kenny Cason
 * @site www.ken-soft.com
 */
class Logger {

	/**
	 * static Logger for convenient quick use of logger
	 */
	public static function getStaticLogger($resource, $config=array()) {
		$logger = new Logger();
		$logger->resource = $resource;
		Logger::configure($logger, $config);
		return $logger;
	}

	/**
	 * singleton instances of a Logger indexed by a unique resource
	 */
	private static $loggerInstances = array();

	/*
	 * log levels, int value
	*/

	const FATAL         = 6;
	const ERROR         = 5;
	const WARN          = 4;
	const INFO          = 3;
	const DEBUG         = 2;
	const TRACE         = 1;

	/*
	 * log levels, string values
	*/
	private static $LOG_LEVELS = array( Logger::TRACE => "TRACE",
			Logger::DEBUG => "DEBUG",
			Logger::INFO => "INFO",
			Logger::WARN => "WARN",
			Logger::ERROR => "ERROR",
			Logger::FATAL => "FATAL");

	public $handlers = array();

	public $logLevel = Logger::INFO;   // default logging level is info

	/*
	 * formatting - move to LogFormatter Class later
	*/
	public $resource = ""; // a unique identifier for this logger (i.e. a class name, or script name)


	/**
	 * using singleton pattern return a logger instance
	 * @param string $resource
	 * @param array configuration
	 * @return Logger instance
	 */
	public static function getLogger($resource, $config=array()) {
		if (!isset(self::$loggerInstances[$resource])) {
			self::$loggerInstances[$resource] = new Logger();
		}
		Logger::$loggerInstances[$resource]->resource = $resource;
		Logger::configure(Logger::$loggerInstances[$resource],$config);
		return Logger::$loggerInstances[$resource];
	}

	private static function configure(Logger $logger, $config=array()) {
		if (isset($config['logLevel'])) {
			$logger->logLevel = $config['logLevel'];
		}
		if (isset($config['handlers']) && is_array($config['handlers'])) {
			$logger->clearHandlers();
			$logger->handlers = $config['handlers'];
		}
		if (isset($config['handler']) && !is_array($config['handler'])) {
			$logger->clearHandlers();
			$logger->addHandler($config['handler']);
		}

		if(empty($logger->handlers)) {
			$logger->addHandler(new LogFileHandler()); // create a default LogFileHandler
		}
	}

	public function setLevel($level=Logger::ERROR) {
		if($level >= Logger::TRACE && $level <= Logger::FATAL) {
			$this->logLevel = $level;
		} else {
			$this->logLevel = Logger::INFO;
		}
	}

	/**
	 * return the current log level
	 * @return string
	 */
	public function getLevel() {
		return  Logger::$LOG_LEVELS[$this->logLevel];
	}

	/**
	 * set the log mode. (i.e.log to LOG_TYPE_FILE / LOG_TYPE_SQL / LOG_TYPE_ERROR_LOG
	 * @param int
	 */
	public function setLogMode($logMode) {
		$this->logMode = $logMode;
	}

	/**
	 * get lhe log mode
	 * @return int
	 */
	public function getLogMode() {
		return $this->logMode;
	}


	/**
	 * get all handlers
	 */
	public function getHandlers() {
		return $this->handlers;
	}

	/**
	 * add a handler
	 * @param ILogHandler $handler
	 */
	public function addHandler(ILogHandler $handler) {
		$this->handlers[] = $handler;
	}

	/**
	 * clear all handlers
	 */
	public function clearHandlers() {
		$this->handlers = array();
	}

	/**
	 * determine if the logger level is at least DEBUG level
	 * @return bool
	 */
	public function isDebugEnabled() {
		if($this->getLevel() <= Logger::DEBUG) {
			return true;
		}
		return false;
	}

	/**
	 * determine if the logger level is at least TRACE level
	 * @return bool
	 */
	public function isTraceEnabled() {
		if($this->getLevel() <= Logger::TRACE) {
			return true;
		}
		return false;
	}

	/**
	 * log at trace level
	 * @param string $msg
	 * @param object $obj (optional)
	 */
	public function trace($msg, $obj=null) {
		if($this->logLevel <= Logger::TRACE) {
			$this->log(Logger::TRACE, $msg, $obj);
		}
	}

	/**
	 * log at debug level
	 * @param string $msg
	 * @param object $obj (optional)
	 */
	public function debug($msg, $obj=null) {
		if($this->logLevel <= Logger::DEBUG) {
			$this->log(Logger::DEBUG, $msg, $obj);
		}
	}

	/**
	 * log at info level
	 * @param string $msg
	 * @param object $obj (optional)
	 */
	public function info($msg, $obj=null) {
		if($this->logLevel <= Logger::INFO) {
			$this->log(Logger::INFO, $msg, $obj);
		}
	}

	/**
	 * log at warn level
	 * @param string $msg
	 * @param object $obj (optional)
	 */
	public function warn($msg, $obj=null) {
		if($this->logLevel <= Logger::WARN) {
			$this->log(Logger::WARN, $msg, $obj);
		}
	}

	/**
	 * log at error level
	 * @param string $msg
	 * @param object $obj (optional)
	 */
	public function error($msg, $obj=null) {
		if($this->logLevel <= Logger::ERROR) {
			$this->log(Logger::ERROR, $msg, $obj);
		}
	}

	/**
	 * log at catastrophic level
	 * @param string $msg
	 * @param object $obj (optional)
	 */
	public function fatal($msg, $obj=null) {
		if($this->logLevel <= Logger::FATAL) {
			$this->log(Logger::FATAL, $msg, $obj);
		}
	}

	/**
	 * private helper
	 * @param int $logLevel
	 * @param string $msg
	 */
	public function log($logLevel, $msg, $obj=null) {
		$record = new LogRecord();
		$record->setLevel(Logger::$LOG_LEVELS[$logLevel]);
		$record->setMessage($msg);
		$record->setResource($this->resource);
		$record->setObject($obj);
		foreach($this->handlers as $handler) {
			$handler->publish($record);
		}
	}

	/**
	 * private constructor init using getLogger()
	 */
	private function __construct() {
	}

	/**
	 *  Prevent users to clone the instance
	 */
	public function __clone() {
		$this->log('Clone is not allowed.');
	}

}

/**
 * This class encapsulates the Record to be logged
 */
class LogRecord {

	private $resource;

	private $level;

	private $msg;

	private $obj; // optional object to log along with $msg

	private $time;

	public function __construct() {
		$this->time = time();
	}

	public function setResource($resource) {
		$this->resource = $resource;
	}

	public function setLevel($level) {
		$this->level = $level;
	}

	public function setMessage($msg) {
		$this->msg = $msg;
	}

	public function setObject($obj) {
		$this->obj = $obj;
	}

	public function setTime($time) {
		$this->time = $time;
	}

	public function getResource() {
		return $this->resource;
	}

	public function getLevel() {
		return $this->level;
	}

	public function getMessage() {
		return $this->msg;
	}

	public function getObject() {
		return $this->obj;
	}

	public function getTime($format=null) {
		if($format == null) {
			return $this->time;
		}
		return date($format, $this->time);
	}

}





/**
 * LogHandler interface
 */
interface ILogHandler {

	public function publish(LogRecord $record);

	public function setFormatter(ILogFormatter $formatter);

	public function getFormatter();

}

/**
 * contains common functionality between log handlers
 */
abstract class AbstractLogHandler implements ILogHandler {

	protected $formatter;

	public function __construct() {
		$this->formatter = new LogDefaultFormatter();
	}

	public function setFormatter(ILogFormatter $formatter) {
		$this->formatter = $formatter;
	}

	public function getFormatter() {
		return $this->formatter;
	}

}

/**
 * Outputs to a LogFile
 */
class LogFileHandler extends AbstractLogHandler {

	private $logFileName = "/tmp/output.log";

	public function __construct($logFileName="") {
		parent::__construct();
		if($logFileName != "") {
			$this->logFileName = $logFileName;
		}
	}

	public function publish(LogRecord $record) {
		$log_msg = $this->formatter->format($record);

		$logFile = fopen($this->logFileName, 'a');
		if (!$logFile) {
			return array('status' => 'failure', 'msg' => 'Error Opening Log File');
		}
		fwrite($logFile, $log_msg);
		fclose($logFile);
	}

	/**
	 * set the log file name to append to
	 * @param string
	 */
	public function setLogFileName($logFileName) {
		$this->logFileName = $logFileName;
	}

	public function getLogFileName() {
		return $this->logFileName;
	}

}

/**
 * Echo out the Log
 */
class LogConsoleHandler extends AbstractLogHandler {

	public function __construct() {
		parent::__construct();
	}

	public function publish(LogRecord $record) {
		echo $this->formatter->format($record);
	}

}

/**
 * Log via error_log()
 */
class LogApacheErrorLogHandler extends AbstractLogHandler {

	public function __construct() {
		parent::__construct();
	}

	public function publish(LogRecord $record) {
		error_log($this->formatter->format($record));
	}

}

/**
 * Logs to SQL DataBase
 */
class LogSQLHandler extends AbstractLogHandler {

	private $db = null; // mysqli instance

	public function __construct($db) {
		$this->db = $db;
	}

	public function publish(LogRecord $record) {
		$sql = "INSERT INTO `log` (log_level, date, resource, msg) VALUES ('{$record->getLevel()}','{$record->getTime()}', ?, ?);";
		$statement = $this->db->prepare($sql);
		$statement->bind_param("ss", $record->getResource(), $record->getMessage());
		if (!$statement->execute()) {
			return array('status' => 'failure', 'msg' => 'SQL Error');
		}
		$statement->close();
	}

	public function setDB(mysqli $db) {
		$this->db = $mysqli;
	}

	public function getDB() {
		return $this->db;
	}

	public static function init() {
		$sql = "CREATE TABLE `log` (
		`id` BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
		`log_level` VARCHAR( 16 ) NOT NULL,
		`date` DATETIME NOT NULL,
		`resource` VARCHAR( 128 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
		`msg` VARCHAR( 1024 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL
		) ENGINE = MYISAM;";
		$this->db->query($sql);
	}

}








/**
 * Interface for formatting log messages
 */
interface ILogFormatter {

	public function format(LogRecord $record);

}

/**
 * concrete implementation of a Log Formatter that is formattable
 * %L - Log Level
 * %T - Time of logging
 * %R - Resource of the logger
 * %M - The Message
 * %O - The Object
 */
class LogFormatter implements ILogFormatter {

	private $format = null;

	private $dateFormat = "Y-m-d H:i:s";

	public function __construct($format="%L [%T] %R %M %O") {
		$this->format = $format;
	}

	/**
	 * return a formatted string
	 * @param LogRecord $record
	 */
	public function format(LogRecord $record) {
		$formatted_record = $this->format;
		$formatted_record = str_replace("%L",$record->getLevel(),$formatted_record);
		$formatted_record = str_replace("%T",$record->getTime($this->dateFormat),$formatted_record);
		$formatted_record = str_replace("%R",$record->getResource(),$formatted_record);
		$formatted_record = str_replace("%M",$record->getMessage(),$formatted_record);
		$formatted_record = str_replace("%O",$record->getObject(),$formatted_record);
		return $formatted_record;
	}

	public function setDateFormat($dateFormat) {
		$this->dateFormat = $dateFormat;
	}

}

/**
 * Default log formatter, format is immutable, but should suffice for most cases
 */
class LogDefaultFormatter implements ILogFormatter {

	private $dateFormat = "Y-m-d H:i:s";

	public function __construct() {
	}

	public function format(LogRecord $record) {
		return "{$record->getLevel()}\t[{$record->getTime($this->dateFormat)}]\t{$record->getResource()}\t{$record->getMessage()}\t".print_r($record->getObject(),1)."\n";
	}

}

?>
</pre>

A simple Demo
<pre lang="php" line="1">
<?php

require_once("DBConfig.php"); // <-- DB stuff only really needed if you want to use the SQL writer.
require_once("Logger.php");

$db = new mysqli($DB_HOST, $DB_USER, $DB_PASSWORD, $DB_DATABASE,$DB_PORT);
$db->set_charset("utf8");
// check connection
if (mysqli_connect_errno()) {
    printf("DB Connection failed: %s\n", mysqli_connect_error());
    exit();
}

/*
 * out of class example
 */
//$logger = Logger::getLogger(__FILE__);
//$logger->addHandler(new LogConsoleHandler());
//$logger->addHandler(new LogFileHandler("/tmp/output.log"));
//$logger->addHandler(new LogSQLHandler($db));


/*
 * in class example
 */

$foo = new Foo($db);
$foo->bar();

class Foo {

    private $logger;

    public function __construct($db) {
        /*
         * A simple Logger with default Formatter and a Default LogFileHandler (prints out to /tmp/output.log
         */
        $this->logger = Logger::getLogger(__CLASS__, array("logLevel" => Logger::TRACE));

        /**
         * add a custom Formatter
         */
        $this->logger->clearHandlers(); // this clears the default handler (i may make this happen invisibly later)
        $fh = new LogFileHandler("/tmp/output.log");
        $fh->setFormatter(new LogFormatter("%L --- %R --- (%T) --- %M %O\n"));
        $this->logger->addHandler($fh);

     //   $this->logger = Logger::getLogger(__CLASS__, array("logLevel" => Logger::TRACE,
     //       "handlers" => array(new LogFileHandler("/tmp/output3.log"), new LogSQLHandler($db), new LogConsoleHandler(), new LogErrorLogHandler())
    //        ));
 
        print_r($this->logger);
    }

    public function bar() {

        $this->logger->trace("A Trace Statement (Level INFO)");
        $this->logger->debug("A Debug Statement (Level INFO)");
        $this->logger->info("An Info level msg (Level INFO)");
        $this->logger->warn("A Warning Occured (Level INFO)");
        $this->logger->error("An Error Occured (Level INFO)");
        $this->logger->fatal("A Fatal Error occured (Level INFO)");
        
        $this->logger->setLevel(Logger::TRACE);
        $this->logger->trace("A Trace Statement (Level TRACE)");
        $this->logger->debug("A Debug Statement (Level TRACE)");
        $this->logger->info("An Info level msg (Level TRACE)", $this);
        $this->logger->warn("A Warning Occured (Level TRACE)");
        $this->logger->error("An Error Occured (Level TRACE)");
        $this->logger->fatal("A Fatal Error occured (Level TRACE)");

        $this->logger->setLevel(Logger::FATAL);
        $this->logger->trace("A Trace Statement (Level FATAL)");
        $this->logger->debug("A Debug Statement (Level FATAL)");
        $this->logger->info("An Info level msg (Level FATAL)");
        $this->logger->warn("A Warning Occured (Level FATAL)", $this);
        $this->logger->error("An Error Occured (Level FATAL)");
        $this->logger->fatal("A Fatal Error occured (Level FATAL)");

        if($this->logger->isDebugEnabled()) {
            $this->logger->debug("First Debug Statement (shouldn't be printed)");
        }
        $this->logger->setLevel(Logger::DEBUG);
        if($this->logger->isDebugEnabled()) {
            $this->logger->debug("Second Debug Statement (should be printed)");
        }
        if($this->logger->isTraceEnabled()) {
            $this->logger->trace("First Trace Statement (shouldn't be printed)");
        }
        $this->logger->setLevel(Logger::TRACE);
        if($this->logger->isTraceEnabled()) {
            $this->logger->trace("Second Trace Statement (should be printed)");
        }
    }

    public function __toString() {
        return "ASFASDFASDF";
    }
}


echo "<br/>Test Complete<br/>";
?>

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>907</wp:post_id>
		<wp:post_date>2011-11-20 07:32:28</wp:post_date>
		<wp:post_date_gmt>2011-11-20 07:32:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-logger</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="logger"><![CDATA[logger]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C - Simple ASCII RPG/MUDD</title>
		<link>http://ken-soft.com/2011/11/20/c-simple-ascii-rpgmudd/</link>
		<pubDate>Sun, 20 Nov 2011 08:37:47 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=911</guid>
		<description></description>
		<content:encoded><![CDATA[This is a very simple RPG that uses ASCII art. It's not balanced nor complete, just meant to serve as a tutorial of some procedural coding in C.

<pre lang="c" line="1">
#include <iostream>
#include <string>
#include <cstdlib>

using namespace std;

// function declarations
void newGame();
void initPlayer();
void printPlayer();
void initArea();
void generateRandomEnemies();
void printArea();
void printMenu();
void getPlayerInput();
bool isAlive();
int isEnemy();
void fight(struct Enemy& enemy);
void gameOver();
void levelUp();
int dice(int sides);


// common structures
struct Location {
    int x;      // the x position in the area
    int y;      // the y position in the area
};

struct Weapon {
    string name;    // name of weapon
    int damage;  // max damage
    int crit;   // critical hit range (1 to 20)
};

struct Armor {
    string name;    // name of armor
    int defence;  // defense modifier
};

struct Shield {
    string name;    // name of armor
    int defence;  // defense modifier
};

struct Player {
    string name;// name of player
    int job;    // job (class) of the player

    int hp;     // current hp
    int hpm;    // hp max

    int str;    // strength
    int dex;    // dexterity
    int con;    // constitution
    int iq;     // intelligence
    int wis;    // widsom
    int cha;    // charisma

    int bab;    // base attack bonus
    int fort;   // fortitude
    int reflex; // reflex
    int will;   // will

    int ac;     // armor class

    int level;  // level
    int xp;     // current xp
    int gold;   // amount of gold

    struct Weapon weapon;
    struct Armor armor;
    struct Shield shield;

    struct Location location;
};

struct Enemy {
    string name;// enemy name
    int hp;     // current hp
    int str;    // strength
    int dex;    // dexterity
    int ac;     // armor class
    int gold;   // amount of gold enemy is carrying
    struct Location location;
};


// create a simple area default 30x30
int AREA_WIDTH = 20;
int AREA_HEIGHT = 12;
int** area; // 2 dimensional array for the area

const int AREA_WALKABLE = 0;
const int AREA_WALL = 1;

// default player structure
Player player;

// default array of enemies (for now lets assume 10 enemies per area)
Enemy* enemies;
const int ENEMIES_MAX_NUM = 100;

// main function
int main() {
    srand(time(0)); // generate new random seed (for use with rand() in the dice() function)
    newGame();

    while(isAlive()) {
        printArea();
        printMenu();
        getPlayerInput();

        int enemyIndex = isEnemy();
        if(enemyIndex> -1) {
            fight(enemies[enemyIndex]);
        }
    }

    gameOver();
    return 0;
}

// function definitions
bool isAlive() {
    if(player.hp > 0) {
        return true;
    }
    return false;
}


void gameOver() {
    cout << "Thou Art Dead" << endl;
}


void newGame() {
    initArea();
    generateRandomEnemies();
    initPlayer();
    printPlayer();
}

void initArea() {
    area = new int*[AREA_WIDTH];
    for(int x = 0; x < AREA_WIDTH; ++x) {
         area[x] = new int[AREA_HEIGHT];
         for(int y = 0; y < AREA_HEIGHT; ++y) { // initialize the values, this is optional, but recommended
             if(dice(4) >= 2) {
                area[x][y] =  AREA_WALKABLE;
             } else {
                area[x][y] =  AREA_WALL;
             }
         }
    }
}

void generateRandomEnemies() {
    enemies = new Enemy[ENEMIES_MAX_NUM];
    for(int i = 0; i < ENEMIES_MAX_NUM; i++) {
        enemies[i].name = "slime";
        enemies[i].hp = 4 + dice(4);
        enemies[i].str = 12 + dice(4);
        enemies[i].dex = 10 + dice(4);
        enemies[i].ac = 10 + dice(4);
        enemies[i].gold = dice(10);
        enemies[i].location.x = dice(AREA_WIDTH) - 1;
        enemies[i].location.y = dice(AREA_HEIGHT) - 1;
    }
}

void initPlayer() {
    player.name = "Kenny";
    player.hpm = 20 + dice(10);
    player.hp = player.hpm;
    player.str = 8 + dice(6);
    player.dex =  8 + dice(6);
    player.con =  8 + dice(6);
    player.iq  =  8 + dice(6);
    player.wis =  8 + dice(6);
    player.cha =  8 + dice(6);

    player.bab = 0;
    player.fort = dice(4);
    player.reflex = dice(4);
    player.will = dice(4);

    player.ac = 10;
    player.level = 1;
    player.xp = 0;
    player.gold = 30 + dice(100);

    player.weapon.name = "Wood Sword";
    player.weapon.damage = 4;
    player.weapon.crit = 19;

    player.armor.name = "Leather";
    player.armor.defence = 1;

    player.shield.name = "Wood";
    player.shield.defence = 1;

    player.location.x = 5;
    player.location.y = 5;

}

void printPlayer() {
    cout << player.name << endl;
    cout << "HP " << player.hp << "/" << player.hpm << endl;
    cout << "XP " << player.xp << "\t Lvl " << player.level << endl;
    cout << "STR " << player.str << "\t INT " << player.iq << endl;
    cout << "DEX " << player.dex << "\t WIS " << player.wis << endl;
    cout << "CON " << player.con << "\t CHA " << player.cha << endl;
    cout << "BAB +" << player.bab << "\tAC " << player.ac << endl;
    cout << "FORT +" << player.fort << "\tREFLEX +" << player.reflex << "\tWILL +" << player.will << endl;
    cout << "GOLD " << player.gold << endl;
    cout << "WEAPON " << player.weapon.name << ": 1D" << player.weapon.damage << " crit (" << player.weapon.crit << "-20) x2" << endl;
    cout << "ARMOR " << player.armor.name << ": +" << player.armor.defence << endl;
    cout << "SHIELD " << player.shield.name << ": +" << player.shield.defence << endl;
}


void printArea() {
    for(int y = 0; y < AREA_HEIGHT; ++y) {
        for(int x = 0; x < AREA_WIDTH; ++x) {
            if(player.location.x == x && player.location.y == y) {
                cout << "@";
            } else {
                if(area[x][y] == AREA_WALKABLE) {
                    cout << " ";
                } else if(area[x][y] == AREA_WALL) {
                    cout << "#";
                }
            }

        }
        cout << endl;
    }
}

void printMenu() {
    cout << "Commands" << endl;
    cout << "L - move left\tR - move right" << endl;
    cout << "U - move up\tD - move down" << endl;
    cout << "S - print stats\tH - Heal (30gp)" << endl;
    cout << "X - exit game" << endl;
    cout << ">";
}

void getPlayerInput() {
    char input;
    cin >> input;
    cout << endl; // go to the next line
    if(input == 'U' || input == 'u') { // move up
        if(player.location.y - 1 >= 0
                    && area[player.location.x][player.location.y - 1] != AREA_WALL) {
            player.location.y--;
        } else {
            cout << "Can not move there!" << endl;
        }
    } else if(input == 'D' || input == 'd') { // move down
        if(player.location.y + 1 < AREA_HEIGHT
                    && area[player.location.x][player.location.y + 1] != AREA_WALL) {
            player.location.y++;
        } else {
            cout << "Can not move there!" << endl;
        }
    } else if(input == 'L' || input == 'l') { // move left
        if(player.location.x - 1 >= 0
                    && area[player.location.x - 1][player.location.y] != AREA_WALL) {
            player.location.x--;
        } else {
            cout << "Can not move there!" << endl;
        }
    } else if(input == 'R' || input == 'r') { // move right
        if(player.location.x + 1 < AREA_WIDTH
                    && area[player.location.x + 1][player.location.y] != AREA_WALL) {
            player.location.x++;
        } else {
            cout << "Can not move there!" << endl;
        }
    } else if(input == 'X' || input == 'x') {
        gameOver();
    } else if(input == 'S' || input == 's') {
        printPlayer();
    } else if(input == 'H' || input == 'h') {
        if(player.gold >= 30) {
            player.gold -= 30;
            int heal = dice(20);
            cout << "Healed " << heal << "hp" << endl;
            player.hp += heal;
            if(player.hp > player.hpm) {
                player.hp = player.hpm;
            }
        } else {
            cout << "Thou does not have enough gold to pay healing potion!" << endl;
        }
    }
}

int isEnemy() {
    for(int i = 0; i < ENEMIES_MAX_NUM; i++) {
        if(enemies[i].location.x == player.location.x &&
                    enemies[i].location.y == player.location.y) {
            return i; // the index of the enemy array
        }
    }
    return -1; // no enemy
}

void fight(struct Enemy& enemy) {
    cout << "You just got in a fight with " << enemy.name << endl;
    bool turn = 0; // enemies turn
    if(dice(20) + (player.dex-10)/2 > dice(20) + (enemy.dex-10)/2) {
        turn = 1;
    }
    while(true) {
        if(player.hp <= 0) {
            cout << "Thou has been slain by " << enemy.name << endl;
            break;
        }
        if(enemy.hp <= 0) {
            cout << "Thou has killed " << enemy.name << endl;
            break;
        }

        if(turn) { // players turn
            cout << "It is thou turn" << endl;
            int attackRoll = dice(20);
            if(attackRoll + player.bab + (player.str-10)/2 >= enemy.ac) { // hit
                int damage = dice(player.weapon.damage) + (player.str-10)/2;
                if(attackRoll >= player.weapon.crit) {
                    cout << "Critical hit!" << endl;
                    damage *= 2;
                }
                cout << "Attacked " << enemy.name << " for " << damage << " damage!" << endl;
                enemy.hp -= damage;
            } else {
                cout << "Attack missed!" << endl;
            }
            turn = 0;
        } else {
            cout << enemy.name << "'s attack!" << endl;
            int attackRoll = dice(20);
            if(attackRoll + (enemy.str-10)/2 > player.ac + player.armor.defence + player.shield.defence) { // hit
                int damage = (enemy.str-10)/2;
                if(attackRoll >= 19) {
                    cout << "Critical hit!" << endl;
                    damage *= 2;
                }
                cout << "Thou received " << damage << " damage!" << endl;
                player.hp -= damage;
            } else {
                cout << "Attack missed!" << endl;
            }
            turn = 1;
        }
    }

    if(player.hp > 0) {
        player.xp += 2 + dice(4);
        player.gold += enemy.gold;
        levelUp();
    }
    // revive the dead enemy
    enemy.hp = 4 + dice(6);
}

void levelUp() {
    bool levelup = false;
    if(player.xp > 16 && player.level == 1) {
        levelup = true;
    } else if(player.xp > 40 && player.level == 2) {
        levelup = true;
    } else if(player.xp > 75 && player.level == 3) {
        levelup = true;
    } else if(player.xp > 120 && player.level == 4) {
        levelup = true;
    } else if(player.xp > 170 && player.level == 5) {
        levelup = true;
    } else if(player.xp > 230 && player.level == 6) {
        levelup = true;
    } else if(player.xp > 300 && player.level == 7) {
        levelup = true;
    } else if(player.xp > 400 && player.level == 8) {
        levelup = true;
    } else if(player.xp > 550 && player.level == 9) {
        levelup = true;
    }
    if(levelup) {
        player.level++;
        player.hpm += dice(8) + (player.con-10)/2;
        player.hp = player.hpm;
        player.str += dice(2);
        player.dex += dice(2);
        player.con += dice(2);
        player.iq += dice(2);
        player.wis += dice(2);
        player.cha += dice(2);
        if(player.level % 3 == 0) {
            player.bab += dice(2);
        }
        cout << "Thou has leveled up!" << endl;
        if(player.level == 10) {
            cout << "Congratulations! Thou has reached max level!" << endl;
        }
        printPlayer();
    }
}


int dice(int sides) {
    int value = rand()%sides+1;
    return value;
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>911</wp:post_id>
		<wp:post_date>2011-11-20 08:37:47</wp:post_date>
		<wp:post_date_gmt>2011-11-20 08:37:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-simple-ascii-rpgmudd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ascii"><![CDATA[ASCII]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="mudd"><![CDATA[MUDD]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="rpg"><![CDATA[RPG]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1417</wp:comment_id>
			<wp:comment_author><![CDATA[scholarships]]></wp:comment_author>
			<wp:comment_author_email>john-oldham@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://master-degrees.org/reference</wp:comment_author_url>
			<wp:comment_author_IP>23.19.132.172</wp:comment_author_IP>
			<wp:comment_date>2013-07-17 14:27:57</wp:comment_date>
			<wp:comment_date_gmt>2013-07-17 14:27:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I needed to thank you for this fantastic read!
! I certainly loved every little bit of it. I have you bookmarked to look at new 
stuff you post…]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374071277.840034008026123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C++ - Minesweeper</title>
		<link>http://ken-soft.com/2011/12/17/c-minesweeper/</link>
		<pubDate>Sat, 17 Dec 2011 18:11:14 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=916</guid>
		<description></description>
		<content:encoded><![CDATA[The other day I was tutoring a freshman programmer program his first minesweeper text game in C++. Here is the resulting code. 

<pre lang="cpp" line="1">
#include <iostream>
#include<cstdlib>
#include<ctime>

const int DIMX = 6;
const int DIMY = 6;
const int MINES = 6;
const int MINE = -1;
const char COVERED = 'X';
const char UNCOVERED = ' ';
const char FLAG = 'F';
int state[DIMX][DIMY];
char display[DIMX][DIMY];

void init(); // initialize game states
int countSorroundingMines(int x, int y); // helper function used by init
void reveal(int x, int y);
void player(); // handle player input
void setFlag();
void uncover();
void print(); // print the minefield
void cheat(); // print out the mines
bool isWin();
bool isLose();
bool playNewGame();

int main() {
    std::cout << "Welcome to MineSweeper!" << std::endl;
    init();
    bool playing = true;
    while(playing) {
        print();
        player();
        if(isWin()) {
            std::cout << "You Win!" << std::endl;
            playing = false;
        } else if(isLose()) {
            std::cout << "You Lose!" << std::endl;
            playing = false;
        }

        if(!playing) {
            playing = playNewGame();
            if(playing) {
                init();
            }
        }
    }
    std::cout << "Exiting Minesweeper!" << std::endl;
    return 0;
}

void init() {
    std::cout << "New Game!" << std::endl;
    // set display to "uncovered"
    for(int y = 0; y < DIMY; y++) {
        for(int x = 0; x < DIMX; x++) {
            display[x][y] = COVERED;
        }
    }
    // initialize mines
    srand(time(0));
    for(int i = 0; i < MINES; i++) {
        bool placed = false;
        while(!placed) {
            int x = rand() % DIMX;
            int y = rand() % DIMY;
            if(state[x][y] != MINE) { // check mine not set
                placed = true;
                state[x][y] = MINE;
            }
        }
    }
    // place hint numbers
    for(int y = 0; y < DIMY; y++) {
        for(int x = 0; x < DIMX; x++) {
            state[x][y] = countSorroundingMines(x, y);
        }
    }
}

bool playNewGame() {
    bool selected = false;
    while(!selected) {
        char choice;
        std::cout << "Play another game? Y or N" << std::endl;
        std::cin >> choice;
        if(choice == 'N' || choice == 'n') {
            return false;
            selected = true;
        } else if(choice == 'Y' || choice == 'y') {
            return true;
            selected = true;
        } else {
            std::cout << "That is not a valid choice!" << std::endl;
        }
    }
}

void reveal(int x, int y) {
    if(x >= 0 && x < DIMX && y >= 0 && y < DIMY) { // check that x and y are valid
        if(display[x][y] == UNCOVERED) {
            return;
        }
        display[x][y] = UNCOVERED;

        if(state[x][y] == MINE || state[x][y] != 0) {
            return;
        }
        reveal(x - 1, y - 1);
        reveal(x, y - 1);
        reveal(x + 1, y - 1);
        reveal(x - 1, y);
        reveal(x + 1, y);
        reveal(x - 1, y + 1);
        reveal(x, y + 1);
        reveal(x + 1, y + 1);
    } else {
        return;
    }
}

/*
[x-1, y-1][x, y-1][x+1, y-1]
[x-1, y  ][x, y  ][x+1, y  ]
[x-1, y+1][x, y+1][x+1, y+1]
*/
int countSorroundingMines(int x, int y) {
    if(state[x][y] == MINE) {
        return MINE;
    }
    int num = 0;
    if(x > 0 && y > 0) { // top left
        if(state[x - 1][y - 1] == MINE) {
            num++;
        }
    }
    if(y > 0) { // top
        if(state[x][y - 1] == MINE) {
            num++;
        }
    }
    if(x < DIMX - 1  && y > 0) { // top  right
        if(state[x + 1][y - 1] == MINE) {
            num++;
        }
    }
    if(x > 0) { // left
        if(state[x - 1][y] == MINE) {
            num++;
        }
    }
    if(x < DIMX - 1) { // right
        if(state[x + 1][y] == MINE) {
            num++;
        }
    }
    if(x > 0 && y < DIMY - 1) { // bottom left
        if(state[x - 1][y + 1] == MINE) {
            num++;
        }
    }
    if(y < DIMY - 1) { // bottom
        if(state[x][y + 1] == MINE) {
            num++;
        }
    }
    if(x < DIMX - 1 && y < DIMY - 1) { // bottom right
        if(state[x + 1][y + 1] == MINE) {
            num++;
        }
    }
    return num;
}

bool isWin() {
    bool win = true;
    for(int y = 0; y < DIMY; y++) {
        for(int x = 0; x < DIMX; x++) {
            win &= ((display[x][y] == UNCOVERED && state[x][y] != MINE) ||
                    ((display[x][y] == COVERED || display[x][y] == FLAG) && state[x][y] == MINE));
        }
    }
    return win;
}

bool isLose() {
    for(int y = 0; y < DIMY; y++) {
        for(int x = 0; x < DIMX; x++) {
            if (display[x][y] == UNCOVERED && state[x][y] == MINE) {
                return true;
            }
        }
    }
    return false;
}

void player() {
    std::cout << "Commands: R => reveal square, F => set flag, C => cheat, N => New Game" << std::endl;
    bool selected = false;
    while(!selected) {
        char choice;
        std::cin >> choice;
        if(choice == 'R' || choice == 'r') {
            uncover();
            selected = true;
        } else if(choice == 'F' || choice == 'f') {
            setFlag();
            selected = true;
        } else if(choice == 'C' || choice == 'c') {
            cheat();
        } else if(choice == 'N' || choice == 'n') {
            init();
            selected = true;
        } else {
            std::cout << "Invalid Choice!" << std::endl;
        }
    }

}

void uncover() {
    bool selected = false;
    while(!selected) {
        int x;
        int y;
        std::cout << "Input X (1 - " << (DIMX) << ")" << std::endl;
        std::cin >> x;
        std::cout << "Input Y (1 - " << (DIMY) << ")" << std::endl;
        std::cin >> y;
        x--;
        y--;
        if(x >= 0 && x < DIMX && y >= 0 && y < DIMY) {
            reveal(x, y); // call recursive reveal algorithm
            selected = true;
        } else {
            std::cout << "(X,Y) Values out of range!" << std::endl;
        }
    }
}

void setFlag() {
    bool selected = false;
    while(!selected) {
        int x;
        int y;
        std::cout << "Input X (1 - " << (DIMX) << ")" << std::endl;
        std::cin >> x;
        std::cout << "Input Y (1 - " << (DIMY) << ")" << std::endl;
        std::cin >> y;
        x--;
        y--;
        if(x >= 0 && x < DIMX && y >= 0 && y < DIMY) {
            display[x][y] = FLAG;
            selected = true;
        } else {
            std::cout << "(X,Y) Values out of range!" << std::endl;
        }
    }
}

void cheat() {
    std::cout << "Cheating is bad!" << std::endl;
    std::cout << "   ";
    for(int x = 0; x < DIMX; x++) {
        std::cout << (x + 1) << " ";
    }
    std::cout << std::endl << "";
    for(int x = 0; x < DIMX; x++) {
        std::cout << "";
    }
    std::cout << std::endl;
    for(int y = 0; y < DIMY; y++) {
        std::cout << (y + 1) << "  ";
        for(int x = 0; x < DIMX; x++) {
            if(state[x][y] == MINE) {
                std::cout << "@ ";
            } else {
                if(state[x][y] == 0) {
                    std:: cout << "  ";
                } else {
                    std:: cout << state[x][y] << " ";
                }
            }
        }
        std::cout << std::endl;
    }
}

void print() {
    std::cout << "   ";
    for(int x = 0; x < DIMX; x++) {
        std::cout << (x + 1) << " ";
    }
    std::cout << std::endl << "";
    for(int x = 0; x < DIMX; x++) {
        std::cout << "";
    }
    std::cout << std::endl;
    for(int y = 0; y < DIMY; y++) {
        std::cout << (y + 1) << "  ";
        for(int x = 0; x < DIMX; x++) {
            if(display[x][y] == COVERED || display[x][y] == 'F') { // is it tile still uncovered
                std::cout << display[x][y] << " ";
            } else { // display the state
                if(state[x][y] == MINE) {
                    std::cout << "@ ";
                } else {
                    if(state[x][y] == 0) {
                        std:: cout << "  ";
                    } else {
                        std:: cout << state[x][y] << " ";
                    }
                }
            }
        }

        std::cout << std::endl;
    }
}
</pre>

Sample Output:
<img src="http://ken-soft.com/images/minesweeper/minesweeper.png" />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>916</wp:post_id>
		<wp:post_date>2011-12-17 18:11:14</wp:post_date>
		<wp:post_date_gmt>2011-12-17 18:11:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-minesweeper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="c-cpp"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="minesweeper"><![CDATA[minesweeper]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java - Trie (Prefix Tree)</title>
		<link>http://ken-soft.com/2012/03/20/java-trie-prefix-tree/</link>
		<pubDate>Tue, 20 Mar 2012 21:56:50 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=921</guid>
		<description></description>
		<content:encoded><![CDATA[A Java implmentation of a Trie (i.e. Prefix Tree).  A definition of a Trie can be found <a href="http://en.wikipedia.org/wiki/Trie" title="here (Wikipedia)" target="_blank"></a>
This implementation (ObjectTrie.java) is capable of storing an Array of any generic data. i.e. Object[], or Integer[], etc.
In the end I also include a wrapper Trie.java that wraps ObjectTrie.java providing String support.

Trie.java
<pre lang="java" line="1">
package krunch.lib.ds.trie;

public class Trie {
	
	private ObjectTrie<Character> trie;
	
	public Trie() {
		trie = new ObjectTrie<Character>(' ');
	}
	
	public void insert(String s) {
		trie.insert(toArray(s));
	}
	
	public boolean search(String s) {
		return trie.search(toArray(s));
	}
	
	public int numberEntries() {
		return trie.numberEntries();
	}
	
	private Character[] toArray(String s) {
		Character[] cArray = new Character[s.length()];
		for(int i = 0; i < cArray.length; i++) {
			cArray[i] = s.charAt(i);
		}
		return cArray;
	}
	
	public String toString() {
		return trie.toString();
	}

}

</pre>

Node.java
<pre lang="java" line="1">
package krunch.lib.ds.trie;

import java.util.ArrayList;

public class Node<T> {
	
	private T value;
	
	private boolean endMarker;
	
	public ArrayList<Node<T>> children;
	
	
	public Node(T value) {
		this.value = value;
		this.endMarker = false;
		this.children = new ArrayList<Node<T>>();
	}
	
	public Node<T> findChild(T value) {
		if(children != null) {
			for(Node<T> n : children) {
				if(n.getValue().equals(value)) {
					return n;
				}
			}
		}
		return null;
	}
	
	public T getValue() {
		return value;
	}
	
	public void setEndMarker(boolean endMarker) {
		this.endMarker = endMarker;
	}
	
	public boolean isEndMarker() {
		return endMarker;
	}

	public Node<T> addChild(T value) {
		Node<T> n = new Node<T>(value);
		children.add(n);
		return n;
	}
	
}

</pre>

ObjectTrie.java
<pre lang="java" line="1">
package krunch.lib.ds.trie;

public class ObjectTrie<T> {

	private Node<T> root;

	private int numberEntries;

	public ObjectTrie(T rootNodeValue) {
		root = new Node<T>(rootNodeValue); // "empty value", usually some "null"  value or "empty string"
		numberEntries = 0;
	}

	public void insert(T[] values) {
		Node<T> current = root;
		if (values != null) {
			if (values.length == 0) { // "empty value"
				current.setEndMarker(true);
			}
			for (int i = 0; i < values.length; i++) {
				Node<T> child = current.findChild(values[i]);
				if (child != null) {
					current = child;
				} else {
					current = current.addChild(values[i]);
				}
				if (i == values.length - 1) {
					if (!current.isEndMarker()) {
						current.setEndMarker(true);
						numberEntries++;
					}
				}
			}
		} else {
			System.out.println("Not adding anything");
		}
	}

	public boolean search(T[] values) {
		Node<T> current = root;
		for (int i = 0; i < values.length; i++) {
			if (current.findChild(values[i]) == null) {
				return false;
			} else {
				current = current.findChild(values[i]);
			}
		}
		/*
		 * Array T[] values found in ObjectTrie. Must verify that the "endMarker" flag
		 * is true
		 */
		if (current.isEndMarker()) {
			return true;
		} else {
			return false;
		}
	}

	public int numberEntries() {
		return numberEntries;
	}
	
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("number entries: ");
		sb.append(numberEntries);
		
		return sb.toString();
	}

}

</pre>


TrieTest.java (Unit Test)
<pre lang="java" line="1">
package krunch.lib.utils.ds.trie;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.HashMap;

import krunch.lib.ds.trie.Trie;
import krunch.lib.ds.trie.ObjectTrie;

import org.junit.Test;

public class TrieTest {

	@Test
	public void testStringTrie() {
		Trie trie = new Trie();
		assertEquals(0, trie.numberEntries());
		trie.insert("HELLO");
		assertEquals(1, trie.numberEntries());
		trie.insert("HELLO");					// duplicate words do not count
		assertEquals(1, trie.numberEntries());
		trie.insert("FROG");
		assertEquals(2, trie.numberEntries());	
		
		assertTrue(trie.search("HELLO"));		// should find it
		assertTrue(trie.search("FROG"));		// should find it
		assertFalse(trie.search("HEL"));		// not a full word
	}
	
	
	@Test
	public void testObjectTrie() {	
		ObjectTrie<Object> trie = new ObjectTrie<Object>(new Object());
		Object o1 = 12;
		Object o2 = "ASFAS";
		Object o3 = new Character('X');
		Object o4 = new HashMap<String, String>();
		
		Object[] oArray1 = new Object[] {o1, o1, o2, o3, o3, o4};
		Object[] oArray2 = new Object[] {o1, o2, o3, o4, o4, o1};
		Object[] oArray3 = new Object[] {o1, o1, o2, o2};
		
		assertEquals(0, trie.numberEntries());
		trie.insert(oArray1);
		assertEquals(1, trie.numberEntries());
		trie.insert(oArray1);					// duplicate words do not count
		assertEquals(1, trie.numberEntries());
		trie.insert(oArray2);
		assertEquals(2, trie.numberEntries());	
		
		assertTrue(trie.search(oArray1));		// should find it
		assertTrue(trie.search(oArray2));		// should find it
		assertFalse(trie.search(oArray3));		// not a full word
	}

}

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>921</wp:post_id>
		<wp:post_date>2012-03-20 21:56:50</wp:post_date>
		<wp:post_date_gmt>2012-03-20 21:56:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-trie-prefix-tree</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="tree"><![CDATA[Tree]]></category>
		<category domain="post_tag" nicename="trie-prefix-tree"><![CDATA[Trie (Prefix Tree)]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java - Simple Smtp Mail Class</title>
		<link>http://ken-soft.com/2012/05/15/java-simple-smtp-mail-class/</link>
		<pubDate>Tue, 15 May 2012 20:02:10 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=934</guid>
		<description></description>
		<content:encoded><![CDATA[Just a few quick classes I whipped up for bare minimum SmtpMail support.
also don't rely on the default javax.mail package. I believe the Java SDK only provides the APIs and not the implementations. 
I ended up downloading the implementation from GlassFish: <a href="http://download.java.net/maven/glassfish/org/glassfish/extras/glassfish-embedded-all/3.1.1/" target="_blank">glassfish-embedded-all-3.1.1.jar</a>

SmtpMail.java
<pre lang="java" line="1">
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SmtpMail {

	private final MailConfig config;

	public SmtpMail(MailConfig config) {
		this.config = config;
	}
	
	public boolean send(String to, String from, String subject, String text) {
		return send(new String[] {to}, from, subject, text);
	}

	public boolean send(String[] to, String from, String subject, String text) {

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.host", config.host);
		props.put("mail.smtp.user", config.username);
		props.put("mail.smtp.port", config.port);
		props.put("mail.smtp.password", config.password);
		
		Session session = Session.getInstance(props, new SmtpAuthenticator(config));

		try {

			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress(from));
			
			InternetAddress[] addressTo = new InternetAddress[to.length];
			for (int i = 0; i < to.length; i++) {
				addressTo[i] = new InternetAddress(to[i]);
			}
			message.setRecipients(Message.RecipientType.TO, addressTo);
			message.setSubject(subject);
			message.setText(text);

		   Transport.send(message);

		} catch (MessagingException e) { 
			e.printStackTrace();
			return false;
		}
		return true;
	}
}
</pre>

SmtpAuthenticator.java
<pre lang="java" line="1">
import javax.mail.Authenticator;
import javax.mail.PasswordAuthentication;

public class SmtpAuthenticator extends Authenticator {

	private MailConfig config;
	
	public SmtpAuthenticator(MailConfig config) {
		super();
		this.config = config;
	}
		
	@Override
	public PasswordAuthentication getPasswordAuthentication() {
	    if ((config.username != null) && (config.username.length() > 0) &&
	    		(config.password != null) && (config.password.length   () > 0)) {
	        return new PasswordAuthentication(config.username, config.password);
	    }
	    return null;
	}

}
</pre>

MailConfig.java
<pre lang="java" line="1">
public class MailConfig {
	
	public String host = "";
	
	public int port = 587;
	
	public String username = "";
	
	public String password = "";

}
</pre>

MailConfigFactory.java
<pre lang="java" line="1">
public class MailConfigFactory {
	
	private MailConfigFactory() {
		
	}
	
	public static MailConfig buildDefaultConfig() {
		MailConfig config = new MailConfig();
		config.host = "smtp.host.com";
		config.port = 1234;
		config.username = "username";
		config.password = "password";
		
		return config;
	}

}
</pre>

SmtpMailTest.java
<pre lang="java" line="1">
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class SMTPMailTest {

	@Test
	public void test() {
		SmtpMail mail = new SmtpMail(MailConfigFactory.buildDefaultConfig());
		String to = "to@gmail.com";
		String from = "from@gmail.com";
		String subject = "Test Subject";
		String text = "This is a sample message body";
		
		assertTrue(mail.send(to, from, subject, text));
	}

}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>934</wp:post_id>
		<wp:post_date>2012-05-15 20:02:10</wp:post_date>
		<wp:post_date_gmt>2012-05-15 20:02:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-simple-smtp-mail-class</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="mail"><![CDATA[mail]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="smtp"><![CDATA[smtp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP Timer Class</title>
		<link>http://ken-soft.com/2012/07/05/php-timer-class/</link>
		<pubDate>Thu, 05 Jul 2012 02:21:09 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=943</guid>
		<description></description>
		<content:encoded><![CDATA[A small timer class I wrote:

Timer.php
<pre lang="php" line="1">
<?php

class Timer {

    const MICROSECONDS = 0;

    const SECONDS = 1;

    private $startTime;

    private $interval = 0;

    private $units;
    
    public function __construct($units = Timer::MICROSECONDS) {
        $this->startTime = $this->timeAsMilliseconds();
        $this->units = $units;
    }

    public function start() {
        $this->startTime = $this->timeAsMilliseconds();
    }

    public function restart() {
        $this->start();
    }

    public function elapsedTime() {
        $diff = $this->timeAsMilliseconds() - $this->startTime;
        if($this->units == Timer::MICROSECONDS) {
            return $diff;
        } else {
            return (int)($diff / 1000);
        }
    }

    public function setInterval($interval) {
        if($this->units == Timer::SECONDS) {
            $interval *= 1000;
        }
        $this->interval = $interval;
    }

    public function intervalElapsed() {
        return ($this->timeAsMilliseconds() - $this->startTime) > $this->interval;
    }

    private function timeAsMilliseconds() {
        return round(microtime(true) * 1000);
    }
    
}
</pre>

TimerDemo.php
<pre lang="php" line="1">
require_once('Timer.php');

// timer test, milliseconds
$timer = new Timer();
$timer->start();
usleep(1000);
echo $timer->elapsedTime() . 'ms';

// timer test, seconds
$timer = new Timer(Timer::SECONDS);
$timer->start();
usleep(1000);
echo $timer->elapsedTime() . 's';

// interval test, milliseconds
$timer = new Timer();
$timer->setInterval(2000);
$timer->start();
usleep(1000);
echo $timer->intervalElapsed() ? 'true' : 'false';
usleep(1200);
echo $timer->intervalElapsed() ? 'true' : 'false';

// interval test, seconds
$timer = new Timer(Timer::SECONDS);
$timer->setInterval(2);
$timer->start();
usleep(1000);
echo $timer->intervalElapsed() ? 'true' : 'false';
usleep(1200);
echo $timer->intervalElapsed() ? 'true' : 'false';
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>943</wp:post_id>
		<wp:post_date>2012-07-05 02:21:09</wp:post_date>
		<wp:post_date_gmt>2012-07-05 02:21:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-timer-class</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="interval"><![CDATA[interval]]></category>
		<category domain="post_tag" nicename="milliseconds"><![CDATA[milliseconds]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="seconds"><![CDATA[seconds]]></category>
		<category domain="post_tag" nicename="timer"><![CDATA[timer]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP - Base 2, 8, 16, 62, N Conversion</title>
		<link>http://ken-soft.com/2012/10/24/php-base-2-8-16-62-n-conversion/</link>
		<pubDate>Wed, 24 Oct 2012 06:34:57 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=947</guid>
		<description></description>
		<content:encoded><![CDATA[A simple class that can easily be used to convert between Base10 and any other Base.

Base2.php
<pre lang="php" line="1">
<?php

class Base2 extends BaseN {

    public function  __construct() {
        parent::__construct(2, '01');
    }

}
</pre>
Base8.php
<pre lang="php" line="1">
<?php

class Base8 extends BaseN {

    public function  __construct() {
        parent::__construct(8, '01234567');
    }

}
</pre>
Base16.php
<pre lang="php" line="1">
<?php

class Base16 extends BaseN {

    public function  __construct() {
        parent::__construct(16, '0123456789ABCDEF');
    }

}
</pre>
Base62.php
<pre lang="php" line="1">
<?php

class Base62 extends BaseN {

    public function  __construct() {
        parent::__construct(62, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
    }

}
</pre>
BaseN.php
<pre lang="php" line="1">
<?php

abstract class BaseN {

    private $chars;

    private $base;

    protected function  __construct($base, $chars) {
        $this->base = $base;
        $this->chars = $chars;
        if(mb_strlen($chars) != $base) {
            error_log('base does not equal alphabet length');
        }

    }

    public function encode($val) {
        $val = (int) $val;
        // can't handle numbers larger than 2^31-1 = 2147483647
        $str = '';
        do {
            $i = $val % $this->base;
            $str = $this->chars[$i] . $str;
            $val = ($val - $i) / $this->base;
        } while ($val > 0);
        return $str;
    }

    public function decode($str) {
        $str = (string)$str;
        $len = mb_strlen($str);
        $val = 0;
        for ($i = 0; $i < $len; ++$i) {
            $val += mb_strpos($this->chars, mb_substr($str, $i, 1)) * pow($this->base, $len - $i - 1);
        }
        return $val;
    }

}

</pre>

Usage Example:
<pre lang="php" line="1">
$base = new Base16();
for($i = 0; $i < 100; $i++) {
      $b16 = $base->encode($i);
      $b10 = $base->decode($b16);
      echo $i . ' => encode b16 => ' . $b16 . ' => decode b10 => ' . $b10 . '<br/>';
}
</pre>
Output:

0 => encode b16 => 0 => decode b10 => 0
1 => encode b16 => 1 => decode b10 => 1
2 => encode b16 => 2 => decode b10 => 2
3 => encode b16 => 3 => decode b10 => 3
4 => encode b16 => 4 => decode b10 => 4
5 => encode b16 => 5 => decode b10 => 5
6 => encode b16 => 6 => decode b10 => 6
7 => encode b16 => 7 => decode b10 => 7
8 => encode b16 => 8 => decode b10 => 8
9 => encode b16 => 9 => decode b10 => 9
10 => encode b16 => A => decode b10 => 10
11 => encode b16 => B => decode b10 => 11
12 => encode b16 => C => decode b10 => 12
13 => encode b16 => D => decode b10 => 13
14 => encode b16 => E => decode b10 => 14
15 => encode b16 => F => decode b10 => 15
16 => encode b16 => 10 => decode b10 => 16
17 => encode b16 => 11 => decode b10 => 17
18 => encode b16 => 12 => decode b10 => 18
19 => encode b16 => 13 => decode b10 => 19
20 => encode b16 => 14 => decode b10 => 20
21 => encode b16 => 15 => decode b10 => 21
22 => encode b16 => 16 => decode b10 => 22
23 => encode b16 => 17 => decode b10 => 23
24 => encode b16 => 18 => decode b10 => 24
25 => encode b16 => 19 => decode b10 => 25
26 => encode b16 => 1A => decode b10 => 26
27 => encode b16 => 1B => decode b10 => 27
28 => encode b16 => 1C => decode b10 => 28
29 => encode b16 => 1D => decode b10 => 29
30 => encode b16 => 1E => decode b10 => 30
31 => encode b16 => 1F => decode b10 => 31
32 => encode b16 => 20 => decode b10 => 32
33 => encode b16 => 21 => decode b10 => 33
34 => encode b16 => 22 => decode b10 => 34
35 => encode b16 => 23 => decode b10 => 35
36 => encode b16 => 24 => decode b10 => 36
37 => encode b16 => 25 => decode b10 => 37
38 => encode b16 => 26 => decode b10 => 38
39 => encode b16 => 27 => decode b10 => 39
40 => encode b16 => 28 => decode b10 => 40
41 => encode b16 => 29 => decode b10 => 41
42 => encode b16 => 2A => decode b10 => 42
43 => encode b16 => 2B => decode b10 => 43
44 => encode b16 => 2C => decode b10 => 44
45 => encode b16 => 2D => decode b10 => 45
46 => encode b16 => 2E => decode b10 => 46
47 => encode b16 => 2F => decode b10 => 47
48 => encode b16 => 30 => decode b10 => 48
49 => encode b16 => 31 => decode b10 => 49
50 => encode b16 => 32 => decode b10 => 50
51 => encode b16 => 33 => decode b10 => 51
52 => encode b16 => 34 => decode b10 => 52
53 => encode b16 => 35 => decode b10 => 53
54 => encode b16 => 36 => decode b10 => 54
55 => encode b16 => 37 => decode b10 => 55
56 => encode b16 => 38 => decode b10 => 56
57 => encode b16 => 39 => decode b10 => 57
58 => encode b16 => 3A => decode b10 => 58
59 => encode b16 => 3B => decode b10 => 59
60 => encode b16 => 3C => decode b10 => 60
61 => encode b16 => 3D => decode b10 => 61
62 => encode b16 => 3E => decode b10 => 62
63 => encode b16 => 3F => decode b10 => 63
64 => encode b16 => 40 => decode b10 => 64
65 => encode b16 => 41 => decode b10 => 65
66 => encode b16 => 42 => decode b10 => 66
67 => encode b16 => 43 => decode b10 => 67
68 => encode b16 => 44 => decode b10 => 68
69 => encode b16 => 45 => decode b10 => 69
70 => encode b16 => 46 => decode b10 => 70
71 => encode b16 => 47 => decode b10 => 71
72 => encode b16 => 48 => decode b10 => 72
73 => encode b16 => 49 => decode b10 => 73
74 => encode b16 => 4A => decode b10 => 74
75 => encode b16 => 4B => decode b10 => 75
76 => encode b16 => 4C => decode b10 => 76
77 => encode b16 => 4D => decode b10 => 77
78 => encode b16 => 4E => decode b10 => 78
79 => encode b16 => 4F => decode b10 => 79
80 => encode b16 => 50 => decode b10 => 80
81 => encode b16 => 51 => decode b10 => 81
82 => encode b16 => 52 => decode b10 => 82
83 => encode b16 => 53 => decode b10 => 83
84 => encode b16 => 54 => decode b10 => 84
85 => encode b16 => 55 => decode b10 => 85
86 => encode b16 => 56 => decode b10 => 86
87 => encode b16 => 57 => decode b10 => 87
88 => encode b16 => 58 => decode b10 => 88
89 => encode b16 => 59 => decode b10 => 89
90 => encode b16 => 5A => decode b10 => 90
91 => encode b16 => 5B => decode b10 => 91
92 => encode b16 => 5C => decode b10 => 92
93 => encode b16 => 5D => decode b10 => 93
94 => encode b16 => 5E => decode b10 => 94
95 => encode b16 => 5F => decode b10 => 95
96 => encode b16 => 60 => decode b10 => 96
97 => encode b16 => 61 => decode b10 => 97
98 => encode b16 => 62 => decode b10 => 98
99 => encode b16 => 63 => decode b10 => 99
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>947</wp:post_id>
		<wp:post_date>2012-10-24 06:34:57</wp:post_date>
		<wp:post_date_gmt>2012-10-24 06:34:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-base-2-8-16-62-n-conversion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alphanumeric"><![CDATA[alphanumeric]]></category>
		<category domain="post_tag" nicename="base10"><![CDATA[base10]]></category>
		<category domain="post_tag" nicename="base2"><![CDATA[base2]]></category>
		<category domain="post_tag" nicename="base62"><![CDATA[base62]]></category>
		<category domain="post_tag" nicename="base8"><![CDATA[base8]]></category>
		<category domain="post_tag" nicename="basen"><![CDATA[baseN]]></category>
		<category domain="post_tag" nicename="binary"><![CDATA[binary]]></category>
		<category domain="post_tag" nicename="decode"><![CDATA[decode]]></category>
		<category domain="post_tag" nicename="encode"><![CDATA[encode]]></category>
		<category domain="post_tag" nicename="hexidecimal"><![CDATA[hexidecimal]]></category>
		<category domain="post_tag" nicename="octal"><![CDATA[octal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dynamic Programming Local Alignment</title>
		<link>http://ken-soft.com/2012/11/12/dynamic-programming-local-alignment/</link>
		<pubDate>Mon, 12 Nov 2012 07:50:06 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=950</guid>
		<description></description>
		<content:encoded><![CDATA[Java example using Dynamic Programming for locally aligning string sequences with each other:
For more information regarding Dynamic Programming check <a href="http://www.biorecipes.com/DynProgBasic/code.html" title="here" target="_blank">here</a> and <a href="http://en.wikipedia.org/wiki/Dynamic_programming" title="here" target="_blank">here</a>

DynamicLocalAlignment.java
<pre lang="java" line="1">
package lib.algo.matching;

import java.util.LinkedList;


public class DynamicLocalAlignment {
	
	/**
	 * determine the optimal local alignment of seq2 to seq1
	 * @param seq1
	 * @param seq2
	 * @param numDeleted
	 * @param scoreMatch
	 * @param scoreMismatch
	 * @param scoreGap
	 * @return
	 */
	public int[][] getAlignmentMatrix(Character[] seq1, Character[] seq2,
			int scoreMatch, int scoreMismatch, int scoreGap) {
		// initialize
		int[][] alignmentMatrix = new int[seq2.length + 1][seq1.length + 1];
		// fill in initial values
		for(int i = 0; i <= seq1.length; i++) {
			alignmentMatrix[0][i] = 0;
		}
		for(int i = 0; i <= seq2.length; i++) {
			alignmentMatrix[i][0] = 0;
		}
		// calculate values
		for(int j = 1; j <= seq2.length; j++) {
			for(int i = 1; i <= seq1.length; i++) {
				// base score
				int matchScore = alignmentMatrix[j-1][i-1];
				int gapScore1 = alignmentMatrix[j-1][i];
				int gapScore2 = alignmentMatrix[j][i-1];
				// is there a match? diagonals
				if(seq1[i-1].equals(seq2[j-1])) {
					matchScore += scoreMatch; 
					//alignmentMatrix[j][i] = matchScore;
				} else {
					matchScore += scoreMismatch;
				}
				// get gap score
				gapScore1 += scoreGap;
				gapScore2 += scoreGap;
				alignmentMatrix[j][i] = max(matchScore, gapScore1, gapScore2, 0);
				
			}
		}		
		return alignmentMatrix;
	}
	
	public Character[][] buildOneSequenceFromAlignmentMatrix(Character[] seq1, Character[] seq2, int[][] alignmentMatrix) {
		LinkedList<Character[][]> sequences = new LinkedList<Character[][]>();
		int maxJ = 0;
		int maxI = 0;

		int currentMax = Integer.MIN_VALUE;
		for (int j = alignmentMatrix.length - 1; j > 0; j--) {
			for (int i = alignmentMatrix[0].length - 1; i > 0; i--) {
				if (alignmentMatrix[j][i] > currentMax) {
					currentMax = alignmentMatrix[j][i];
					maxJ = j;
					maxI = i;
				}
			}
		}
		return buildSequencesFromAlignmentMatrixHelper(sequences, seq1, seq2, alignmentMatrix, maxJ, maxI);
	}
	
	
	private Character[][] buildSequencesFromAlignmentMatrixHelper(LinkedList<Character[][]> sequences,
			Character[] seq1, Character[] seq2, int[][] alignmentMatrix, int j, int i) {

		LinkedList<Character> localseq1 = new LinkedList<Character>();
		LinkedList<Character> localseq2 = new LinkedList<Character>();

		int k;
		for(k = alignmentMatrix[0].length - 2; k >= i; k--) {
			localseq1.addFirst(seq1[k]);
			localseq2.addFirst(new Character('-'));
		}
		
		while(j > 0 && i > 0) {
			 int max = max(alignmentMatrix[j][i - 1], alignmentMatrix[j - 1][i], alignmentMatrix[j - 1][i - 1]);
			 if(max == alignmentMatrix[j - 1][i - 1]) { // match or mismatch
				 localseq1.addFirst(seq1[i - 1]);
				 localseq2.addFirst(seq2[j - 1]);
				 j--;
				 i--;
			 } else {
				 
				 if(max == alignmentMatrix[j - 1][i]) {
					 localseq1.addFirst('-'); 	// blank
					 localseq2.addFirst(seq2[j - 1]);

					 j--;
				 } else if(max == alignmentMatrix[j][i - 1]) {
					 localseq1.addFirst(seq1[i - 1]);
					 localseq2.addFirst('-'); 	// blank
					 i--;
				 }
			 }
		}
		while(j > 0) {
			 localseq1.addFirst('-');	// blank
			 localseq2.addFirst(seq2[j - 1]);
			 j--;
		}
		while(i > 0) {
			 localseq1.addFirst(seq1[i - 1]);
			 localseq2.addFirst('-');	// blank
			i--;
		}
		Character[][] localAlignments = new Character[2][];
		localAlignments[0] = new Character[localseq1.size()];
		localAlignments[1] = new Character[localseq2.size()];
		i = 0;
		for(Character n  : localseq1) {
			localAlignments[0][i] = n; 
			i++;
		}
		i = 0;
		for(Character n  : localseq2) {
			localAlignments[1][i] = n; 
			i++;
		}

		return localAlignments;
	}
	
	public LinkedList<Character[][]> buildManySequencesFromAlignmentMatrix(Character[] seq1, Character[] seq2, int[][] alignmentMatrix, int maxSequences) {
		LinkedList<Character[][]> sequences = new LinkedList<Character[][]>();
		int maxJ = 0;
		int maxI = 0;

		for(int k = 0; k < maxSequences; k++) {
			int currentMax = Integer.MIN_VALUE;
			for(int j = alignmentMatrix.length - 1; j > 0; j--) {
				for(int i = alignmentMatrix[0].length - 1; i > 0; i--) {
					if(alignmentMatrix[j][i] > currentMax) {
						currentMax = alignmentMatrix[j][i];
						maxJ = j; maxI = i;
					}
				}
			}
			sequences.add(buildSequencesFromAlignmentMatrixHelper(sequences, seq1, seq2, alignmentMatrix, maxJ, maxI));
			alignmentMatrix[maxJ][maxI] = 0;
		}
		return sequences;
	}
	
	/**
	 * 
	 * @param seq1
	 * @param seq2
	 * @param alignmentMatrix
	 */
	public void printAlignmentMatrix(Character[] seq1, Character[] seq2, int[][] alignmentMatrix) {
		System.out.print("  |\t\t");
		for(int i = 0; i < seq1.length; i++) {
			System.out.print(seq1[i]+"\t");
		}
		System.out.println();
		for(int i = 0; i <= seq1.length; i++) {
			System.out.print("---------");
		}
		System.out.println();
		
		for(int j = 0; j < seq2.length + 1; j++) {
			if(j > 0) {
				System.out.print(seq2[j-1]+" |\t");
			} else {
				System.out.print("  |\t");
			}
			for(int i = 0; i < alignmentMatrix[0].length; i++) {
				System.out.print(alignmentMatrix[j][i] +"\t");
			}
			System.out.println();
		}
	}

	public int min(int a, int b) {
		return (a < b) ? a : b;
	}
	
	public int min(int a, int b, int c) {
		return min(min(a, b), c);
	}
	
	public int max(int a, int b) {
		return (a > b) ? a : b;
	}
	
	public int max(int a, int b, int c) {
		return max(max(a, b), c);
	}
	
	public int max(int a, int b, int c, int d) {
		return max(max(max(a, b), c), d);
	}

}
</pre>

DynamicLocalAlignmentTest.java
<pre lang="java" line="1">
package lib.algo.matching;

import java.util.List;

import junit.framework.TestCase;

public class DynamicLocalAlignmentTest extends TestCase {

	public void test() { 
		Character[] seq1 = new Character[]{'C', 'A', 'C', 'G', 'T', 'A', 'T'};
		Character[] seq2 = new Character[]{'C', 'G', 'C', 'A'};

		DynamicLocalAlignment dla = new DynamicLocalAlignment();
		int[][] alignmentMatrix = dla.getAlignmentMatrix(seq1, seq2, 1, 0, -1);
		System.out.println("AlignmentMatrix: ");
		dla.printAlignmentMatrix(seq1, seq2, alignmentMatrix);
		System.out.println("Matches: ");
		List<Character[][]> nodeList = dla.buildManySequencesFromAlignmentMatrix(seq1, seq2, alignmentMatrix, 5);
		int i = 1;
		for(Character[][] nl : nodeList) {
			System.out.println("Match #" + i);
			i++;
			for(Character n : nl[0]) {
				System.out.print(n);
			}
			System.out.println();
			for(Character n : nl[1]) {
				System.out.print(n);
			}
			System.out.println();
		}
	}
	
}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>950</wp:post_id>
		<wp:post_date>2012-11-12 07:50:06</wp:post_date>
		<wp:post_date_gmt>2012-11-12 07:50:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-programming-local-alignment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dynamic-programming"><![CDATA[Dynamic Programming]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="local-alignment"><![CDATA[Local Alignment]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dynamic Programmign - String Similarity</title>
		<link>http://ken-soft.com/2012/11/12/dynamic-programmign-string-similarity/</link>
		<pubDate>Mon, 12 Nov 2012 07:53:34 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=955</guid>
		<description></description>
		<content:encoded><![CDATA[Java example using Dynamic Programming for measuring String Similarity:
For more information regarding Dynamic Programming check <a href="http://en.wikipedia.org/wiki/Dynamic_programming" title="here" target="_blank">here</a>.

DynamicStringSimularity.java
<pre lang="java" line="1">
package lib.algo.matching;

public class DynamicStringSimularity {
	
	private int scoreMatch = 1;
	
	private int scoreMismatch = -1;
	
	private int scoreGap = -1;
	
	public boolean print = false;
	
	public DynamicStringSimularity() {
	}
	
	public DynamicStringSimularity(int scoreMatch, int scoreMismatch, int scoreGap) {
		this.scoreMatch = scoreMatch;
		this.scoreMismatch = scoreMismatch;
		this.scoreGap = scoreGap;
	}

	/**
	 * Dynamically compare two strings
	 * @param seq1
	 * @param seq2
	 * @return 0.0 to 1.0, 
	 * 		0.0 = 100% dissimilar
	 * 		1.0 = 100% similar
	 */
	public double compare(String seq1, String seq2) {
		seq1 = seq1.toLowerCase();
		seq2 = seq2.toLowerCase();
		double score = Double.MIN_VALUE;
		
		// initialize
		int[][] alignmentMatrix = new int[seq2.length() + 1][seq1.length() + 1];
		// fill in initial values
		for(int i = 0; i <= seq1.length(); i++) {
			alignmentMatrix[0][i] = 0;
		}
		for(int i = 0; i <= seq2.length(); i++) {
			alignmentMatrix[i][0] = 0;
		}
		// calculate values
		for(int j = 1; j <= seq2.length(); j++) {
			for(int i = 1; i <= seq1.length(); i++) {
				// base score
				int matchScore = alignmentMatrix[j - 1][i - 1];
				int gapScore1 = alignmentMatrix[j - 1][i];
				int gapScore2 = alignmentMatrix[j][i - 1];
				// is there a match? diagonals
				if(seq1.charAt(i - 1) == seq2.charAt(j - 1)) {
					matchScore += scoreMatch; 
				} else {
					matchScore += scoreMismatch;
				}
				// get gap score
				gapScore1 += scoreGap;
				gapScore2 += scoreGap;
				alignmentMatrix[j][i] = max(matchScore, gapScore1, gapScore2, 0);
				if(print) {
					System.out.print(alignmentMatrix[j][i] + "\t");
				}
			}
			if(print) {
				System.out.println();
			}
		}		
		score = getMaxValue(alignmentMatrix);
		// normalize score
		score = score / max(seq1.length(), seq2.length());
		return score;
	}
	
	private int getMaxValue(int[][] alignmentMatrix) {
		int maxValue = Integer.MIN_VALUE;
		for(int j = 0; j < alignmentMatrix.length; j++) {
			for(int i = 0; i < alignmentMatrix[0].length; i++) {
				if(alignmentMatrix[j][i] > maxValue) {
					maxValue = alignmentMatrix[j][i];
				}
			}
		}
		return maxValue;
	}
	
	private int max(int a, int b) {
		return (a > b) ? a : b;
	}
	
	private int max(int a, int b, int c, int d) {
		return max(max(max(a, b), c), d);
	}
	
}
</pre>

DynamicStringSimularityTest.java
<pre lang="java" line="1">
package lib.algo.matching;

import org.junit.Test;

public class DynamicStringSimularityTest {

	@Test
	public void test() {
		runTest("kenny", "kenny");
		runTest("kenny", "abcde");
		runTest("aaaaa", "bbbbb");
		runTest("aaabbb", "bbbaaa");
		runTest("aaabbb", "ababab");
		runTest("Hi my name is kenny, and this is a test", "Hi my name is benny, and this is a test");
	}
	
	private void runTest(String s1, String s2) {
		System.out.println("s1: " + s1 + ", s2: " + s2);
		DynamicStringSimularity dss = new DynamicStringSimularity();
		dss.print = true;
		System.out.println("score: " +  dss.compare(s1, s2));
	}

}

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>955</wp:post_id>
		<wp:post_date>2012-11-12 07:53:34</wp:post_date>
		<wp:post_date_gmt>2012-11-12 07:53:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-programmign-string-similarity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dynamic-programming"><![CDATA[Dynamic Programming]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="string-similarity"><![CDATA[String Similarity]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>P8 CPU Emulator - Java</title>
		<link>http://ken-soft.com/2012/11/21/p8-cpu-emulator-java/</link>
		<pubDate>Wed, 21 Nov 2012 02:46:13 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=960</guid>
		<description></description>
		<content:encoded><![CDATA[A Java implementation of the P8 CPU.

Github Repo <a href="https://github.com/kennycason/p8" target="_blank">here</a>

Based on the documentation found <a href="http://www.rexfisher.com/P8/P8_Instructions.htm" target="_blank"><b>Here</b></a> 

P8.java
<pre lang="java" line="1">
package lib.cpu.p8;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

/**
 * Simple 8-bit CPU modeled after: http://www.rexfisher.com/P8/P8_TOC.htm
 * http://www.rexfisher.com/P8/P8_Instructions.htm
 * 
 * @author Kenny
 * 
 */
public class P8 {
	
	private static final String[] OPCODE_NAMES = new String[] {
		 "", 		// ---
		 "IN", 		// 00001
		 "OUT",		// 00010
		 "", 		// ---
		 "JMP", 	// 00100
		 "JNZ",  	// 00101
		 "JZ",  	// 00110
		 "CMP",  	// 00111
		 "LDA",  	// 01000
		 "LDR",  	// 01001
		 "STA",  	// 01010
		 "STR",  	// 01011
		 "ADD",  	// 01100
		 "SUB",  	// 01101
		 "DEC",  	// 01110
		 "", 		// ---
		 "OR", 		// 10000
		 "INV",  	// 10001
		 "SHL" 		// 10010
	};
	
	private static final String[] ADDRESS_MODE_NAMES = new String[] {
		 "MEM(address)",	// Direct Memory Address in Byte 2
		 "---", 			// Not Used
		 "A", 				// A Register
		 "R", 				// R Register
		 "MEM(R)", 			// Memory Address in R Register
		 "---", 			// Not Used
		 "data", 			// Byte 2 of Instruction
		 "---"				// Not Used
	};

	public Registers r;

	public MMU mmu;

	public Port port;

	public boolean halt;

	public boolean printStack = false;
	
	public boolean printOp = true;

	public P8() {
		this(0x100, 0x100);
	}
	
	public P8(int stackSize) {
		this(stackSize, 0x100);
	}
	
	public P8(int stackSize, int portSize) {
		r = new Registers();
		mmu = new MMU(stackSize); // 0x00 - 0xFF
		port = new Port(portSize);
		halt = false;
	}

	public void exec() {
		if (!halt) {
			try {
				int instr = mmu.readByte(r.IP++);
				int opCode = (instr & 0xF8) >> 3; // high 5 bits
				int operand = getOperand(instr);
				callOp(opCode, operand);
				if(printOp) {
					System.out.println(getInstructionName(instr));
				}
			} catch (Exception e) {
				halt = true;
				System.out.println("["  + e.getMessage() + "] Halting...");
			}
		}

	}

	public void dispatch() {
		while (!halt) {
			exec();
			if (printStack) {
				System.out.println(this);
			}
		}
	}
	
	public void reset() {
		r.reset();
		mmu.reset();
		port.reset();
		halt = false;
	}

	private int getOperand(int instr) {
		int addrMode = instr & 0x07; // low 3 bits
		switch (addrMode) {
			case 0x00: // Direct Memory Address in Byte 2
				return mmu.readByte(mmu.readByte(r.IP++));
			case 0x01: // Not Used ---
				halt = true;
				return 0x00;
			case 0x02: // Register A Register
				return r.A;
			case 0x03: // Register R Regsiter
				return r.R;
			case 0x04: // Indirect Memory Address in R Register
				r.IP++;
				return mmu.readByte(r.R);
			case 0x05: // Not Used ---
				halt = true;
				return 0x00;
			case 0x06: // Immediate Byte 2 of Instruction
				return mmu.readByte(r.IP++);
			case 0x07: // Not Used ---
				halt = true;
				return 0x00;
			default:
				halt = true;
				return 0x00;
		}
	}

	private void callOp(int opCode, int operand) {
		switch (opCode) {
			case 0x01: // IN 00001
				IN(operand);
				break;
			case 0x02: // OUT 00010
				OUT(operand);
				break;
			case 0x04: // JMP 00100
				JMP(operand);
				break;
			case 0x05: // JNZ 00101
				JNZ(operand);
				break;
			case 0x06: // JZ 00110
				JZ(operand);
				break;
			case 0x07: // CMP 00111
				CMP(operand);
				break;
			case 0x08: // LDA 01000
				LDA(operand);
				break;
			case 0x09: // LDR 01001
				LDR(operand);
				break;
			case 0x0A: // STA 01010
				STA(operand);
				break;
			case 0X0B: // STR 01011
				STR(operand);
				break;
			case 0x0C: // ADD 01100
				ADD(operand);
				break;
			case 0x0D: // SUB 01101
				SUB(operand);
				break;
			case 0x0E: // DEC 01110
				DEC(operand);
				break;
			case 0x10: // OR 10000
				OR(operand);
				break;
			case 0x11: // INV 10001
				INV(operand);
				break;
			case 0x12: // SHL 10010
				SHL(operand);
				break;
			default:
				XX();
				break;
		}
	}

	private String getInstructionName(int instr) {
		int opCode = (instr & 0xF8) >> 3; // high 5 bits
		int addrMode = instr & 0x07; // low 3 bits
		String instrName = " ["
				+ String.format("%5s", Integer.toBinaryString(opCode)).replace(
						' ', '0')
				+ " "
				+ String.format("%3s", Integer.toBinaryString(addrMode))
						.replace(' ', '0') + "] ";
	
		if(opCode < OPCODE_NAMES.length) {
			instrName += P8.OPCODE_NAMES[opCode] + " " + P8.ADDRESS_MODE_NAMES[addrMode];
		}
		return instrName;
	}

	/*
	 * Instructions
	 */
	private void XX() {
		System.out.println("Unknown Instruction. Halting...");
		halt = true;
	}

	// 1. Input / Output. These instructions transfer data between the
	// accumulator and external I/O devices.
	/**
	 * IN = Read Input Port
	 * 
	 * @param operand
	 */
	private void IN(int operand) {
		r.A = port.readByte(operand);
	}

	/**
	 * OUT = Write Output Port
	 * 
	 * @param operand
	 */
	private void OUT(int operand) {
		port.writeByte(operand, r.A);
	}

	// 2. Program Control. These instructions change the sequence of program
	// execution. They are often called branch instructions.

	/**
	 * JMP = Unconditional Jump
	 */
	private void JMP(int operand) {
		r.IP = operand;
	}

	/**
	 * JNZ = Jump If Not Zero (Conditional Jump)
	 */
	private void JNZ(int operand) {
		if (r.Z == 0) {
			JMP(operand);
		}
	}

	/**
	 * JZ = Jump If Zero (Conditional Jump)
	 */
	private void JZ(int operand) {
		if (r.Z == 1) {
			JMP(operand);
		}
	}

	/**
	 * CMP = Compare (Sets / Resets Zero Bit For Conditional Jumps)
	 */
	private void CMP(int operand) {
		if (r.A - operand == 0) {
			r.Z = 1;
		}
	}

	// 3. Data Transfer. These instructions cause data in one location (either
	// the internal registers or external memory) to be copied to another
	// location.

	/**
	 * LDA = Load A Register
	 */
	private void LDA(int operand) {
		r.A = operand;
	}

	/**
	 * LDR = Load R Register
	 */
	private void LDR(int operand) {
		r.R = operand;
	}

	/**
	 * STA = Store A Register
	 * 
	 * @param operand
	 */
	private void STA(int operand) {
		mmu.writeByte(operand, r.A);
	}

	/**
	 * STR = Store R Register
	 */
	private void STR(int operand) {
		mmu.writeByte(operand, r.R);
	}

	// 4. Arithmetic. These instructions perform numerical operations on data.
	// Floating point operations are not supported.

	/**
	 * ADD = Add To A Register
	 */
	private void ADD(int operand) {
		r.A += operand;
	}

	/**
	 * SUB = Subtract From A Register
	 */
	private void SUB(int operand) {
		r.A -= operand;
	}

	/**
	 * DEC = Decrement
	 */
	private void DEC(int operand) {
		r.A = operand--;
	}

	// 5. Logical. These instructions perform Boolean operations on data,
	// including bit shifting.

	/**
	 * OR = Or With A Register
	 * 
	 * @param operand
	 */
	private void OR(int operand) {
		r.A |= operand;
	}

	/**
	 * INV = Invert & Move To A Register
	 */
	private void INV(int operand) {
		r.A = ~operand;
	}

	/**
	 * SHL = Shift Left & Move To A Register
	 */
	private void SHL(int operand) {
		r.A = operand << 1;
	}
	
	/**
	 * 
	 * @param instructions
	 */
	public void loadInstructions(int[] instructions) {
		for (int i = 0; i < instructions.length; i++) {
			mmu.writeByte(i, instructions[i]);
		}
	}

	/**
	 * Binary representation
	 * 
	 * @param instructions
	 */
	public void loadInstructions(String[] instructions) {
		for (int i = 0; i < instructions.length; i++) {
			mmu.writeByte(i, Integer.parseInt(instructions[i], 2));
		}
	}
	
	/**
	 * 
	 */
	public void loadInstructionsFromFile(String fileName) {
		try {
			BufferedReader br = new BufferedReader(new FileReader(fileName));
			String line = "";
			ArrayList<String> instructions = new ArrayList<String>();
			while ((line = br.readLine()) != null) {
				line = line.trim();
				instructions.add(line.substring(0, 8));
			}
			br.close();
			loadInstructions(instructions.toArray(new String[instructions.size()]));
		} catch(FileNotFoundException e) {
			e.printStackTrace();
			System.out.println("Halting...");
			halt = true;
		} catch (IOException e) {
			e.printStackTrace();
			System.out.println("Halting...");
			halt = true;
		}
	}

	public String toString() {
		return r.toString() + "\n" + mmu.toString();
	}

}
</pre>

Registers.java
<pre lang="java" line="1">
package lib.cpu.p8;

public class Registers {
	
	public int IP;	// Instruction Pointer
	
	public  int A;	// Accumulator
	
	public int R;	// Data/Address 
	
	public int Z;	// zero flag
	
	public void reset() {
		IP = 0;
		A = 0;
		R = 0;
		Z = 0;
	} 
	
	public String toString() {
		return "[\n\tIP: " + IP + "\n" + 
				"\tA: " + A + "\n" + 
				"\tR: " + R + "\n" + 
				"\tZ: " + Z + "\n]";
	}
	
}
</pre>

MMU.java
<pre lang="java" line="1">
package lib.cpu.p8;

public class MMU extends AbstractObservableBuffer {

	public MMU(int size) {
		super(size);
	}

}
</pre>

Port.java
<pre lang="java" line="1">
package lib.cpu.p8;

public class Port extends AbstractObservableBuffer {

	public Port(int size) {
		super(size);
	}
	
}
</pre>

AbstractObservableBuffer.java
<pre lang="java" line="1">
package lib.cpu.p8;

import java.util.Observable;

public class AbstractObservableBuffer extends Observable {

	protected int[] buffer;
	
	public AbstractObservableBuffer(int size) {
		buffer = new int[size];
	}
	
	public void reset() {
		for(int i = 0; i < buffer.length; i++) {
			buffer[i] = 0x00;
		}
	}
	
	public void writeByte(int address, int value) throws ArrayIndexOutOfBoundsException {
		if(address < 0 || address >= buffer.length) {
			throw new ArrayIndexOutOfBoundsException(address);
		}
		buffer[address] = value & 0xFF;
		setChanged();
		notifyObservers(address);
	}
	
	public void writeWord(int address, int value)  throws ArrayIndexOutOfBoundsException {
		writeByte(address, value & 0xFF);
		writeByte(address + 1, (value >> 8) & 0xFF);
	}
	
	public int readByte(int address) throws ArrayIndexOutOfBoundsException {
		if(address < 0 || address >= buffer.length) {
			throw new ArrayIndexOutOfBoundsException(address);
		}
		// System.out.println("Reading: " + Integer.toHexString(address).toUpperCase() + " => " +  Integer.toBinaryString(buffer[address]).toUpperCase());
		return buffer[address];
	}
	
	public int readWord(int address) throws ArrayIndexOutOfBoundsException {
		return readByte(address) + (readByte(address + 1) << 8);
	}
	
	public String toString() {
		StringBuilder sb = new StringBuilder();
		for(int i = 0; i < buffer.length; i++) {
			sb.append("[" + String.format("%8s", Integer.toBinaryString(i)).replace(' ', '0')  + "] 0x" + Integer.toHexString(i).toUpperCase());
			sb.append("\t=>\t");
			sb.append("[" + String.format("%8s", Integer.toBinaryString(buffer[i])).replace(' ', '0')  + "] 0x" + Integer.toHexString(buffer[i]).toUpperCase());
			sb.append("\n");
		}
		return sb.toString();
	}
	
}
</pre>

IPortListener.java
<pre lang="java" line="1">
package lib.cpu.p8;

import java.util.Observer;

interface IPortListener extends Observer {

}
</pre>

SinglePortListener.java
<pre lang="java" line="1">
package lib.cpu.p8;

import java.util.LinkedList;
import java.util.Observable;
import java.util.Queue;

public class SinglePortListener implements IPortListener {
	
	private final int port;
	
	private Queue<Integer> data;

	public SinglePortListener(int port) {
		this.port = port;
		data = new LinkedList<Integer>();
	}
	
	@Override
	public void update(Observable o, Object obj) {
		if(o instanceof Port && obj instanceof Integer) {
			Port p = (Port) o;
			Integer portRead = (Integer) obj;
			if(portRead == port) {
				// System.out.println("Reading Port: 0x" + Integer.toHexString(port).toUpperCase() + " => " + p.readByte(port));
				data.add( p.readByte(port));
			}
		}
	}

	public int getPort() {
		return port;
	}
	
	public int size() {
		return data.size();
	}
	
	public int pop() {
		if(data.size() > 0) {
			return data.poll();
		}
		return -1;
	}
	
}
</pre>

test.asm
<pre lang="java" line="1">
01100110	; ADD A, data(0x4)
00000100
01101110	; SUB A, data(0x1)
00000001
00111110	; CMP A, data(0x00)
00000000
00110110	; JZ data(0x00)
11111111	; End program
00101110	; JNZ data(0x02)
00000010
</pre>

MMUTest.java
<pre lang="java" line="1">
package lib.cpu.p8;

import static org.junit.Assert.*;
import lib.cpu.p8.MMU;

import org.junit.Test;

public class MMUTest {

	@Test
	public void testReadWrite() {
		MMU mmu = new MMU(0x10);
		
		// first
		mmu.writeByte(0x00, 0xFF);
		assertEquals(0xFF, mmu.readByte(0x00));
		
		// last
		mmu.writeByte(0xF, 0xFF);
		assertEquals(0xFF, mmu.readByte(0x0F));
		
		// out of bounds
		try {
			mmu.readByte(0x10);
			assertTrue(false);
		} catch(ArrayIndexOutOfBoundsException e) {
			assertTrue(true);
		}
		
		try {
			mmu.readByte(-1);
			assertTrue(false);
		} catch(ArrayIndexOutOfBoundsException e) {
			assertTrue(true);
		}
		
		// read/write word
		mmu.reset();
		mmu.writeWord(0x00, 0xABCD);
		assertEquals(0xABCD, mmu.readWord(0x00));
		
		mmu.writeWord(0xE, 0xABCD);
		assertEquals(0xABCD, mmu.readWord(0x0E));
		
		System.out.println(mmu.toString());
	}
	
	@Test
	public void testDefault() {
		MMU mmu = new MMU(0x10);
		for(int i = 0; i < 0x10; i++) {
			assertEquals(0, mmu.readByte(i));
		}
	}
	
	@Test
	public void miscTests() {
		MMU mmu = new MMU(0x10);
		int ip = 0x00;
		mmu.writeByte(ip++, 0xFF);
		mmu.writeByte(ip++, 0xCC);
		System.out.println(mmu.toString());
		
		//System.out.println(Integer.toBinaryString(0xF8));
	}

}
</pre>

P8Test.java
<pre lang="java" line="1">
package lib.cpu.p8;

import static org.junit.Assert.assertEquals;
import lib.utils.FileUtils;

import org.junit.Test;

public class P8Test {

	@Test
	public void test() {
		P8 p8 = new P8();
		
		int[] instructions = new int[] {
				0x66,	// 0b01100110  ADD A, data(0x4)
				0x04,
				
				0x6E,	// 0b01101110  SUB A, data(0x1)
				0x01,
				
				0x3E,	// 0b00111010  CMP A, data(0x00)
				0x00,
				0x36,	// 0b00110110  JZ data(0x00)
				0xFF,   // Will end program
				0x2E,	// 0b00110110  JNZ data(0x02)
				0x02,		
		};
		p8.loadInstructions(instructions);
		// System.out.println(p8);
		//p8.printStack = true;
		p8.dispatch();
		
	}
	
	@Test
	public void testLoadBinary() {
		P8 p8 = new P8();
		
		String[] instructions = new String[] {
				"01100110", // ADD A, data(0x4)
				"00000100",
				
				"01101110",	// SUB A, data(0x1)
				"00000001",
				
				"00111110",	// CMP A, data(0x00)
				"00000000",
				"00110110",	// JZ data(0x00)
				"11111111", // Will end program
				"00101110",	// JNZ data(0x02)
				"00000010",		
		};
		p8.loadInstructions(instructions);
		// p8.printStack = true;
		// System.out.println(p8);
		p8.dispatch();
		
	}
	
	@Test
	public void testOUT() {
		// test 1
		SinglePortListener port0 = new SinglePortListener(0);
		SinglePortListener port1 = new SinglePortListener(1);
		
		P8 p8 = new P8();
		p8.port.addObserver(port0);
		p8.port.addObserver(port1);
		
		String[] instructions = new String[] {
				"01100110", // ADD A, data(0x4)
				"00000100",
				
				"00010110", // OUT data(0x0) ; write A to port 0x00
				"00000000",
				
		};
		p8.loadInstructions(instructions);
		p8.exec();
		p8.exec();
		assertEquals(1, port0.size());
		assertEquals(0x4, port0.pop());
		assertEquals(0, port1.size());
		
		// test 2
		p8.reset();
		instructions = new String[] {
				"01100110", // ADD A, data(0x7)
				"00000111",
				
				"00010110", // OUT data(0x01) ; write A to port 0x01
				"00000001",
		};
		p8.loadInstructions(instructions);
		p8.exec();
		p8.exec();
		assertEquals(0, port0.size());
		assertEquals(1, port1.size());
		assertEquals(0x7, port1.pop());
		
	}
	
	@Test
	public void testPortIN() {

		P8 p8 = new P8();
		p8.port.writeByte(0x00, 0xFE); // write to port
		
		String[] instructions = new String[] {
			
				"00001010", // IN A ; read port(A)
				"01010110", // STA data
				
		};
		p8.loadInstructions(instructions);
		assertEquals(p8.r.A, 0x00);
		p8.exec();
		assertEquals(p8.r.A, 0xFE);
		p8.exec();
		assertEquals(0xFE, p8.mmu.readByte(0x00));
		
	}
	
	@Test
	public void testLoadFile() {
		P8 p8 = new P8();
		p8.loadInstructionsFromFile(FileUtils.home() + "krunch/src/lib/cpu/p8/test.asm");
		assertEquals(p8.mmu.readByte(0x00), 0x66);
		assertEquals(p8.mmu.readByte(0x01), 0x04);
		assertEquals(p8.mmu.readByte(0x02), 0x6E);
		assertEquals(p8.mmu.readByte(0x03), 0x01);
		assertEquals(p8.mmu.readByte(0x04), 0x3E);
		assertEquals(p8.mmu.readByte(0x05), 0x00);
		assertEquals(p8.mmu.readByte(0x06), 0x36);
		assertEquals(p8.mmu.readByte(0x07), 0xFF);
		assertEquals(p8.mmu.readByte(0x08), 0x2E);
		assertEquals(p8.mmu.readByte(0x09), 0x02);
			
	}

}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>960</wp:post_id>
		<wp:post_date>2012-11-21 02:46:13</wp:post_date>
		<wp:post_date_gmt>2012-11-21 02:46:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>p8-cpu-emulator-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[assembly]]></category>
		<category domain="post_tag" nicename="cpu-emulator"><![CDATA[cpu emulator]]></category>
		<category domain="category" nicename="emulation"><![CDATA[Emulation]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="p8"><![CDATA[p8]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP - Binary Bayesian Filter</title>
		<link>http://ken-soft.com/2012/11/30/php-binary-bayesian-filter/</link>
		<pubDate>Fri, 30 Nov 2012 23:51:31 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=963</guid>
		<description></description>
		<content:encoded><![CDATA[This is a simple Binary Bayesian Filter. The reason for the Interfaces and Abstract classes is because I am still mid-ways through my Java to PHP port :)

Also notice that this model calculates <code>P(A|B)</code> by assigning probability values rather than frequency counts. <code>P(A|B) = P(A & B) / P(B)</code>

Sample Usage
<pre lang="php" line="1">
$neg = File::read(LIB_DIR . 'classify/bayes/data/NEG'); // my file loading methods, you can use your own
$pos = File::read(LIB_DIR . 'classify/bayes/data/POS');

$bayes = new PositiveNegativeBayesianFilter();
$bayes->trainBad($neg);
$bayes->trainGood($pos); 
$bayes->finalizeTraining();

$reviews = array(
    'I hate this stupid website',
    'I love life, life is awesomme',
    'blah blah blah'
);

// live sentiment analysis
for($i = 0; $i < count($reviews); $i++) {
    $score = $bayes->analyze($reviews[$i]);
    echo $reviews[$i] . ' = ' . $score . '<br/>';
}
</pre>

PositiveNegativeBayesianFilter.php
<pre lang="php" line="1">
<?php

require_once("AbstractBayesianBinaryFilter.php");

/**
 *
 * @author Kenny
 */
class PositiveNegativeBayesianFilter extends AbstractBayesianBinaryFilter {

    // How to split the String into tokens
    private $splitregex;

    public function __construct() {
        $this->splitregex = "/\\w+/i";
    }

    public function parseTokens($content) {
        $matches = array();
        preg_match_all($this->splitregex, $content, $matches);
        return $matches[0];
    }

    public function setSplitRegex($splitregex) {
        $this->splitregex = $splitregex;
    }

    public function trainBad($content) {
        $tokens = $this->parseTokens($content);
        $spamTotal = 0;

        // For every word token
        // d($tokens);
        for ($i = 0; $i < count($tokens); $i++) {
            $word = strtolower($tokens[$i]);
            $word = preg_replace("/[^A-Za-z0-9\s\s+]/", "", $word);
            if ($word != "") {

                $spamTotal++;
                // If it exists in the HashMap already
                // Increment the count
                if (array_key_exists($word, $this->words)) {
                    $this->words[$word]->countBad();
                } else {  // Otherwise it's a new word so add it
                    $w = new Word($word);
                    $w->countBad();
                    $this->words[$word] = $w;
                }
            }
        }
        // Go through all the words and divide
        // by total words
        foreach ($this->words as $k => $w) {
            $w->calcBadProb($spamTotal);
        }
    }

    public function trainGood($content) {
        $tokens = $this->parseTokens($content);
        $goodTotal = 0;

        // For every word token
        for ($i = 0; $i < count($tokens); $i++) {
            $word = strtolower($tokens[$i]);
            $word = preg_replace("/[^A-Za-z0-9\s\s+]/", "", $word);
            if ($word != "") {
                $goodTotal++;
                // If it exists in the HashMap already
                // Increment the count
                if (array_key_exists($word, $this->words)) {
                    $this->words[$word]->countGood();
                } else {  // Otherwise it's a new word so add it
                    $w = new Word($word);
                    $w->countGood();
                    $this->words[$word] = $w;
                }
            }
        }
        // Go through all the words and divide
        // by total words
        foreach ($this->words as $k => $w) {
            $w->calcGoodProb($goodTotal, 2.0);
        }
    }

    /**
     * This method is derived from Paul Graham:
     * http://www.paulgraham.com/spam.html
     */
    public function analyze($content) {

        $tokens = $this->parseTokens($content);
        $interesting = $this->getInterestingWords($tokens, 15);

        // Apply Bayes' rule (via Graham)
        $pposproduct = 1.0;
        $pnegproduct = 1.0;
        // For every word, multiply Spam probabilities ("Pneg") together
        // (As well as 1 - Pneg)
        for ($i = 0; $i < count($interesting); $i++) {
            $pposproduct *= $interesting[$i]->getPNegative();
            $pnegproduct *= (1.0 - $interesting[$i]->getPNegative());
        }

        // Apply formula
        $pPos = $pnegproduct / ($pposproduct + $pnegproduct);
        return $pPos;
    }

    /**
     * Create an arraylist of <limit> most "interesting" words
     * Words are most interesting based on how different their BAD
     * probability is from 0.5
     * @param content
     * @param size
     * @return
     */
    private function getInterestingWords($tokens, $limit) {
        $interesting = array();

        // For every word in the String to be analyzed
        for ($i = 0; $i < count($tokens); $i++) {
            $word = strtolower($tokens[$i]);
            $word = preg_replace("/[^A-Za-z0-9\s\s+]/", "", $word);
            if ($word != "") {
                // d($word);
                $w;
                // If the String is in our HashMap get the word out
                if (array_key_exists($word, $this->words)) {
                    $w = $this->words[$word];
                    // Otherwise, make a new word with a Bad probability of 0.5;
                } else {
                    $w = new Word($word);
                    $w->setPNegative(0.4);
                }

                // If this list is empty, then add this word in!
                if (count($interesting) == 0) {
                    $interesting[] = $w;
                    // Otherwise, add it in sorted order by interesting level
                } else {
                    for ($j = 0; $j < count($interesting); $j++) {
                        // For every word in the list already
                        $nw = $interesting[$j];
                        // If it's the same word, don't bother
                        if ($w->getWord() == $interesting[$j]->getWord()) {
                            break;
                            // If it's more interesting stick it in the list
                        } else if ($w->interesting() > $interesting[$j]->interesting()) {
                            ArrayUtils::insertAt($j, $w, $interesting);
                            break;
                            // If we get to the end, just tack it on there
                        } else if ($j == count($interesting) - 1) {
                            $interesting[] = $w;
                        }
                    }
                }

                // If the list is bigger than the limit, delete entries
                // at the end (the more "interesting" ones are at the
                // start of the list
                while (count($interesting) > $limit) {
                    array_pop($interesting);
                }
            }
        }
//        for ($j = 0; $j < count($interesting); $j++) {
//            d('word: ' . $interesting[$j]->getWord() . ' pBad: ' . $interesting[$j]->getPBad()  . ' pGood: ' . $interesting[$j]->getPGood());
//        }
        return $interesting;
    }

}
</pre>


AbstractBayesianBinaryFilter.php
<pre lang="php" line="1">
<?php

require_once("IBayesianBinaryFilter.php");
require_once("Word.php");
/**
 * Description of AbstractBayesianBinaryFilter
 *
 * @author Kenny
 */
abstract class AbstractBayesianBinaryFilter implements IBayesianBinaryFilter {
   
    // A Hashmap maping string to Word
    protected $words = array();

    public function displayStats() {
        foreach($this->words as $k => $word) {
            if($word != null) {
                echo $k . " " . $word->getNegative();
            }
        }
    }

    public function  finalizeTraining() {
        foreach($this->words as $k => $word) {
            $word->finalizeProb();
           // echo 'word: ' .  $word->getWord() . ' pNeg: ' .  $word->getPBad() . ', pGood: ' .  $word->getPGood() . '<br/>';
        }
    }

}
</pre>

IBayesianBinaryFilter.php
<pre lang="php" line="1">
<?php

require_once("IBayesianFilter.php");
/**
 *
 * @author destructo
 */
interface IBayesianBinaryFilter extends IBayesianFilter {

    function trainBad($content);

    function trainGood($content);

    function parseTokens($content);
}
</pre>

IBayesianFilter.php
<pre lang="php" line="1">
<?php

/**
 *
 * @author Kenny
 */
interface IBayesianFilter {

    function finalizeTraining();

    function analyze($content);

    function displayStats();
    
}
</pre>

IBayesianFilter.php
<pre lang="php" line="1">
<?php

/**
 *
 * @author Kenny
 */
interface IBayesianFilter {

    function finalizeTraining();

    function analyze($content);

    function displayStats();
    
}
</pre>

Word.php
<pre lang="php" line="1">
<?php

/**
 * Description of Word
 *
 * @author Kenny
 */
class Word {

    private $word; // The String itself
    private $countBad; // The total times it appears in "bad" messages
    private $countGood; // The total times it appears in "good" messages
    private $rBad; // bad count / total bad words
    private $rGood; // good count / total good words
    private $pNeg; // probability this word is negative
    private $pGood; // probability this word is positive

    // Create a word, initialize all vars to 0

    public function __construct($word) {
        $this->word = $word;
        $this->countBad = 0;
        $this->countGood = 0;
        $this->rBad = 0.0;
        $this->rGood = 0.0;
        $this->pNeg = 0.0;
        $this->pGood = 0.0;
    }

    // Increment bad counter
    public function countBad() {
        $this->countBad++;
    }

    // Increment good counter
    public function countGood() {
        $this->countGood++;
    }

    // Computer how often this word is bad
    public function calcBadProb($total, $biasBad = 1.0) {
        if ($total > 0) {
            $this->rBad = $biasBad * $this->countBad / $total;
        }
    }

    public function calcGoodProb($total, $biasGood = 1.0) {
        if ($total > 0) {
            $this->rGood = $biasGood * $this->countGood / $total;
        }
    }

    // Implement bayes rules to computer how likely this word is "negative"
    public function finalizeProb() {
        if ($this->rGood + $this->rBad > 0) {
            $this->pNeg = $this->rBad / ($this->rBad + $this->rGood);
            $this->pGood = $this->rGood / ($this->rBad + $this->rGood);
        }
        if ($this->pNeg < 0.01) {
            $this->pNeg = 0.01;
        } else if ($this->pNeg > 0.99) {
            $this->pNeg = 0.99;
        }
        if ($this->pGood < 0.01) {
            $this->pGood = 0.01;
        } else if ($this->pGood > 0.99) {
            $this->pGood = 0.99;
        }
        // echo 'word: ' . $this->word . ' pNeg: ' . $this->pNeg . ', pGood: ' . $this->pGood . '<br/>';
    }

    // The "interesting" rating for a word is
    // How different from 0.5 it is
    public function interesting() {
        return abs(0.5 - $this->pNeg);
    }

    public function getPGood() {
        return $this->rGood;
    }

    public function getPBad() {
        return $this->rBad;
    }

    public function getPNegative() {
        return $this->pNeg;
    }

    public function setPNegative($f) {
        $this->pNeg = $f;
    }

    public function getPPositive() {
        return $this->pGood;
    }

    public function setPPositive($f) {
        $this->pGood = $f;
    }

    public function getWord() {
        return $this->word;
    }

}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>963</wp:post_id>
		<wp:post_date>2012-11-30 23:51:31</wp:post_date>
		<wp:post_date_gmt>2012-11-30 23:51:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-binary-bayesian-filter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bayesian-filter"><![CDATA[Bayesian Filter]]></category>
		<category domain="post_tag" nicename="classfication"><![CDATA[classfication]]></category>
		<category domain="post_tag" nicename="nlp"><![CDATA[nlp]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="spam"><![CDATA[Spam]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP - Currency Conversion</title>
		<link>http://ken-soft.com/2012/12/30/php-currency-conversion/</link>
		<pubDate>Sun, 30 Dec 2012 11:06:32 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=973</guid>
		<description></description>
		<content:encoded><![CDATA[I can't remember when I wrote this but I found this little snippet in my library and didn't want it to go to waste.

It's very simple and just uses Yahoo! Finance to get the quote. To use the Class simply use the below code:
<pre lang="php" line="1">
  $currency = new Currency();
  print_r($currency->convert('USD', 'JPY', 100));
</pre>
It should then echo out something like:
<pre lang="php" line="1">
Array ( [currency] => USDJPY [rate] => 85.995 [date] => 12/28/2012 [time] => 5:55pm [value] => 85.995 )
</pre>

I.e. 100 USD is now worth $85.995 in Japan, this is called 円高(endaka) in Japanese :)


Currency.php
<pre lang="php" line="1">
<?php

class Currency {

    public function __construct() {

    }

    public function convert($from='USD', $to='GBP', $amount=null) {

        $url = 'http://finance.yahoo.com/d/quotes.csv?e=.csv&f=sl1d1t1&s=' . $from . $to . '=X';
        $handle = @fopen($url, 'r');
        if ($handle) {
            $result = fgets($handle, 4096);
            fclose($handle);
        }
        $result = preg_replace('/"/', '', $result);
        $array = explode(',', $result);

        $ret = array('currency' => substr($array[0], 0, strlen($array[0]) - 2),
                    'rate' => $array[1],
                    'date' => $array[2],
                    'time' => $array[3]);
        if($amount != null) {
            $ret['value'] = $amount * ($array[1] / 100.0);
        }
        return $ret;
    }

}

//  $currency = new Currency();
//  print_r($currency->convert('USD', 'JPY', 100));


?>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>973</wp:post_id>
		<wp:post_date>2012-12-30 11:06:32</wp:post_date>
		<wp:post_date_gmt>2012-12-30 11:06:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-currency-conversion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="currency-conversion"><![CDATA[currency conversion]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1327</wp:comment_id>
			<wp:comment_author><![CDATA[terbaru]]></wp:comment_author>
			<wp:comment_author_email>HartisQuartucci376@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.acelic.net</wp:comment_author_url>
			<wp:comment_author_IP>120.197.85.173</wp:comment_author_IP>
			<wp:comment_date>2013-07-03 19:15:06</wp:comment_date>
			<wp:comment_date_gmt>2013-07-03 19:15:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We're a gaggle of volunteers and starting a brand new scheme in our community. Your site offered us with valuable info to paintings on. You've done an impressive process and our entire neighborhood will likely be thankful to you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372878906.6659109592437744140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1351</wp:comment_id>
			<wp:comment_author><![CDATA[WEb Fortune Master Online Review]]></wp:comment_author>
			<wp:comment_author_email>lynnefrederick@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://organiconthegreen.wordpress.com/2010/10/01/organic-coffee-a-choice-in-everywhere-from-convenience-stores-to-fine-dining/</wp:comment_author_url>
			<wp:comment_author_IP>159.253.137.95</wp:comment_author_IP>
			<wp:comment_date>2013-07-08 09:20:48</wp:comment_date>
			<wp:comment_date_gmt>2013-07-08 09:20:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty nice post. I just stumbled upon your blog and wanted to 
say that I have really enjoyed browsing your blog posts.
In any case I'll be subscribing to your feed and I hope you write again soon!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373275248.76360797882080078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Legend of Zelda - Java Game Engine</title>
		<link>http://ken-soft.com/2012/12/30/legend-of-zelda-java-game-engine/</link>
		<pubDate>Sun, 30 Dec 2012 11:10:33 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=986</guid>
		<description></description>
		<content:encoded><![CDATA[Zelda Game written in Java - Still a new project so it's definitely a work in progress.
This is essentially my pet project to force me to finish my Java 2D Gaming Engine :)
You can follow the project's status on GitHub: <a href="https://github.com/kennycason/java_games/" target="_blank">here</a>

<table>
    <tr>
        <td>
            <img src="http://ken-soft.com/images/zelda/zelda8.png" width="290px"/>
        </td>
        <td>
            <img src="http://ken-soft.com/images/zelda/zelda5.png" width="290px"/>
        </td>
    </tr>
    <tr>
        <td>
            <img src="http://ken-soft.com/images/zelda/zelda7.png" width="290px"/>
        </td>
        <td>
            <img src="http://ken-soft.com/images/zelda/zelda6.png" width="290px"/>
        </td>
    </tr>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>986</wp:post_id>
		<wp:post_date>2012-12-30 11:10:33</wp:post_date>
		<wp:post_date_gmt>2012-12-30 11:10:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>legend-of-zelda-java-game-engine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="legend-of-zelda"><![CDATA[Legend of Zelda]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Project Euler - Java</title>
		<link>http://ken-soft.com/2013/04/24/project-euler-java/</link>
		<pubDate>Wed, 24 Apr 2013 05:45:26 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=1014</guid>
		<description></description>
		<content:encoded><![CDATA[In an attempt to keep my brain from rusting I decided to try and work through all the <a href="http://projecteuler.net" target="_blank">Project Euler</a> problems. So far I have solved 72. Still have a lot to go, and I'm sure they will get much harder soon.<br/>
My current score :)<br/>
<img src="http://projecteuler.net/profile/kennycason.png"/><br/>

All problems can be found on my <a href="https://github.com/kennycason/euler" title="Github Page" target="_blank">Github Page Here</a></br/>

For a full list of all the problems I've solved, solutions, and times visit my dedicated page: http://ken-soft.com/project-euler/<br/>
looks something like this:<br/>
<table border="1" cellpadding="4">
<tr>
<td></td>
<td>Answer</td>
<td>Time</td>
<td>@Source</td>
</tr>
<tr>
<td><b>#1</b></td>
<td>233168</td>
<td style="background-color:#01ff00">0.002ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_001/_001.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#2</b></td>
<td>4613732</td>
<td style="background-color:#01ff00">0.002ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_002/_002.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#3</b></td>
<td>6857</td>
<td style="background-color:#01ff00">0.002ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_003/_003.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#4</b></td>
<td>906609</td>
<td style="background-color:#05fb00">0.033ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_004/_004.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#5</b></td>
<td>232792560</td>
<td style="background-color:#53ad00">0.65ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_005/_005.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#6</b></td>
<td>25164150</td>
<td style="background-color:#00ff00">0.0ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_006/_006.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#7</b></td>
<td>104743</td>
<td style="background-color:#04fc00">0.027ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_007/_007.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#8</b></td>
<td>40824</td>
<td style="background-color:#01ff00">0.001ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_008/_008.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#9</b></td>
<td>31875000</td>
<td style="background-color:#728e00">0.893ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_009/_009.java" target="_blank" style="text-decoration: none; color: black;">Link</a></td>
</tr>
<tr>
<td><b>#10</b></td>
<td>142913828922</td>
<td style="background-color:#a85800">1.313ms</td>
<td><a href="https://github.com/kennycason/euler/blob/master/src/_010/_010.java" target="_blank" style="text-decoration: none; color: black;">Link</a>
</table>


Please do not just copy/paste my answers as that would defeat the purpose of Project Euler, but instead try to solve them on your own first :)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1014</wp:post_id>
		<wp:post_date>2013-04-24 05:45:26</wp:post_date>
		<wp:post_date_gmt>2013-04-24 05:45:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>project-euler-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algorithms"><![CDATA[algorithms]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="learning"><![CDATA[Learning]]></category>
		<category domain="category" nicename="logic-problems"><![CDATA[Logic Problems]]></category>
		<category domain="category" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="post_tag" nicename="mathematics"><![CDATA[Mathematics]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="project-euler"><![CDATA[project euler]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Support Vector Machine / サポートベクターマシン / 支持向量机</title>
		<link>http://ken-soft.com/2013/06/16/support-vector-machine-%e3%82%b5%e3%83%9d%e3%83%bc%e3%83%88%e3%83%99%e3%82%af%e3%82%bf%e3%83%bc%e3%83%9e%e3%82%b7%e3%83%b3-%e6%94%af%e6%8c%81%e5%90%91%e9%87%8f%e6%9c%ba/</link>
		<pubDate>Sun, 16 Jun 2013 12:03:27 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=1036</guid>
		<description></description>
		<content:encoded><![CDATA[Source code on Github: <a href="https://github.com/kennycason/supportvectormachine" target="_blank">here</a>
Java OOP Port from C LibSVM library

<table>
<tr>
<td>
Linear Kernel
<img src="https://raw.github.com/kennycason/supportvectormachine/master/save/svm_linear.png" width="300"/>
</td>
<td>
Gaussian Kernel
<img src="https://raw.github.com/kennycason/supportvectormachine/master/save/svm_gaussian.png" width="300"/>
</td>
</tr>
<tr>
<td>
Polynomial Kernel
<img src="https://raw.github.com/kennycason/supportvectormachine/master/save/svm_polynomial.png" width="300"/>
</td>
<td>
Polynomial Kernel
<img src="https://raw.github.com/kennycason/supportvectormachine/master/save/svm_polynomial2.png" width="300"/>
</td>
</tr>
</table>


**Problem Loaders**
<pre lang="java" line="0">
IProblemLoader loader = new LibSVMProblemLoader();
		
Problem train = loader.load("svm/data/libsvm/linear_train.libsvm");
Problem test = loader.load("svm/data/libsvm/linear_test.libsvm");
/*
The typical LibSVM format, the first item represents the Class, the remaining 
elements are prefixed by the index in the vector input that they represent

-1 1:1 2:1
-1 1:1 2:-1
-1 1:-1 2:1
-1 1:-1 2:-1
+1 1:5 2:5
+1 1:10 2:10
+1 2:10
*/

IProblemLoader loader = new SimpleProblemLoader(); 
Problem train = loader.load("svm/data/linear_train.svm");
Problem test = loader.load("svm/data/linear_test.svm");
/*
In this simple format, the first item represents the Class, the remaining 
elements represent features of the class
i.e. -1 1 1 means Class = -1, input vector <1, 1>. 
this simple format does not allow for sparse vectors

-1 1 1
-1 1 -1
-1 -1 1
-1 -1 -1
1 5 5
1 10 10
1 0 10
*/
</pre>

Sample Outputs
<code>
Loading problem: svm/data/linear_train.svm
-1: 1 1 
-1: 1 -1 
-1: -1 1 
-1: -1 -1 
1: 5 5 
1: 10 10 
1: 0 10 
Loading problem: svm/data/linear_test.svm
-1: 1 1 
-1: 1 -1 
-1: -1 1 
-1: -1 -1 
1: 5 5 
1: 10 10 
1: 0 10 
Loaded.
Training...
Testing...
-1: 1.0 1.0 
-1: 1.0 -1.0 
-1: -1.0 1.0 
-1: -1.0 -1.0 
1: 5.0 5.0 
1: 10.0 10.0 
1: 0.0 10.0 
7/7 correct
Accuracy=1.0
Done.
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1036</wp:post_id>
		<wp:post_date>2013-06-16 12:03:27</wp:post_date>
		<wp:post_date_gmt>2013-06-16 12:03:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>support-vector-machine-%e3%82%b5%e3%83%9d%e3%83%bc%e3%83%88%e3%83%99%e3%82%af%e3%82%bf%e3%83%bc%e3%83%9e%e3%82%b7%e3%83%b3-%e6%94%af%e6%8c%81%e5%90%91%e9%87%8f%e6%9c%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="machine-learning"><![CDATA[machine learning]]></category>
		<category domain="post_tag" nicename="support-vector-machine"><![CDATA[Support Vector Machine]]></category>
		<category domain="post_tag" nicename="%e3%82%b5%e3%83%9d%e3%83%bc%e3%83%88%e3%83%99%e3%82%af%e3%82%bf%e3%83%bc%e3%83%9e%e3%82%b7%e3%83%b3"><![CDATA[サポートベクターマシン]]></category>
		<category domain="post_tag" nicename="%e6%94%af%e6%8c%81%e5%90%91%e9%87%8f%e6%9c%ba"><![CDATA[支持向量机]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Self-Organizing Map / 自己組織化写像 / 自組織映射網路</title>
		<link>http://ken-soft.com/2013/06/16/self-organizing-map-%e8%87%aa%e5%b7%b1%e7%b5%84%e7%b9%94%e5%8c%96%e5%86%99%e5%83%8f-%e8%87%aa%e7%b5%84%e7%b9%94%e6%98%a0%e5%b0%84%e7%b6%b2%e8%b7%af/</link>
		<pubDate>Sun, 16 Jun 2013 12:06:24 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=1044</guid>
		<description></description>
		<content:encoded><![CDATA[Source code on Github: <a href="https://github.com/kennycason/selforganizingmap" target="_blank">here</a>
<table>
<tr>
<td>
8 colors, 3D Vector(R,G,B)
<img src="https://raw.github.com/kennycason/selforganizingmap/master/save/images/som_rgb_3d_colors_8.png" width="300"/>
</td>
<td>
8 colors, 6D Vector(Rh,Rl,Gh,Gl,Bh,Bl)
<img src="https://raw.github.com/kennycason/selforganizingmap/master/save/images/som_rgb_6d_colors_8.png" width="300"/>
</td>
</tr>
</table>

Grid, 4pts<br/>
<img src="https://raw.github.com/kennycason/selforganizingmap/master/save/images/som_4d_grid.png" width="600px"/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1044</wp:post_id>
		<wp:post_date>2013-06-16 12:06:24</wp:post_date>
		<wp:post_date_gmt>2013-06-16 12:06:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>self-organizing-map-%e8%87%aa%e5%b7%b1%e7%b5%84%e7%b9%94%e5%8c%96%e5%86%99%e5%83%8f-%e8%87%aa%e7%b5%84%e7%b9%94%e6%98%a0%e5%b0%84%e7%b6%b2%e8%b7%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="artificial-intelligence"><![CDATA[Artificial Intelligence]]></category>
		<category domain="post_tag" nicename="machine-learning"><![CDATA[machine learning]]></category>
		<category domain="post_tag" nicename="self-organizing-map"><![CDATA[Self-Organizing Map]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e5%b7%b1%e7%b5%84%e7%b9%94%e5%8c%96%e5%86%99%e5%83%8f"><![CDATA[自己組織化写像]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e7%b5%84%e7%b9%94%e6%98%a0%e5%b0%84%e7%b6%b2%e8%b7%af"><![CDATA[自組織映射網路]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Minesweeper - Java Game Engine</title>
		<link>http://ken-soft.com/2013/06/17/minesweeper-java-game-engine/</link>
		<pubDate>Mon, 17 Jun 2013 11:38:01 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=1063</guid>
		<description></description>
		<content:encoded><![CDATA[Minesweeper is written in Java.
This is a small demo I built using my (uncomplete) Java 2D Gaming Engine.
You can follow the project's status on GitHub: <a href="https://github.com/kennycason/java_games/" target="_blank">here</a>
The source code unique to Minesweeper exclusively starts <a href="https://github.com/kennycason/java_games/tree/master/src/game/minesweeper/" target="_blank">here</a>

<table>
    <tr>
        <td>
            <img src="https://raw.github.com/kennycason/java_games/master/doc/screenshots/minesweeper_winning.jpg" width="300px"/>
        </td>
        <td>
            <img src="https://raw.github.com/kennycason/java_games/master/doc/screenshots/minesweeper1.png" width="300px"/>
        </td>
    </tr>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1063</wp:post_id>
		<wp:post_date>2013-06-17 11:38:01</wp:post_date>
		<wp:post_date_gmt>2013-06-17 11:38:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>minesweeper-java-game-engine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="game-development"><![CDATA[Game Dev]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="minesweeper"><![CDATA[minesweeper]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ultimate TicTacToe</title>
		<link>http://ken-soft.com/2013/06/18/ultimate-tictactoe/</link>
		<pubDate>Tue, 18 Jun 2013 23:47:57 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=1070</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://ken-soft.com/tictactoe/" target="_blank">Click Here to Play!</a>
The code is found on my Github: <a href="https://github.com/kennycason/ultimate_tictactoe" target="_blank">here</a>
Rules are very well explained <a href="http://mathwithbaddrawings.com/2013/06/16/ultimate-tic-tac-toe/" target="_blank">here</a>

<img src="https://raw.github.com/kennycason/ultimate_tictactoe/master/screenshot.png" width="600px"/>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date>2013-06-18 23:47:57</wp:post_date>
		<wp:post_date_gmt>2013-06-18 23:47:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ultimate-tictactoe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在购买域名时，议价失败。Failed Domain Name Negotiation in Chinese.</title>
		<link>http://ken-soft.com/2013/07/07/%e5%9c%a8%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d%e6%97%b6%ef%bc%8c%e8%ae%ae%e4%bb%b7%e5%a4%b1%e8%b4%a5%e3%80%82failed-domain-name-negotiation-in-chinese/</link>
		<pubDate>Sun, 07 Jul 2013 09:40:46 +0000</pubDate>
		<dc:creator>kenny</dc:creator>
		<guid isPermaLink="false">http://ken-soft.com/?p=1083</guid>
		<description></description>
		<content:encoded><![CDATA[Today I was online helping a friend purchase a domain, which was owned by a Chinese gentlemen. 

He was asking $7999 for a domain that we knew was valued somewhere around $1000-4000 (As the same domain was being auctioned by him on another site!)

Clearly overpriced, We decided to directly mail him and haggle a bit, which is very common when negotiating for domain names, especially because the value of domains is very subjective to begin with.

Here was the initial conversation:

us:
<blockquote>Hi,
I'm interested in the domain name [DOMAIN].com.
How much do you want to sell it for?
Best,</blockquote>

him:
<blockquote>HI
[DOMAIN].com  7999 USD</blockquote>

We only wanted to pay around $1000 dollars, Also due to his email alias we found out he was Chinese, so I sent the following message:

<blockquote>先生您好,
谢谢您快回信给我。我觉得一千块钱差不多。给我一个您认为最低能接受的价格吧。</blockquote>

To which he promptly responded:

<blockquote>感谢你的关注，1000 块 你能买到任何双单词 CVCV COM吗？ 如果有的话请你选择其他域名购买。
7999 美元是最优惠的价格了！</blockquote>

At this point I was a bit unsure how to pursue, as he was unwilling to even budge a dollar. As such there were a few questions going through my head:

1. Was he offended by the low initial offer? If so, then why did he have the same domain name up for bid for such a low price on another site?
2. Was my Chinese not persuasive enough?
3. Was he offended that I messaged him in Chinese?
4. Does he just drive a hard bargain hoping we will just agree to pay $7999?

If I am to reply, how should I go about doing so?
Regardless, I didn't see too much use in further negotiations so decided to just respond with:

<blockquote>先生,
好的。我明白了。对不起打扰你。如果以后改变想法的话请您发邮件给我。
谢谢</blockquote>

Thoughts? 
中国人,求有议价经验的人给我指教一下我怎么才能成功。举一些例子可以帮我很多。
谢谢:) 







]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1083</wp:post_id>
		<wp:post_date>2013-07-07 09:40:46</wp:post_date>
		<wp:post_date_gmt>2013-07-07 09:40:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d%e6%97%b6%ef%bc%8c%e8%ae%ae%e4%bb%b7%e5%a4%b1%e8%b4%a5%e3%80%82failed-domain-name-negotiation-in-chinese</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="business"><![CDATA[Business]]></category>
		<category domain="post_tag" nicename="chinese-2"><![CDATA[chinese]]></category>
		<category domain="post_tag" nicename="domain-name"><![CDATA[domain name]]></category>
		<category domain="post_tag" nicename="fail"><![CDATA[fail]]></category>
		<category domain="post_tag" nicename="negotiation"><![CDATA[negotiation]]></category>
		<category domain="post_tag" nicename="%e4%b8%ad%e6%96%87"><![CDATA[中文]]></category>
		<category domain="post_tag" nicename="%e5%a4%b1%e8%b4%a5"><![CDATA[失败]]></category>
		<category domain="post_tag" nicename="%e8%ae%ae%e4%bb%b7"><![CDATA[议价]]></category>
		<category domain="post_tag" nicename="%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d"><![CDATA[购买域名]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1458</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.52.15</wp:comment_author_IP>
			<wp:comment_date>2013-09-27 17:12:47</wp:comment_date>
			<wp:comment_date_gmt>2013-09-27 17:12:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Also which sentence sounded arrogant? I asked a Chinese person how it sounded before I sent it :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1456</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380301967.92415904998779296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:82:{s:15:"comment_post_ID";i:1083;s:14:"comment_author";s:5:"kenny";s:20:"comment_author_email";s:23:"kenneth.cason@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:97:"Also which sentence sounded arrogant? I asked a Chinese person how it sounded before I sent it :)";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:1456;s:7:"user_ID";i:1;s:7:"user_ip";s:12:"72.204.52.15";s:10:"user_agent";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:22.0) Gecko/20100101 Firefox/22.0";s:8:"referrer";s:197:"http://ken-soft.com/2013/07/07/%e5%9c%a8%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d%e6%97%b6%ef%bc%8c%e8%ae%ae%e4%bb%b7%e5%a4%b1%e8%b4%a5%e3%80%82failed-domain-name-negotiation-in-chinese/?replytocom=1456";s:4:"blog";s:19:"http://ken-soft.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:181:"http://ken-soft.com/2013/07/07/%e5%9c%a8%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d%e6%97%b6%ef%bc%8c%e8%ae%ae%e4%bb%b7%e5%a4%b1%e8%b4%a5%e3%80%82failed-domain-name-negotiation-in-chinese/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:97:"Also which sentence sounded arrogant? I asked a Chinese person how it sounded before I sent it :)";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:4:"1083";s:19:"POST_comment_parent";s:4:"1456";s:32:"POST__wp_unfiltered_html_comment";s:10:"bfff828579";s:26:"POST_akismet_comment_nonce";s:10:"fbd816cfab";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:6:"TMPDIR";s:28:"/home/content/45/7726045/tmp";s:5:"PHPRC";s:30:"/home/content/45/7726045/html/";s:4:"TEMP";s:28:"/home/content/45/7726045/tmp";s:17:"PHP_FCGI_CHILDREN";s:1:"0";s:4:"PATH";s:29:"/sbin:/usr/sbin:/bin:/usr/bin";s:3:"PWD";s:12:"/web/cgi-bin";s:5:"SHLVL";s:1:"0";s:3:"SPI";s:4:"TRUE";s:3:"TMP";s:28:"/home/content/45/7726045/tmp";s:21:"PHP_FCGI_MAX_REQUESTS";s:6:"100000";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"UkW8j7iowdIAAG9Te0sAAABk";s:10:"SCRIPT_URL";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:40:"http://ken-soft.com/wp-comments-post.php";s:11:"DOMAIN_NAME";s:12:"ken-soft.com";s:18:"REAL_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:3:"XID";s:7:"7726045";s:11:"REDIRECT302";s:0:"";s:12:"GD_ERROR_DOC";s:23:".errordocs/missing.html";s:23:"SUBDOMAIN_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:13:"REAL_USERNAME";s:5:"mppoc";s:14:"userlimit_name";s:7:"7726045";s:15:"userlimit_limit";s:3:"100";s:14:"GD_PHP_HANDLER";s:12:"x-httpd-php5";s:20:"PARENT_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:9:"HTTP_HOST";s:12:"ken-soft.com";s:15:"HTTP_USER_AGENT";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:22.0) Gecko/20100101 Firefox/22.0";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:197:"http://ken-soft.com/2013/07/07/%e5%9c%a8%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d%e6%97%b6%ef%bc%8c%e8%ae%ae%e4%bb%b7%e5%a4%b1%e8%b4%a5%e3%80%82failed-domain-name-negotiation-in-chinese/?replytocom=1456";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"246";s:15:"LD_LIBRARY_PATH";s:16:"/web/httpd24/lib";s:16:"SERVER_SIGNATURE";s:57:"<address>Apache Server at ken-soft.com Port 80</address>
";s:11:"SERVER_NAME";s:12:"ken-soft.com";s:11:"SERVER_ADDR";s:13:"184.168.187.1";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"72.204.52.15";s:13:"DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:14:"REQUEST_SCHEME";s:4:"http";s:21:"CONTEXT_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:12:"SERVER_ADMIN";s:24:"support@secureserver.net";s:15:"SCRIPT_FILENAME";s:61:"/var/chroot/home/content/45/7726045/html/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"36431";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1380301967";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-07-07 09:56:15";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1456</wp:comment_id>
			<wp:comment_author><![CDATA[Xiang Li]]></wp:comment_author>
			<wp:comment_author_email>xiangli.cs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.180.19.67</wp:comment_author_IP>
			<wp:comment_date>2013-08-21 06:00:08</wp:comment_date>
			<wp:comment_date_gmt>2013-08-21 06:00:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am pretty sure he thought you offend him. 
差不多 is not a formal Chinese word and sometime regard as belittling when doing bargaining. 
Also your last sentence is a kind of arrogant.
Moreover, based on my experience, you should not tell him the price you can offer at the first time when negotiating with Chinese. 

You should probably say like:

非常感谢您的及时回复。 我的心理预期价位是xxxx。不知道价格是否有商量的余地？

I do think you can get a cheaper price, since price negotiation is the Chinese culture. But maybe not much cheaper than the price he offered.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377064808.1850349903106689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380301772.828136920928955078125;s:7:"message";s:44:"kenny changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1430</wp:comment_id>
			<wp:comment_author><![CDATA[Jack]]></wp:comment_author>
			<wp:comment_author_email>jack@pryne.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.36.134.127</wp:comment_author_IP>
			<wp:comment_date>2013-07-23 01:28:23</wp:comment_date>
			<wp:comment_date_gmt>2013-07-23 01:28:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chinese people think foreigners are all extremely wealthy &amp; think we'll cave because, hey, we're rich, right? Just hold firm &amp; don't be afraid to let him know he's way over the mark. He wants to close this deal, &amp; he will come down, but you're going to have to push harder than Westerners usually do (out of politeness.)
Good luck!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374542903.970138072967529296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1457</wp:comment_id>
			<wp:comment_author><![CDATA[kenny]]></wp:comment_author>
			<wp:comment_author_email>kenneth.cason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.204.52.15</wp:comment_author_IP>
			<wp:comment_date>2013-09-27 17:10:35</wp:comment_date>
			<wp:comment_date_gmt>2013-09-27 17:10:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot! :) My Chinese is still pretty bad haha]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1456</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380301835.7284519672393798828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"kenny";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:94:{s:15:"comment_post_ID";i:1083;s:14:"comment_author";s:5:"kenny";s:20:"comment_author_email";s:23:"kenneth.cason@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:52:"Thanks a lot! :) My Chinese is still pretty bad haha";s:14:"comment_parent";i:1456;s:7:"user_ID";i:1;s:7:"user_ip";s:12:"72.204.52.15";s:10:"user_agent";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:22.0) Gecko/20100101 Firefox/22.0";s:8:"referrer";s:46:"http://ken-soft.com/wp-admin/edit-comments.php";s:4:"blog";s:19:"http://ken-soft.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:181:"http://ken-soft.com/2013/07/07/%e5%9c%a8%e8%b4%ad%e4%b9%b0%e5%9f%9f%e5%90%8d%e6%97%b6%ef%bc%8c%e8%ae%ae%e4%bb%b7%e5%a4%b1%e8%b4%a5%e3%80%82failed-domain-name-negotiation-in-chinese/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"1456";s:20:"POST_comment_post_ID";s:4:"1083";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"1";s:9:"POST_mode";s:6:"detail";s:32:"POST__ajax_nonce-replyto-comment";s:10:"0d1093a9ce";s:32:"POST__wp_unfiltered_html_comment";s:10:"2defabb6de";s:12:"POST_content";s:52:"Thanks a lot! :) My Chinese is still pretty bad haha";s:7:"POST_id";s:4:"1083";s:21:"POST_comments_listing";s:3:"all";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:6:"TMPDIR";s:28:"/home/content/45/7726045/tmp";s:5:"PHPRC";s:30:"/home/content/45/7726045/html/";s:4:"TEMP";s:28:"/home/content/45/7726045/tmp";s:17:"PHP_FCGI_CHILDREN";s:1:"0";s:4:"PATH";s:29:"/sbin:/usr/sbin:/bin:/usr/bin";s:3:"PWD";s:12:"/web/cgi-bin";s:5:"SHLVL";s:1:"0";s:3:"SPI";s:4:"TRUE";s:3:"TMP";s:28:"/home/content/45/7726045/tmp";s:21:"PHP_FCGI_MAX_REQUESTS";s:6:"100000";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"UNIQUE_ID";s:24:"UkW8C7iowdIAAEaY@@AAAAB4";s:10:"SCRIPT_URL";s:24:"/wp-admin/admin-ajax.php";s:10:"SCRIPT_URI";s:43:"http://ken-soft.com/wp-admin/admin-ajax.php";s:11:"DOMAIN_NAME";s:12:"ken-soft.com";s:18:"REAL_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:3:"XID";s:7:"7726045";s:11:"REDIRECT302";s:0:"";s:12:"GD_ERROR_DOC";s:23:".errordocs/missing.html";s:23:"SUBDOMAIN_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:13:"REAL_USERNAME";s:5:"mppoc";s:14:"userlimit_name";s:7:"7726045";s:15:"userlimit_limit";s:3:"100";s:14:"GD_PHP_HANDLER";s:12:"x-httpd-php5";s:20:"PARENT_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:9:"HTTP_HOST";s:12:"ken-soft.com";s:15:"HTTP_USER_AGENT";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:22.0) Gecko/20100101 Firefox/22.0";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"CONTENT_TYPE";s:48:"application/x-www-form-urlencoded; charset=UTF-8";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:12:"HTTP_REFERER";s:46:"http://ken-soft.com/wp-admin/edit-comments.php";s:14:"CONTENT_LENGTH";s:3:"349";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:5:"close";s:11:"HTTP_PRAGMA";s:8:"no-cache";s:18:"HTTP_CACHE_CONTROL";s:8:"no-cache";s:15:"LD_LIBRARY_PATH";s:16:"/web/httpd24/lib";s:16:"SERVER_SIGNATURE";s:57:"<address>Apache Server at ken-soft.com Port 80</address>
";s:11:"SERVER_NAME";s:12:"ken-soft.com";s:11:"SERVER_ADDR";s:13:"184.168.187.1";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"72.204.52.15";s:13:"DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:14:"REQUEST_SCHEME";s:4:"http";s:21:"CONTEXT_DOCUMENT_ROOT";s:40:"/var/chroot/home/content/45/7726045/html";s:12:"SERVER_ADMIN";s:24:"support@secureserver.net";s:15:"SCRIPT_FILENAME";s:64:"/var/chroot/home/content/45/7726045/html/wp-admin/admin-ajax.php";s:11:"REMOTE_PORT";s:5:"36251";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1380301835";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-07-07 09:56:15";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
